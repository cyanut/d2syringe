protdic={'C': {'BNLS': {0: {'args': [],
                    'id': 0,
                    'name': 'NULL',
                    'remark': 'This message is empty and may be used to keep the connection alive. The client is not required to send this. There is no response from the server.\n\nIf the connection to the BNLS server is idle for more than one minute, the BNLS server will disconnect the client. To avoid that, use this message.',
                    'source': 'C',
                    'type': 'BNLS'},
                1: {'args': [['DWORD', 'Server Token'],
                             ['STRING', 'CD key']],
                    'id': 1,
                    'name': 'CDKEY',
                    'remark': 'This message will encrypt your CD-key, and will reply with the properly encoded CD-key as it is supposed to be sent in the message SID_AUTH_CHECK (0x51). It now works with CD-keys of all products.',
                    'source': 'C',
                    'type': 'BNLS'},
                2: {'args': [['STRING', 'Account name'],
                             ['STRING', 'Password']],
                    'id': 2,
                    'name': 'LOGONCHALLENGE',
                    'remark': 'This message will give you data you need for SID_AUTH_ACCOUNTLOGON (0x53). You must send this before you can send BNLS_LOGONPROOF (0x03).',
                    'source': 'C',
                    'type': 'BNLS'},
                3: {'args': [['DWORD',
                              '[16] Data from SID_AUTH_ACCOUNTLOGON']],
                    'id': 3,
                    'name': 'LOGONPROOF',
                    'remark': 'This message will parse data from SID_AUTH_ACCOUNTLOGON (0x53) and will reply with data to send in SID_AUTH_ACCOUNTLOGONPROOF (0x54). You must send BNLS_LOGONCHALLENGE (0x02) before you can send this.',
                    'source': 'C',
                    'type': 'BNLS'},
                4: {'args': [['STRING', 'Account name'],
                             ['STRING', 'Account password']],
                    'id': 4,
                    'name': 'CREATEACCOUNT',
                    'remark': 'This message will request the data you need for SID_AUTH_ACCOUNTCREATE (0x52).',
                    'source': 'C',
                    'type': 'BNLS'},
                5: {'args': [['STRING', 'Account name'],
                             ['STRING', 'Account old password'],
                             ['STRING', 'Account new password']],
                    'id': 5,
                    'name': 'CHANGECHALLENGE',
                    'remark': 'This message will give you data you need for SID_AUTH_ACCOUNTCHANGE (0x55). This message is used to change the password of an existing account.\n\nYou must send this before you can send BNLS_CHANGEPROOF (0x06).',
                    'source': 'C',
                    'type': 'BNLS'},
                6: {'args': [['DWORD',
                              '[16] Data from SID_AUTH_ACCOUNTCHANGE (0x55)']],
                    'id': 6,
                    'name': 'CHANGEPROOF',
                    'remark': 'This message will parse data from SID_AUTH_ACCOUNTCHANGE (0x55) and will reply with data to send in SID_AUTH_ACCOUNTCHANGEPROOF (0x56).\n\nYou must send BNLS_CHANGECHALLENGE (0x05) before you can send this.',
                    'source': 'C',
                    'type': 'BNLS'},
                7: {'args': [['STRING', 'Account name'],
                             ['STRING', 'Account old password'],
                             ['STRING',
                              'Account new password (May be identical to old password but still must be provided)']],
                    'id': 7,
                    'name': 'UPGRADECHALLENGE',
                    'remark': 'This message will give you data you need for SID_AUTH_ACCOUNTUPGRADE (0x57).\nThis message is used to upgrade an existing account from Old Logon System to New Logon System.\nYou must send this before you can send BNLS_UPGRADEPROOF (0x08).\n\nImportant: You must send BNLS_LOGONCHALLENGE (0x02) or BNLS_CHANGECHALLENGE (0x05) before sending this. Otherwise, the results are meaningless.\n\nNote: Since Old Logon System and New Logon System are incompatible, you can change the password and upgrade the account at the same time.\nThis is not required - the old password and the new password may be identical for this message.',
                    'source': 'C',
                    'type': 'BNLS'},
                8: {'args': [['DWORD',
                              'Session key from SID_AUTH_ACCOUNTUPGRADE (0x57)']],
                    'id': 8,
                    'name': 'UPGRADEPROOF',
                    'remark': 'This message will parse data from SID_AUTH_ACCOUNTUPGRADE (0x57) and will reply with data to send in SID_AUTH_ACCOUNTUPGRADEPROOF (0x58).\n\nYou must send BNLS_UPGRADECHALLENGE (0x07) before you can send this.',
                    'source': 'C',
                    'type': 'BNLS'},
                9: {'args': [['DWORD', 'Product ID'],
                             ['DWORD', 'Version DLL digit'],
                             ['STRING', 'Checksum formula.']],
                    'id': 9,
                    'name': 'VERSIONCHECK',
                    'remark': 'This message will request a fast version check. Now works with all products.\n\nVersion DLL Digit must be in the range 0-7. (For example, for IX86Ver1.mpq this is 1)\n\nValid ProductIDs are:\n\n0x01: Starcraft\n0x02: Starcraft: Broodwar\n0x03: Warcraft II: BNE\n0x04: Diablo II\n0x05: Diablo II: LoD\n0x06: Starcraft: Japanese\n0x07: Warcraft III\n0x08: Warcraft III: The Frozen Throne\n\nIf you are not using BNLS, and are instead using JBLS or something equivalent, there are also:\n\n0x09: Diablo Retail\n0x0A: Diablo Shareware\n0x0B: Starcraft Shareware\n\nView consts: [pas cpp vb]',
                    'source': 'C',
                    'type': 'BNLS'},
                10: {'args': [['DWORD',
                               '[5] Password proof from Battle.net']],
                     'id': 10,
                     'name': 'CONFIRMLOGON',
                     'remark': 'This message will confirm that the server really knows your password.\n\nThis packet may only be used after "proof" messages: BNLS_LOGONPROOF (0x03), BNLS_CHANGEPROOF (0x06), BNLS_UPGRADEPROOF (0x08).',
                     'source': 'C',
                     'type': 'BNLS'},
                11: {'args': [['DWORD', 'Size of Data'],
                              ['DWORD', 'Flags'],
                              ['VOID', 'Data to be hashed'],
                              ['DWORD', 'Client Key (Double Hash Only)'],
                              ['DWORD', 'Server Key (Double Hash Only)'],
                              ['DWORD', 'Cookie (Cookie Hash Only)']],
                     'id': 11,
                     'name': 'HASHDATA',
                     'remark': 'This message will calculate the hash of the given data.\nThe hashing algorithm used is the Battle.net standard hashing algorithm also known as "Broken SHA-1"\n\n*For clarity, the optional fields come after the VOID and not before.\n\nThe flags may be zero, or any bitwise combination of the following flags:\n\n0x01: Flags Unused\nThis flag has no effect.\n\n0x02: Double Hash\nIf this flag is present, the server will calculate a double hash.\nFirst it will calculate the hash of the data. Then it will prepend the client key and the server key to the resulting hash, and calculate the hash of the result. If this flag is present, the client key and server key DWORDs must be specified in the request after the data.\nThis may be used to calculate password hashes for the "Old Logon System".\n\n0x04: Cookie Hash\nIf this flag is present, a cookie DWORD is specified in the request.\nThis is an application-defined value that is echoed back to the client in the response.\n\nView consts: [pas cpp vb]',
                     'source': 'C',
                     'type': 'BNLS'},
                12: {'args': [['DWORD', 'Cookie'],
                              ['BYTE', 'Number of CD-keys to encrypt'],
                              ['DWORD', 'Flags'],
                              ['DWORD[]',
                               ' Server session key(s), depending on flags'],
                              ['DWORD[]',
                               ' Client session key(s), depending on flags'],
                              ['STRING[]',
                               ' CD-keys. No dashes or spaces']],
                     'id': 12,
                     'name': 'CDKEY',
                     'remark': "The Cookie has no special meaning to the server and will simply be echoed to the client in the response. The client can use multiple types of CD-keys in the same packet. The number of CD Keys to encrypt should be between 1 and 32.\n\nThe flags may be zero, or any bitwise combination of the defined flags.\nCurrently, the following flags are defined:\n\n0x01: CDKEY_SAME_SESSION_KEY\n0x02: CDKEY_GIVEN_SESSION_KEY\n0x04: CDKEY_MULTI_SERVER_SESSION_KEYS\n0x08: CDKEY_OLD_STYLE_RESPONSES\n\nView consts: [pas cpp vb]\n\nCDKEY_SAME_SESSION_KEY (0x01):\nThis flag specifies that all the returned CD-keys will use the same client session key. When used in combination with CDKEY_GIVEN_SESSION_KEY (0x02), a single client session key is specified immediately after the server session key(s). When used without CDKEY_GIVEN_SESSION_KEY (0x02), a client session key is not sent in the request, and the server will create one.\nWhen not used, each CD-key gets its own client session key. This flag has no effect if the amount of CD-keys to encrypt is 1.\n\nCDKEY_GIVEN_SESSION_KEY (0x02):\nThis flag specifies that the client session keys to be used are specified in the request. When used in combination with CDKEY_SAME_SESSION_KEY (0x01), a single client session key is specified immediately after the server session key(s). When used without CDKEY_SAME_SESSION_KEY (0x01), an array of client session keys (as many as the amount of CD-keys) is specified. When not used, client session keys are not included in the request.\n\nCDKEY_MULTI_SERVER_SESSION_KEYS (0x04):\nThis flag specifies that each CD-key has its own server session key. When specified, an array of server session keys (as many as the amount of CD-keys) is specified. When not specified, a single server session key is specified.\nThis flag has no effect if the amount of CD-keys to encrypt is 1.\n\nCDKEY_OLD_STYLE_RESPONSES (0x08):\nSpecifies that the response to this packet is a number of BNLS_CDKEY (0x01) responses, instead of a BNLS_CDKEY_EX (0x0c) response. The responses are guaranteed to be in the order of the CD-keys' appearance in the request. Note that when this flag is specified, the Cookie cannot be echoed. (It must still be included in the request.)<br />\n<br />\n<br />\n<br />\nNote: When using Lord of Destruction, two CD-keys are encrypted, and they must share the same client session key. There are several ways to do this. One way is to provide both CD-keys in this packet, using the flag CDKEY_SAME_SESSION_KEY (0x01). Another way is to use BNLS_CDKEY (0x01) to encrypt the first CD-key, then use this packet with the flag CDKEY_GIVEN_SESSION_KEY (0x02) to encrypt the second CD-key with the same client session key.",
                     'source': 'C',
                     'type': 'BNLS'},
                13: {'args': [['DWORD', 'NLS revision number']],
                     'id': 13,
                     'name': 'CHOOSENLSREVISION',
                     'remark': 'This message instructs the server which revision of NLS you want to use.\n\nThe NLS revision number is given by Battle.net in SID_AUTH_INFO (0x50).',
                     'source': 'C',
                     'type': 'BNLS'},
                14: {'args': [['STRING', 'Bot ID']],
                     'id': 14,
                     'name': 'AUTHORIZE',
                     'remark': 'This message logs on to the BNLS server.\n\nNote: The bot ID is not case sensitive, and is limited to 31 characters.\n\nThis message was used to let your bot log into the BNLS service. It is no longer required, but it may still be used for backwards compatibility. If you wish to require your bot to login to BNLS to be able to work, you can change your BNLS password and prevent your bot from logging in. Useful for required patches and such.\n\nTo get a bot ID and password, ask Yoni or Skywing.\n\nNote: As of June 28, 2004, BNLS IDs were no longer required to log into BNLS; clients could completely bypass using messages BNLS_AUTHORIZE and BNLS_AUTHORIZEPROOF to log on, and BNLS would validate any client that logged in via these methods. On August 14, 2004, BNLS was again changed so that, while clients can still bypass using messages BNLS_AUTHORIZE and BNLS_AUTHORIZEPROOF to log on, clients that do support these messages will be validated against the bot ID database, which allows those users who still own bot IDs to disable old versions by changing the password on the account.',
                     'source': 'C',
                     'type': 'BNLS'},
                15: {'args': [['DWORD', 'Checksum']],
                     'id': 15,
                     'name': 'AUTHORIZEPROOF',
                     'remark': 'This is sent to the server when receiving the status code in BNLS_AUTHORIZE (0x0E).\n\nFor more info, see the [BNLS Checksum Algorithm] document.\n\nThis message is no longer required. See BNLS_AUTHORIZE for more information.',
                     'source': 'C',
                     'type': 'BNLS'},
                16: {'args': [['DWORD', 'Product ID']],
                     'id': 16,
                     'name': 'REQUESTVERSIONBYTE',
                     'remark': '\nThis message requests the latest version byte for a given product.\n The version byte is sent to Battle.net in SID_AUTH_INFO (0x50).\n\n Valid Product IDs are:\n\n 0x01: Starcraft\n 0x02: Starcraft Brood War\n 0x03: Warcraft II Battle.net Edition\n 0x04: Diablo II\n 0x05: Diablo II: Lord of Destruction\n 0x06: Starcraft Japanese\n 0x07: Warcraft III\n 0x08: Warcraft III: The Frozen Throne\n\n JBLS adds these products:\n\n 0x09: Diablo Retail\n 0x0A: Diablo Shareware\n 0x0B: Starcraft Shareware\n\n BNLS# adds this product:\n\n 0x0C: Warcraft III: Demo\n\n',
                     'source': 'C',
                     'type': 'BNLS'},
                17: {'args': [['DWORD', 'Server IP'],
                              ['BYTE', '[128] Signature']],
                     'id': 17,
                     'name': 'VERIFYSERVER',
                     'remark': "This message verifies a server's signature, which is based on the server's IP. The signature is optionally (currently sent only with Warcraft 3) sent in SID_AUTH_INFO (0x50).",
                     'source': 'C',
                     'type': 'BNLS'},
                18: {'args': [['DWORD', 'Number of slots to reserve']],
                     'id': 18,
                     'name': 'RESERVESERVERSLOTS',
                     'remark': 'This message reserves a number of slots for concurrent NLS checking operations. No other NLS checking messages can be sent before this message has been sent.This message cannot be sent more than once per connection.\n\nBNLS may limit the number of slots to a reasonable value.',
                     'source': 'C',
                     'type': 'BNLS'},
                19: {'args': [['DWORD', 'Slot index'],
                              ['DWORD', 'NLS revision number'],
                              ['DWORD', '[16] Data from account database'],
                              ['DWORD',
                               "[8] Data client's SID_AUTH_ACCOUNTLOGON (0x53) request"]],
                     'id': 19,
                     'name': 'SERVERLOGONCHALLENGE',
                     'remark': "This message initializes a new logon checking session and calculates the values needed for the server's reply to SID_AUTH_ACCOUNTLOGON (0x53).\nBNLS_RESERVESERVERSLOTS(0x12) must be sent before this message to reserve slots for logon checking sessions.\n\nBoth the slot indicies and the NLS revision number follow their respective conventions covered in this documentation. The account database data is first received from the client's SID_AUTH_ACCOUNTCREATE (0x04) message. This information must be stored by the server's account database for logon checking. If the account database data is invalid, then the logon checking session will not succeed.\nThis message initializes a slot with all the information required for it to operate, including the NLS revision. Although BNLS supports switching the NLS revision of a given slot, it can respond to requests slightly faster if the same NLS revision is used for the same slots in a given connection.",
                     'source': 'C',
                     'type': 'BNLS'},
                20: {'args': [['DWORD', 'Slot index'],
                              ['DWORD',
                               "[5] Data from client's SID_AUTH_ACCOUNTLOGONPROOF (0x54)"],
                              ['STRING', "Client's account name"]],
                     'id': 20,
                     'name': 'SERVERLOGONPROOF',
                     'remark': "This message performs two operations. First, it checks if the client's logon was successful. Second, it calculates the data for the server's reply to SID_AUTH_ACCOUNTLOGONPROOF (0x54). If this data is not correct, then the client will not accept the logon attempt as valid.",
                     'source': 'C',
                     'type': 'BNLS'},
                24: {'args': [['DWORD', 'Product ID'],
                              ['DWORD', 'Version DLL digit'],
                              ['DWORD', 'Flags'],
                              ['DWORD', 'Cookie'],
                              ['STRING', 'Checksum formula']],
                     'id': 24,
                     'name': 'VERSIONCHECKEX',
                     'remark': '\nThis message will request a fast version check. Now works with all products.\n Version DLL Digit must be in the range 0-7. (For example, for IX86Ver1.mpq this is 1)\n\n * Valid Product IDs are:\n\n 0x01: Starcraft\n 0x02: Starcraft: Broodwar\n 0x03: Warcraft II: BNE\n 0x04: Diablo II\n 0x05: Diablo II: LoD\n 0x06: Starcraft: Japanese\n 0x07: Warcraft III\n 0x08: Warcraft III: The Frozen Throne\n\n View consts: [pas cpp vb]\n\n ** Currently there are no flags defined so this must be set to zero.\n\n',
                     'source': 'C',
                     'type': 'BNLS'},
                26: {'args': [['DWORD', 'Product ID'],
                              ['DWORD', 'Flags'],
                              ['DWORD', 'Cookie'],
                              ['FILETIME',
                               'Timestamp for version check archive'],
                              ['STRING', 'Version check archive filename'],
                              ['STRING', 'Checksum formula']],
                     'id': 26,
                     'name': 'VERSIONCHECKEX2',
                     'remark': '\nThis message will request a fast version check and parses the version check filename so the client does not have to.\nNow works with all products.\n\n * Valid Product IDs are:\n\n 0x01: Starcraft\n 0x02: Starcraft: Broodwar\n 0x03: Warcraft II: BNE\n 0x04: Diablo II\n 0x05: Diablo II: LoD\n 0x06: Starcraft: Japanese\n 0x07: Warcraft III\n 0x08: Warcraft III: The Frozen Throne\n\n View consts: [pas cpp vb]\n\n ** Currently there are no flags defined, this must be set to zero.\n\n',
                     'source': 'C',
                     'type': 'BNLS'},
                125: {'args': [['BYTE', 'Command'],
                               ['DWORD', 'Cookie'],
                               ['DWORD', 'Client'],
                               ['WORD', 'Length of Seed'],
                               ['VOID', 'Seed'],
                               ['STRING', 'Username (blank)'],
                               ['WORD', 'Length of password'],
                               ['VOID', 'Password'],
                               ['WORD', 'Length Of Warden Packet'],
                               ['VOID', 'Warden Packet Data'],
                               ['DWORD', 'Client'],
                               ['WORD', 'Length Of Seed'],
                               ['VOID', 'Seed'],
                               ['DWORD', 'Unused'],
                               ['BYTE', '[16] Module MD5 Name'],
                               ['WORD', 'Length of Warden 0x05 packet'],
                               ['VOID', 'Warden 0x05 packet'],
                               ['DWORD', 'Client'],
                               ['DWORD', 'Info Type (0x01)'],
                               ['WORD', 'Unused (must be 0x00)'],
                               ['VOID', 'Unused']],
                      'id': 125,
                      'name': 'WARDEN',
                      'remark': 'This packet can currently support 2 methods for SC/BW/W3ROC/W3TFT.\n\nThe first method (commands 0x00 and 0x01) allows you to support warden over battle.net with out any need for installing warden related code and algorithm. It does however, require you to stay connected to the server, or at least, connect each time a new request comes in from Battle.net.\n\nThe second method (commands 0x02 and 0x03) allows you to support the more basic side of warden, why leaving all the more complex things to the BNLS server. One side to this method, allows you to support warden, without having to worry about downloading, loading and executing warden modules, from Battle.net.\n\nA basic description of the packet values above:\nThe command tells the BNLS server how to parse your request.\n\n0x00 is for initializeing a new Battle.net connection, to allocate a packet handler for you, on the server.\n0x01 is for having your warden requests handled, via the preallocated packet handler, done in command 0x00.\n0x02 is for getting the correct data in response to warden 0x05 and a new set of RC4 keys, as well as any other future module requiring packets.\n0x03 is for getting a list of offsets and their contents, to be used in your warden 0x02 handler.\n\n\nThe cookie is sent back to the client, to identify one request from another. With command 0x01, the cookie must remain the same as the one you initialized for a given Battle.net connection, with command 0x00.\n\nIt is important to use different cookies for differnt bots when dealing with commands 0x00 and 0x01, so you do not have a RC4 encryption key corrupted and therefor having to reconnect to Battle.net. For more info on commands 0x00 and 0x01 cookies, see the "First Method" description below.\n\nThe client value identifies what client you connected to Battle.net with. It can be the DWORD you use over Battle.net (such as PXES) or one of the below:\n<dl>\n<dd>0x01 = Starcraft</dd>\n<dd>0x02 = Broodwar</dd>\n<dd>0x03 = Warcraft 2</dd>\n<dd>0x04 = Diablo 2</dd>\n<dd>0x05 = Diablo 2 LOD</dd>\n<dd>0x06 = Starcraft Japan</dd>\n<dd>0x07 = Warcraft 3</dd>\n<dd>0x08 = Warcraft 3 TFT</dd>\n<dd>0x09 = Diablo</dd>\n<dd>0x0A = Diablo SWare</dd>\n<dd>0x0B = Starcraft SWare</dd>\n</dl>\n<br />\nThe seed value is used to initialize wardens cryptography. This value should be the 1st DWORD of the first CDKey hash in C>S 0x51 SID_AUTH_CHECK. For now, only a 4 byte seed is acceptable. If you are using the older logon protocol (packets 0x06, 0x07, etc), this seed value should be zero.<br />\n<br />\nThe Module MD5 Name is obtained from the warden 0x01 packet, starting at the 2nd byte.<br />\n<br />\nThe username and password are for possible future updates, they can be ignored for now - just leave the username blank and the length of password to zero.<br />\n<br />\nFor the result value in the response, see the "Result values and meanings" description below.<br />\n<br />\n<b>First Method (commands 0x00 and 0x01)</b><br />\nThis connection style allows you to support warden over Battle.net without any need for installing warden related code and algorithms into your program. It does however, require you stay connected to the server, or at least, connect each time a new request comes in from Battle.net. This is basically a fully managed remote warden handler. The Cookie value is used to allocate (command 0x00) and access (command 0x01) a warden connection/handler. Once you initialize a cookie (command 0x00), it can then be sent back to BNLS with a Battle.net warden packet (command 0x01) to have the request handled, and a response sent back to you to be sent on to Battle.net. You can manage multiple Battle.net connections/wardens via one or more BNLS sockets.<br />\n<br />\nCommand 0x00:<br />\nWhen logging onto Battle.net and building your C>S 0x51 SID_AUTH_CHECK packet, you need to obtain the first DWORD of the first cdkey hash which will be the seed value used in command 0x00. You then send this seed value to BNLS, via command 0x00, to activate, or reset the given cookie. This cookie value must be different from any other bots using the same BNLS server from your network, that way you do not have clashes. The BNLS server will respond telling you if the cookie was successfully initialized or not. The data in the response should only ever be present if the response contains an error code.<br />\n<br />\nCommand 0x01:<br />\nOnce you have successfully initialized a cookie for a Battle.net connection, you are ready to forward all Battle.net warden traffic to BNLS. If the result comes back with an error code, the "Warden Packet Data" may contain infomation about the given error code. If the result comes back successful, then the "Warden Packet Data" will contain the BNCS 0x5E SID_WARDEN payload to be sent to Battle.net. You should only send the response data to Battle.net if the request was successful, the length of the data is one or more and it is a 0x01 command response. Please note that after initializing a cookie with command 0x00, that space will remain allocated on the server, for up to three minutes. This allows you to reconnect, and still be able to resume where you left off, without having to reconnect to Battle.net. You should only send the PAYLOAD of the S>C BNCS 0x5E SID_WARDEM packet, and NOT the full BNCS packet.<br />\n<br />\n<b>Second Method (commands 0x02 and 0x03)</b><br />\nThis allows you to manage your own warden handler, and avoid the need to download and manage warden modules from Battle.net.<br />\n<br />\nCommand 0x02:<br />\nThis is for managing packets that only the downloaded warden modules can do. Warden sends you an 0x05 packet that iss used to verify that you are truly running the correct warden module. You can send the whole decrypted 0x05 packet (including the packet ID) and get the 0x04 response and new set of RC4 keys. Since the algorithm warden uses to generate the 0x04 response data is differnt in each downloaded module, this usage requires you also send your orginal seed and the module name. It is possible, in the future, that more modules requiring packets, such as 0x05, may come into play. Because of that, the data in the response to command 0x02 maybe vary. This is the current supported format for the "data" in command 0x02 responses:<br />\n<dl>\n<dt>(DWORD) Response Type</dt>\n<dd>Type 0x01:</dd>\n<dd>(BYTE) [258] New RC4 In Key</dd>\n<dd>(BYTE) [258] New RC4 Out Key</dd>\n<dd>(DWORD) Length Of warden Response</dd>\n<dd>(VOID) Warden responce packet Data</dd>\n</dl>\n<br />\nThe warden response packet data will be the whole raw 0x04 packet. You then encrypt the response packet data with your existing RC4 Out key, then replace your existing RC4 keys with the new ones. It is possible that the BNLS server may respond with the result code 0x03 (warden module not loaded). There is a short delay between Battle.net switching to a new warden module and the BNLS server downloading it from Battle.net, so try again in 10 or more seconds.<br />\n<br />\nCommand 0x03:<br />\nThis allows you to download a file and/or information about the checks warden is making. This infomation can be used by your warden 0x02 parser to identify the check type and its result. Currently the only info type 0x01 is supported (downloading of a .ini file). The "data" in the response to command 0x03 has the following format:<br />\n<dl>\n<dt>(DWORD) Into type</dt>\n<dd>For type 0x01:</dd>\n<dd>(DWORD) [2] File time</dd>\n<dd>(VOID) ini File data</dd>\n</dl>\nIt may in the future support more info types, depending in what direction warden goes.',
                      'source': 'C',
                      'type': 'BNLS'}},
       'D2GS': {1: {'args': [['WORD', 'X coordinate'],
                             ['WORD', 'Y coordinate']],
                    'id': 1,
                    'name': 'WALKTOLOCATION',
                    'remark': '\nWalk to a specified (X,Y) map coordinate.\n\n',
                    'source': 'C',
                    'type': 'D2GS'},
                2: {'args': [['DWORD', '*Entity Type'],
                             ['DWORD', 'Entity ID']],
                    'id': 2,
                    'name': 'WALKTOENTITY',
                    'remark': "\nMakes your character walk to the Entity specified in Entity ID.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                    'source': 'C',
                    'type': 'D2GS'},
                3: {'args': [['WORD', 'X coordinate'],
                             ['WORD', 'Y coordinate']],
                    'id': 3,
                    'name': 'RUNTOLOCATION',
                    'remark': '\nRun to a specified (X,Y) map coordinate. \n\n',
                    'source': 'C',
                    'type': 'D2GS'},
                4: {'args': [['DWORD', '*Entity Type'],
                             ['DWORD', 'Entity ID']],
                    'id': 4,
                    'name': 'RUNTOENTITY',
                    'remark': "\nMakes your character run to the Entity specified in Entity ID.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                    'source': 'C',
                    'type': 'D2GS'},
                5: {'args': [['WORD', 'X coordinate'],
                             ['WORD', 'Y coordinate']],
                    'id': 5,
                    'name': 'LEFTSKILLONLOCATION',
                    'remark': '\nUses Left skill on specified (X,Y) map coordinate.\n\n',
                    'source': 'C',
                    'type': 'D2GS'},
                6: {'args': [['DWORD', '*Entity Type'],
                             ['DWORD', 'Entity ID']],
                    'id': 6,
                    'name': 'LEFTSKILLONENTITY',
                    'remark': "\nUses your left skill on the Entity specefied in Entity ID.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                    'source': 'C',
                    'type': 'D2GS'},
                7: {'args': [['DWORD', 'Entity Type'],
                             ['DWORD', 'Entity ID']],
                    'id': 7,
                    'name': 'LEFTSKILLONENTITYEX',
                    'remark': "\nUses your left skill on the Entity specefied in Entity ID, while holding the hotkey for standing still(shift).\n\n Entity types\n ---------------\n 00 - Players\n 01 - Monsters, NPCs, and Mercenaries\n 02 - Stash, Waypoint, Chests, Portals, others.\n 03 - Missiles\n 04 - Items\n 05 - Entrances\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                    'source': 'C',
                    'type': 'D2GS'},
                8: {'args': [['WORD', 'X coordinate'],
                             ['WORD', 'Y coordinate']],
                    'id': 8,
                    'name': 'LEFTSKILLONLOCATIONEX',
                    'remark': "\nUses Left skill on specified (X,Y) map coordinate.\n\n This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent. \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                    'source': 'C',
                    'type': 'D2GS'},
                9: {'args': [['DWORD', '*Entity Type'],
                             ['DWORD', 'Entity ID']],
                    'id': 9,
                    'name': 'LEFTSKILLONENTITYEX2',
                    'remark': "\nUses your left skill on the Entity specified in Entity ID.\n\n This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                    'source': 'C',
                    'type': 'D2GS'},
                10: {'args': [['DWORD', '*Entity Type'],
                              ['DWORD', 'Entity ID']],
                     'id': 10,
                     'name': 'LEFTSKILLONENTITYEX3',
                     'remark': '\nUses your left skill on the Entity specefied in Entity ID, while holding the hotkey for standing still(shift).\n\n This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent. \n\n Refer to the D2GS Entity Types document for more information.\n\n',
                     'source': 'C',
                     'type': 'D2GS'},
                12: {'args': [['WORD', 'X coordinate'],
                              ['WORD', 'Y coordinate']],
                     'id': 12,
                     'name': 'RIGHTSKILLONLOCATION',
                     'remark': "\nUses the currently selected skill at the specified location. \n\n This packet is sent when the location is first clicked with the mouse. \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                13: {'args': [['DWORD', 'Entity Type'],
                              ['DWORD', 'Entity ID']],
                     'id': 13,
                     'name': 'RIGHTSKILLONENTITY',
                     'remark': '\nUses your right skill on the Entity specefied in Entity ID\n\n Refer to the D2GS Entity Types document for more information about Entities\n\n',
                     'source': 'C',
                     'type': 'D2GS'},
                14: {'args': [['DWORD', 'Entity Type'],
                              ['DWORD', 'Entity ID']],
                     'id': 14,
                     'name': 'RIGHTSKILLONENTITYEX',
                     'remark': "\nUses your right skill on the Entity specefied in Entity ID, while holding the hotkey for standing still(shift).\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                15: {'args': [['WORD', 'X coordinate'],
                              ['WORD', 'Y coordinate']],
                     'id': 15,
                     'name': 'RIGHTSKILLONLOCATIONEX',
                     'remark': "\nUses the currently selected skill at the specified location. \n\n This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent. \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                16: {'args': [['DWORD', 'Entity Type'],
                              ['DWORD', 'Entity ID']],
                     'id': 16,
                     'name': 'RIGHTSKILLONENTITYEX2',
                     'remark': "\nUses your right skill repeatedly on the Entity specefied in Entity ID.\n This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                17: {'args': [['DWORD', 'Entity Type'],
                              ['DWORD', 'Entity ID']],
                     'id': 17,
                     'name': 'RIGHTSKILLONENTITYEX3',
                     'remark': '\nUses your right skill on the Entity specefied in Entity ID, while holding the hotkey for standing still(shift).\n\n This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent. \n\n',
                     'source': 'C',
                     'type': 'D2GS'},
                19: {'args': [['DWORD', 'Entity Type'],
                              ['DWORD', 'Entity ID']],
                     'id': 19,
                     'name': 'INTERACTWITHENTITY',
                     'remark': "\nInteracts with the specified Entity. \n For players and npc's, it will send a request to interact. \n The interaction depends on the type of the unit or object. \n For others it will trigger the object, for example using a shrine, looting a corpse you have permission to loot, or\nopening and closing a door.\n\n This packet is always followed by other's that relate to the type of interaction.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                20: {'args': [['WORD', 'Unknown - 0x00, 0x00'],
                              ['STRING', 'Message'],
                              ['BYTE', 'Unused - 0x00'],
                              ['WORD', 'Unknown - 0x00, 0x00']],
                     'id': 20,
                     'name': 'OVERHEADMESSAGE',
                     'remark': '\nThis message is used when you\'d like to put a message above a character\'s head as used in the client as "![message]".\n\n Restrictions: Total size of packet cannot be greater than 275 bytes. Message cannot be greater than 255 bytes. \n\n Please note: This message\'s official name is not known, and has been invented. \n\n Extra Info: The status of this information is: Public Colors can be created by adding hex FF 63 and a character 30 to\n3C. \n\n Example:\n To make red, use FF 63 31.\n\n',
                     'source': 'C',
                     'type': 'D2GS'},
                21: {'args': [['BYTE', 'Message Type'],
                              ['BYTE', 'Unknown'],
                              ['STRING', 'Message'],
                              ['BYTE', 'Unknown'],
                              ['WORD', 'Unknown - Only if normal chat'],
                              ['STRING',
                               'Player to whisper to - Only if whispering'],
                              ['BYTE', 'Unknown - Only if whispering']],
                     'id': 21,
                     'name': 'CHATMESSAGE',
                     'remark': "\nSends a chat message in the game.\n\n Possible Message Types:\n 0x01 - Send to all\n 0x02 - Whisper\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                22: {'args': [['DWORD', 'Unit Type'],
                              ['DWORD', 'Unit ID'],
                              ['DWORD', 'Action ID']],
                     'id': 22,
                     'name': 'PICKUPITEM',
                     'remark': "\nPick up a ground item to cursor buffer/inventory.\n\n Possible action IDs:\n 0x00 - Move item to inventory\n 0x01 - Move item to cursor buffer \n\n Please note: This message's official name is not known, and has been invented. \n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                23: {'args': [['DWORD', 'Item ID']],
                     'id': 23,
                     'name': 'DROPITEM',
                     'remark': "\nDrops the item in the player's cursor buffer to the ground. \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                24: {'args': [['DWORD', 'Item ID'],
                              ['DWORD', 'X coordinate'],
                              ['DWORD', 'Y coordinate'],
                              ['DWORD', 'Buffer Type']],
                     'id': 24,
                     'name': 'ITEMTOBUFFER',
                     'remark': "\nMoves item from the player's cursor buffer to an inventory space.\n\n Please note: This message's official name is not known, and has been invented. \n\n Inventory coordinates:\n (0,0) - Top left\n (9,3) - Bottom right\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                25: {'args': [['DWORD', 'Item ID']],
                     'id': 25,
                     'name': 'PICKUPBUFFERITEM',
                     'remark': "\nPickup an item from the possible buffers below, moving it to the cursor buffer.\n\n Possible Buffers:\n 0 - Inventory\n 1 - NPC Trade & Other player's Trade Window?\n 2 - Trade Screen\n 3 - Horadric Cube\n 4 - Stash\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                26: {'args': [['DWORD', 'Item ID'],
                              ['DWORD', 'Body Location']],
                     'id': 26,
                     'name': 'ITEMTOBODY',
                     'remark': "\nMoves item from player's cursor buffer to body location. Body locations are identified by the line number in the data\nfile bodylocs.txt.\n\n Possible Body Locations:\n 0x01 - Helm\n 0x02 - Amulet\n 0x03 - Armor\n 0x04 - Left-hand weapon\n 0x05 - Right-hand weapon\n 0x06 - Left-hand ring\n 0x07 - Right-hand ring\n 0x08 - Belt\n 0x09 - Boots\n 0x0A - Gloves\n\n These values have been recorded for mercenary body locations, but aren't confirmed: (Note, each location ID is\nprefixed with 0x61)\n Example: 1A 64 00 00 00 61 02 00 00 (Move item 0x64 to Mercenary Right-hand weapon)\n\n 0x01 - Mercenary Helm\n 0x02 - Mercenary Right-hand Weapon\n 0x03 - Mercenary Armor\n 0x04 - Mercenary Left-hand Weapon \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                27: {'args': [['DWORD', 'Item ID'],
                              ['DWORD', 'Body Location']],
                     'id': 27,
                     'name': 'SWAP2HANDEDITEM',
                     'remark': "\nMoves item from body location to player's cursor buffer.\n\n Body locations are the same as in D2GS_ITEMTOBODY\n\n Please note: This message's official name is not known, and has been invented. \n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                28: {'args': [['WORD', 'Body Location']],
                     'id': 28,
                     'name': 'PICKUPBODYITEM',
                     'remark': "\nPickup an item from a Body Location to you're cursor buffer.\n\n Possible Body Locations:\n 0x01 - Helm\n 0x02 - Amulet\n 0x03 - Armor\n 0x04 - Left-hand weapon\n 0x05 - Right-hand weapon\n 0x06 - Left-hand ring\n 0x07 - Right-hand ring\n 0x08 - Belt\n 0x09 - Boots\n 0x0A - Gloves\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                29: {'args': [['DWORD', 'Item ID'],
                              ['DWORD', 'Body Location']],
                     'id': 29,
                     'name': 'SWITCHBODYITEM',
                     'remark': "\nSwaps item in player's cursor buffer with item in the body location.\n\n Possible Body Locations:\n 0x01 - Helm\n 0x02 - Amulet\n 0x03 - Armor\n 0x04 - Left-hand weapon\n 0x05 - Right-hand weapon\n 0x06 - Left-hand ring\n 0x07 - Right-hand ring\n 0x08 - Belt\n 0x09 - Boots\n 0x0A - Gloves\n\n Please note: This message's official name is not known, and has been invented. \n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                31: {'args': [['DWORD',
                               'Item ID - Item to place in inventory (cursor buffer)'],
                              ['DWORD', 'Item ID - Item to be replaced'],
                              ['DWORD', 'X coordinate for replace'],
                              ['DWORD', 'Y coordinate for replace']],
                     'id': 31,
                     'name': 'SWITCHINVENTORYITEM',
                     'remark': "\nSwaps the item in the player's cursor buffer with one in the player's inventory. Please note: \n This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                32: {'args': [['DWORD', 'Item ID'],
                              ['DWORD', 'X coordinate'],
                              ['DWORD', 'Y coordinate']],
                     'id': 32,
                     'name': 'USEITEM',
                     'remark': "\nUses the specified item (such as a potion, town portal scroll, etc.).\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                33: {'args': [['DWORD', 'Item ID - Stack item'],
                              ['DWORD', 'Item ID - Target item']],
                     'id': 33,
                     'name': 'STACKITEM',
                     'remark': "\nStacks one item such as a key onto another item.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                34: {'args': [['DWORD', 'Item ID']],
                     'id': 34,
                     'name': 'REMOVESTACKITEM',
                     'remark': "\nRemoves an item from the stack Please note: This message's official name is not known, and has been invented. The\ncontents of this packet may be incomplete or incorrect, and your comments and contributions are requested.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                35: {'args': [['DWORD', 'Item ID'],
                              ['DWORD', 'Belt Location']],
                     'id': 35,
                     'name': 'ITEMTOBELT',
                     'remark': "\nMoves an item into the player's belt.\n\n Extra Info: The status of this information is: Public Belt locations start at 0x00 and go from right to left, starting\nat the lowest row and moving across, then going up one row. For example, location 0x03 would be at the bottom right hand\ncorner and location 0x0C would be at the top left corner in a 4-slot belt. This can be calculated as (row*4+column).\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                36: {'args': [['DWORD', 'Item ID']],
                     'id': 36,
                     'name': 'REMOVEBELTITEM',
                     'remark': "\nMoves the specified item from the belt to the player's cursor buffer. \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                37: {'args': [['DWORD', 'Item ID - Cursor buffer'],
                              ['DWORD', 'Item ID - Item to be replaced']],
                     'id': 37,
                     'name': 'SWITCHBELTITEM',
                     'remark': "\nReplaces item in belt with item in player's cursor buffer.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                38: {'args': [['DWORD', 'Item ID'],
                              ['DWORD', 'Unknown - Possibly unused'],
                              ['DWORD', 'Unknown - Possibly unused']],
                     'id': 38,
                     'name': 'USEBELTITEM',
                     'remark': "\nUses the specified item in the player's belt.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                40: {'args': [['DWORD',
                               'Item ID - Item to place in socket'],
                              ['DWORD', 'Item ID - Socketed item']],
                     'id': 40,
                     'name': 'INSERTSOCKETITEM',
                     'remark': '\nInserts the specified item into a socketed item.\n\n',
                     'source': 'C',
                     'type': 'D2GS'},
                41: {'args': [['DWORD', 'Item ID - Scroll'],
                              ['DWORD', 'Item ID - Tome']],
                     'id': 41,
                     'name': 'SCROLLTOTOME',
                     'remark': "\nPlaces a scroll into a tome of scrolls.\n\n Note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                42: {'args': [['DWORD', 'Item ID'], ['DWORD', 'Cube ID']],
                     'id': 42,
                     'name': 'ITEMTOCUBE',
                     'remark': "\nMoves item from player's cursor buffer into Horadric cube.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                45: {'args': [],
                     'id': 45,
                     'name': 'UNSELECTOBJ',
                     'remark': "\nUnselects the selected object. Please note: This message's official name is not known, and has been invented. The\ncontents of this packet may be incomplete or incorrect, and your comments and contributions are requested.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                47: {'args': [['DWORD', 'Entity Type'],
                              ['DWORD', 'Entity ID']],
                     'id': 47,
                     'name': 'NPCINIT',
                     'remark': "\nInitiate an NPC sesstion, sent following:\n C->S 0x13\n It indicates that you are now interacting with an NPC, and a dialog window is opened.\n\n This is prior to any choices being made to talk or trade etc.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                48: {'args': [['DWORD', 'Entity Type'],
                              ['DWORD', 'NPC ID']],
                     'id': 48,
                     'name': 'NPCCANCEL',
                     'remark': "\nStops interacting with an NPC \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                50: {'args': [['DWORD', 'NPC ID - Unconfirmed'],
                              ['DWORD', 'Item ID - Unconfirmed'],
                              ['DWORD', 'Buffer Type - Unconfirmed'],
                              ['DWORD', 'Cost']],
                     'id': 50,
                     'name': 'NPCBUY',
                     'remark': "\nBuys an item from a Non Player Character.\n\n Possible Buffer Types:\n 0x00 - Regular (ordinary item)\n 0x02 - Gambled \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                51: {'args': [['DWORD', 'NPC ID - Unconfirmed'],
                              ['DWORD', 'Item ID - Unconfirmed'],
                              ['DWORD',
                               'Buffer ID - Unconfirmed - Possible value 0x04'],
                              ['DWORD', 'Cost']],
                     'id': 51,
                     'name': 'NPCSELL',
                     'remark': "\nSell an item to a Non Player Character. \n\n The Buffer ID refers to the windows in the NPC trade screen, depending on what you are selling the Buffer ID will\nmatch the item type.\n After selling the item it will appear in the given Buffer ID.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                56: {'args': [['DWORD', 'Trade Type - Unconfirmed'],
                              ['DWORD', 'NPC ID - Unconfirmed'],
                              ['DWORD',
                               'Unknown - Unconfirmed - Possible value 0x00']],
                     'id': 56,
                     'name': 'NPCTRADE',
                     'remark': "\nThis packet's use is currently unconfirmed.\n\n Possible Trade Types:\n 0x01 - Trade\n 0x02 - Gamble\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                63: {'args': [['WORD', 'Phrase ID']],
                     'id': 63,
                     'name': 'CHARACTERPHRASE',
                     'remark': '\nAll phrases sent to the server will be heard by all players in your vicinity.\n\n Phrase IDs: (Note: The deciding of which of the two phrases are used is random)\n [0x19] "Help!" / "Help me!"\n [0x1A] "Follow me!" / "Come on!"\n [0x1B] "This is yours." / "This is for you."\n [0x1C] "Thanks!" / "Thank you."\n [0x1D] "Uh, oops." / "Forgive me."\n [0x1E] "Bye!" / "Good Bye!"\n [0x1F] "Die!" / "Time to die!"\n [0x20] "Run!" / "Run away!" Please note: This message\'s official name is not known, and has been invented.\n\n',
                     'source': 'C',
                     'type': 'D2GS'},
                73: {'args': [['BYTE', 'Waypoint ID'],
                              ['BYTE', 'Unknown - Appears to be random'],
                              ['WORD', 'Unknown - 0x00'],
                              ['BYTE', 'Level number'],
                              ['WORD', 'Unknown - 0x00']],
                     'id': 73,
                     'name': 'WAYPOINT',
                     'remark': "\nRequests to go to a waypoint if it was already activated.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                79: {'args': [['DWORD', 'Request ID'],
                              ['WORD', 'Gold Amount']],
                     'id': 79,
                     'name': 'TRADE',
                     'remark': "\nThis message should be used for manipulating the trading window, the Horadric Cube item window, and the Stash window.\n\n Possible Request ID's:\n [0x02] Cancel trade request\n [0x03] Accept trade request\n [0x04] Press Accept button (accept)\n [0x07] Press Accept button (unaccept) - This should be sent when placing items in the trade window as well.\n [0x08] Refresh window (See below for examples on usage)\n [0x12] Close stash window\n [0x13] Move gold (stash to inventory)\n [0x14] Move gold (inventory to stash)\n [0x17] Close Horadric Cube window\n\n Examples of using Refresh ID:\n Item has been picked up to mouse cursor buffer.\n Item has been placed in the trade screen.\n Accepted or closed a trade window.\n Manual unclick of Accept button.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                80: {'args': [['DWORD', 'PlayerID'],
                              ['DWORD', 'GoldAmount']],
                     'id': 80,
                     'name': 'DROPGOLD',
                     'remark': "\nDrops a pile of gold to the ground. \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                94: {'args': [['WORD', 'Action ID'],
                              ['DWORD', 'Player ID']],
                     'id': 94,
                     'name': 'PARTY',
                     'remark': '\nPossible Action IDs:\n\n 0x06 - Invite player to party with you\n 0x07 - Cancel invite to player\n 0x08 - Accept invite from player\n 0x09 - Leave party\n\n',
                     'source': 'C',
                     'type': 'D2GS'},
                97: {'args': [['WORD', 'Unknown - 0x00']],
                     'id': 97,
                     'name': 'POTIONTOMERCENARY',
                     'remark': "\nTakes the potion your cursor holds and gives it to the mercenary. Please note: This message's official name is not\nknown, and has been invented.\n\n",
                     'source': 'C',
                     'type': 'D2GS'},
                104: {'args': [['DWORD', 'D2GS Server Hash'],
                               ['WORD', 'D2GS Server Token'],
                               ['BYTE', 'Character ID'],
                               ['DWORD', 'Version byte (Currently 0x0B)'],
                               ['DWORD',
                                'Unknown - Suggested Const (0xED5DCC50)'],
                               ['DWORD',
                                'Unknown - Suggested Const (0x91A519B6)'],
                               ['BYTE', 'Unknown - Suggested (0x00)'],
                               ['STRING', 'Character name'],
                               ['VOID', '*See user-comment below']],
                      'id': 104,
                      'name': 'GAMELOGON',
                      'remark': '\nPossible Character IDs:\n 0x00 - Amazon\n 0x01 - Sorceress\n 0x02 - Necromancer\n 0x03 - Paladin\n 0x04 - Barbarian\n 0x05 - Druid\n 0x06 - Assassin\n\n The "Character name" field is a buffer of 15 characters with a null-terminator. This string should always be filled\nwith 15 characters (plus terminator), padded with 0\'s for unused bytes.\n\n Note: If the character ID does not match the type of character you\'re attempting to logon with, and the character is\nnealy created (with 0 play time), then that character will automatically be changed or "morphed" into the character ID\nsent. \n Please note: This message\'s official name is not known, and has been invented.\n\n',
                      'source': 'C',
                      'type': 'D2GS'},
                106: {'args': [],
                      'id': 106,
                      'name': 'ENTERGAMEENVIRONMENT',
                      'remark': "\nThis byte should be sent in order to start receiving in-game messages and to interact with the world itself. \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                      'source': 'C',
                      'type': 'D2GS'},
                109: {'args': [['DWORD', 'Tick Count'],
                               ['DWORD', 'Null'],
                               ['DWORD', 'Null']],
                      'id': 109,
                      'name': 'PING',
                      'remark': "\nThis packet should be sent every five to seven seconds to avoid timeout.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                      'source': 'C',
                      'type': 'D2GS'}},
       'MCP': {1: {'args': [['DWORD', 'MCP Cookie'],
                            ['DWORD', 'MCP Status'],
                            ['DWORD', '[2] MCP Chunk 1'],
                            ['DWORD', '[12] MCP Chunk 2'],
                            ['STRING', 'Battle.net Unique Name']],
                   'id': 1,
                   'name': 'STARTUP',
                   'remark': "\nThis packet authenticates the client with the MCP and allows character querying and logon to proceed.\n All 16 DWORDs (Cookie, Status, Chunk 1, and Chunk 2) are received from the server via SID_LOGONREALMEX.\n\n Not much information is known about the DWORD values, other than that they're received from the server. The following\ninformation needs work:\n  MCP Cookie: Client Token MCP Status: Unknown MCP Chunk 1 [01]: Server IP (BNCS) MCP Chunk 1 [02]: UDP Value * MCP\nChunk 2 [01]: Unknown MCP Chunk 2 [02]: Unknown MCP Chunk 2 [03]: Something to do with the gateway MCP Chunk 2 [04]:\nProduct (D2DV/D2XP) MCP Chunk 2 [05]: Platform (IX86/PMAC/XMAC) MCP Chunk 2 [06]: Unknown MCP Chunk 2 [07]: Language ID\n(1033 [0x409] for enUS) MCP Chunk 2 [08]: Unknown MCP Chunk 2 [09]: Unknown MCP Chunk 2 [10]: Unknown MCP Chunk 2 [11]:\nUnknown MCP Chunk 2 [12]: Unknown  \n This is purely speculation, but as there are 5 unknown DWORDs at the end of this chunk, it is possible that it is\nactually a hash of something.\n\n * UDPValue: No one really knows what this is, however, it is used in 2nd DWORD of the UDP packet PKT_CONNTEST2. The\nclient receives it in SID_AUTH_INFO.\n\n",
                   'source': 'C',
                   'type': 'MCP'},
               2: {'args': [['DWORD', 'Character class'],
                            ['WORD', 'Character flags'],
                            ['STRING', 'Character name']],
                   'id': 2,
                   'name': 'CHARCREATE',
                   'remark': "\nCreates a character on the Realm.\n\n Character Classes are the same as in D2 users' Statstrings:\n 0x00: Amazon\n 0x01: Sorceress\n 0x02: Necromancer\n 0x03: Paladin\n 0x04: Barbarian\n 0x05: Druid\n 0x06: Assassin Flag values should be OR'd together. The only flags that can be set for character creation are classic,\nhardcore, expansion, and ladder, but the other flags are included here for completeness:\n 0x00: Classic\n 0x04: Hardcore\n 0x08: Dead\n 0x20: Expansion\n 0x40: Ladder Sending 0x05 or 0x06 in character class or 0x20 in character flags while on D2DV will disconnect and\ntemporarily ban you from the realm. Likewise, sending 0x05 or 0x06 in character class without setting 0x20 in character\nflags will result in a disconnect and ban.\n\n",
                   'source': 'C',
                   'type': 'MCP'},
               3: {'args': [['WORD', 'Request Id '],
                            ['DWORD', 'Difficulty'],
                            ['BYTE', 'Unknown - 1'],
                            ['BYTE', 'Player difference '],
                            ['BYTE', 'Maximum players'],
                            ['STRING', 'Game name'],
                            ['STRING', 'Game password'],
                            ['STRING', 'Game description']],
                   'id': 3,
                   'name': 'CREATEGAME',
                   'remark': '\n Difficulty: 0x0000: Normal 0x1000: Nightmare 0x2000: Hell  \n * This value starts at 0x02 at first game creation, and increments by 0x02 each consecutive game creation.\n\n ** A value of 0xFF indicates that the game is not restricted by character difference.\n\n Before sending the game name and password, Diablo II automatically changes their case. For example if the string "aBc\nDeF" is typed in Diablo II, then the string sent is "Abc Def". This does not apply to the game description.\n\n',
                   'source': 'C',
                   'type': 'MCP'},
               4: {'args': [['WORD', 'Request ID'],
                            ['STRING', 'Game name'],
                            ['STRING', 'Game Password']],
                   'id': 4,
                   'name': 'JOINGAME',
                   'remark': '\nThis must be sent after a successful game creation.\n\n',
                   'source': 'C',
                   'type': 'MCP'},
               5: {'args': [['WORD', 'Request ID'],
                            ['DWORD', 'Unknown (0)'],
                            ['STRING', 'Search String ']],
                   'id': 5,
                   'name': 'GAMELIST',
                   'remark': '\nRequests a game listing.\n\n * Normally blank. If a non-empty string is sent, games will be returned that include this string in their names. This\nis not used by the client, but still exists.\n\n',
                   'source': 'C',
                   'type': 'MCP'},
               6: {'args': [['WORD', 'Request ID'],
                            ['STRING', 'Game name']],
                   'id': 6,
                   'name': 'GAMEINFO',
                   'remark': '\nRequests information about a game.\n\n',
                   'source': 'C',
                   'type': 'MCP'},
               7: {'args': [['STRING', 'Character name']],
                   'id': 7,
                   'name': 'CHARLOGON',
                   'remark': '\nLogs onto the realm.\n\n Note that attempting to log on using an expansion character on D2DV will result in an IPBan by both Battle.net and the\nRealm.\n\n',
                   'source': 'C',
                   'type': 'MCP'},
               10: {'args': [['WORD', 'Unknown (0)'],
                             ['STRING', 'Character name']],
                    'id': 10,
                    'name': 'CHARDELETE',
                    'remark': '\nDeletes a character.\n\n',
                    'source': 'C',
                    'type': 'MCP'},
               17: {'args': [['BYTE', 'Ladder type'],
                             ['WORD', 'Starting position']],
                    'id': 17,
                    'name': 'REQUESTLADDERDATA',
                    'remark': "\nThis will request 16 ladder entries, starting at a zero-based location specified in 'Starting position'. For example if\nthis is 0, then ladder entries 1-16 are retrieved. If this is 17, then ladder entries 18-33 are retrieved. Note: The\nvalues that Diablo 2 sends for this are always perfectly divisible by 16. This might be a requirement.\n  Possible ladder types: 0x00: standard hardcore overall ladder 0x01: standard hardcore amazon ladder 0x02: standard\nhardcore sorceress ladder 0x03: standard hardcore necromancer ladder 0x04: standard hardcore paladin ladder 0x05:\nstandard hardcore barbarian ladder 0x09: standard softcore overall ladder 0x0A: standard softcore amazon ladder 0x0B:\nstandard softcore sorceress ladder 0x0C: standard softcore necromancer ladder 0x0D: standard softcore paladin ladder\n0x0E: standard softcore barbarian ladder 0x13: expansion hardcore overall ladder 0x14: expansion hardcore amazon ladder\n0x15: expansion hardcore sorceress ladder 0x16: expansion hardcore necromancer ladder 0x17: expansion hardcore paladin\nladder 0x18: expansion hardcore barbarian ladder 0x19: expansion hardcore druid ladder 0x1A: expansion hardcore assassin\nladder 0x1B: expansion softcore overall ladder 0x1C: expansion softcore amazon ladder 0x1D: expansion softcore sorceress\nladder 0x1E: expansion softcore necromancer ladder 0x1F: expansion softcore paladin ladder 0x20: expansion softcore\nbarbarian ladder 0x21: expansion softcore druid ladder 0x22: expansion softcore assassin ladder \n\n",
                    'source': 'C',
                    'type': 'MCP'},
               18: {'args': [],
                    'id': 18,
                    'name': 'MOTD',
                    'remark': "\nRequests the realm's MOTD.\n\n",
                    'source': 'C',
                    'type': 'MCP'},
               19: {'args': [],
                    'id': 19,
                    'name': 'CANCELGAMECREATE',
                    'remark': '\nNotifies the server that you want to cancel the creation of your game.\n\n',
                    'source': 'C',
                    'type': 'MCP'},
               22: {'args': [['DWORD', 'Hardcore BOOL'],
                             ['DWORD', 'Expansion BOOL'],
                             ['STRING', 'Character Name']],
                    'id': 22,
                    'name': 'CHARRANK',
                    'remark': '\nThis packet is used to find a Diablo II character in the ladder. Hardcore and Expansion can either be 1 or 0 and define\nthe ladder type (always Overall). The server responds with MCP_REQUESTLADDERDATA, listing (and possibly highlighting\nusing character flag 0x08?) the page of ranks in which the character is found.\n\n',
                    'source': 'C',
                    'type': 'MCP'},
               23: {'args': [['DWORD', 'Number of characters to list']],
                    'id': 23,
                    'name': 'CHARLIST',
                    'remark': '\nRequests a character list.\n\n',
                    'source': 'C',
                    'type': 'MCP'},
               24: {'args': [['STRING', 'Character Name']],
                    'id': 24,
                    'name': 'CHARUPGRADE',
                    'remark': '\nConverts a non-expansion character to expansion.\n\n',
                    'source': 'C',
                    'type': 'MCP'},
               25: {'args': [['DWORD', 'Number of characters to list']],
                    'id': 25,
                    'name': 'CHARLIST2',
                    'remark': '\nRequests a character list. \n\n Up to a maximum of 8 characters can be requested.\n\n',
                    'source': 'C',
                    'type': 'MCP'}},
       'SID': {0: {'args': [],
                   'id': 0,
                   'name': 'NULL',
                   'remark': '\nKeeps the connection alive. This message should be sent to the server every 8 minutes (approximately).\n\n The server will send this to you automatically, you do not have to reply to it. You should send this on your own\nnever-ending timer for at least as often as Battle.net does (give or take a few seconds).\n\n This packet is used to detect if your TCP connection has gone dead, to the point where you will never receive data\nfrom the server ever again until you reconnect your connection. A situation such as this can be created by unplugging\nyour internet connection for a few minutes, or if your internet is dropped for whatever reason.\n\n',
                   'source': 'C',
                   'type': 'SID'},
               2: {'args': [],
                   'id': 2,
                   'name': 'STOPADV',
                   'remark': '\nThis message is sent to inform the server that a game should no longer be advertised to other users. It is sent when a\ngame starts, or when a game is aborted (the host leaves).\n\n All Battle.snp clients (DRTL, DSHR, STAR/SEXP, JSTR, SSHR, and W2BN) always send this message when logging off, even\nif it not in a game.\n\n',
                   'source': 'C',
                   'type': 'SID'},
               5: {'args': [['DWORD', 'Registration Version'],
                            ['DWORD', 'Registration Authority'],
                            ['DWORD', 'Account Number'],
                            ['DWORD', 'Registration Token'],
                            ['STRING', 'LAN Computer Name'],
                            ['STRING', 'LAN Username']],
                   'id': 5,
                   'name': 'CLIENTID',
                   'remark': "This packet was used to ensure that the client's account number was valid. All but the last two fields in this message are now ignored, and may be set to zero.\n\nThe 'LAN Computer Name' field is the NetBIOS name of the computer. It can be retrieved using the GetComputerName API.\n\nThe 'Lan Username' field is the name of the currently logged on user, and may be retrieved using the GetUsername API.\n\nThe following information is historical:\n\nThe client would supply this data as issued by a Battle.net server. If the Registration Version, Registration Authority, and Client Token values equated to the account number supplied (Client ID), as determined by an unknown formula, the server would respond with the same values. If they were invalid, the server would assign new values. Registration Version was always 1, Authority was the IP address of the server that issued the account number. Thus, the Client Token was the secret value, used to prove that the client really owned the account in question.",
                   'source': 'C',
                   'type': 'SID'},
               6: {'args': [['DWORD', 'Platform ID'],
                            ['DWORD', 'Product ID'],
                            ['DWORD', 'Version Byte'],
                            ['DWORD', 'Unknown (0)']],
                   'id': 6,
                   'name': 'STARTVERSIONING',
                   'remark': 'This message is sent to the server to start the process of checking the game files. This message is part of the old logon process for products before Starcraft.',
                   'source': 'C',
                   'type': 'SID'},
               7: {'args': [['DWORD', 'Platform ID'],
                            ['DWORD', 'Product ID'],
                            ['DWORD', 'Version Byte'],
                            ['DWORD', 'EXE Version'],
                            ['DWORD', 'EXE Hash'],
                            ['STRING', 'EXE Information']],
                   'id': 7,
                   'name': 'REPORTVERSION',
                   'remark': 'Contains CheckRevision response, version & EXE info.',
                   'source': 'C',
                   'type': 'SID'},
               8: {'args': [['DWORD', 'State'],
                            ['DWORD', 'Time since creation'],
                            ['WORD', 'Game Type'],
                            ['WORD', 'Parameter'],
                            ['DWORD', 'Unknown (0x00)'],
                            ['DWORD',
                             'Unknown (Likely ladder, but will always be 0x00 because there is no SSHR ladder)'],
                            ['STRING', 'Game name'],
                            ['STRING', 'Game password'],
                            ['STRING', 'Game Statstring']],
                   'id': 8,
                   'name': 'STARTADVEX',
                   'remark': 'Creates a game in a manner similar to SID_STARTADVEX2 and SID_STARTADVEX3. This is only used by Starcraft Shareware.\nSee documentation on SID_STARTADVEX3 for details on the values and their meanings.',
                   'source': 'C',
                   'type': 'SID'},
               9: {'args': [['WORD', 'Game Type'],
                            ['WORD', 'Sub Game Type'],
                            ['DWORD', 'Viewing Filter'],
                            ['DWORD', 'Reserved (0)'],
                            ['DWORD', 'Number of Games'],
                            ['STRING', 'Game Name'],
                            ['STRING', 'Game Password'],
                            ['STRING', 'Game Statstring']],
                   'id': 9,
                   'name': 'GETADVLISTEX',
                   'remark': "\nRetrieves a list of games.\n\n GAME TYPE: For STAR/SEXP/SSHR/JSTR and W2BN, a value of 0 indicates that any type is acceptable.\n  Possible game types: 0x00: All 0x02: Melee 0x03: Free for all 0x04: one vs one 0x05: CTF 0x06: Greed 0x07: Slaughter\n0x08: Sudden Death 0x09: Ladder 0x10: Iron man ladder 0x0A: Use Map Settings 0x0B: Team Melee 0x0C: Team FFA 0x0D: Team\nCTF 0x0F: Top vs. Bottom  \n For DRTL/DSHR, Game Type is used to specify a 'level range'. This ensures that clients receive a list of games\ncontaining players whose experience is similar to their own.\n  Possible ranges: 0x00: Level 1 0x01: 2 - 3 0x02: 4 - 5 0x03: 6 - 7 0x04: 8 - 9 0x05: 10 - 12 0x06: 13 - 16 0x07: 17 -\n19 0x08: 20 - 24 0x09: 25 - 29 0x0A: 30 - 34 0x0B: 35 - 39 0x0C: 40 - 47 0x0D: 48 - 50  For all other games, Game Type\ncan be set to 0x00. SUB GAME TYPE:  For Greed, this is resources in multiples of 2500 (0x01 = 2500, 0x02 = 5000, etc).\nFor Slaughter, this is minutes in multiples of 15 (0x01 = 15, 0x02 = 30, etc). For Ladder, this indicates if disconnects\ncount as a loss (0x01 = Yes, 0x00 = No). For Team Melee, this is the number of teams (0x01 = 2, 0x02 = 3, etc). For Team\nFree For All, this is the number of teams (0x01 = 2, 0x02 = 3, etc). For Team Capture The Flag, this is the number of\nteams (0x01 = 2, 0x02 = 3, etc). For Top vs. Bottom, this is the players to team ratio (1-7). For any other game type,\nit is 0x01 which indicates no sub game type.  VIEWING FILTER:  0xFFFF is used to use the combination of values in this\npacket. 0xFF80 is used to show all games. For STAR/SEXP/SSHR/JSTR, viewing filter is set to 0x30. For DRTL/DSHR, viewing\nfilter is set to 0xFFFF by the game, but setting it to 0x00 will disable any viewing limitations, letting you view all\ngames.  RESERVED (0): This value is hardcoded to 0x00 by all games. NUMBER OF GAMES: This is the number of games to\nlist. For a full listing, it's safe to use 0xFF. By default, DRTL/DSHR sets this to 0x19.\n\n",
                   'source': 'C',
                   'type': 'SID'},
               10: {'args': [['STRING', 'Username '],
                             ['STRING', 'Statstring ']],
                    'id': 10,
                    'name': 'ENTERCHAT',
                    'remark': '\nJoins Chat. \n\n * Null on WAR3/W3XP.\n\n ** Null on CDKey Products, except for D2DV and D2XP when on realm characters..\n\n',
                    'source': 'C',
                    'type': 'SID'},
               11: {'args': [['DWORD', 'Product ID']],
                    'id': 11,
                    'name': 'GETCHANNELLIST',
                    'remark': "\nRequests a list of channels that the client is permitted to enter.\n\n In the past this packet returned a product list for the specified Product ID, however, the Product ID field is now\nignored -- it does not need to be a valid Product ID, and can be set to zero. The list of channels returned will be for\nthe client's product, as specified during the client's logon.\n\n",
                    'source': 'C',
                    'type': 'SID'},
               12: {'args': [['DWORD', 'Flags'], ['STRING', 'Channel']],
                    'id': 12,
                    'name': 'JOINCHANNEL',
                    'remark': "\nJoins a channel after entering chat.\n\n The Channel name must be no greater than 31 characters, otherwise it becomes trimmed by Battle.net.\n\n The flags field may contain the following values:\n 0x00: NoCreate join\n 0x01: First join\n 0x02: Forced join\n 0x05: D2 first join\n\n NoCreate Join: This will only join the channel specified if it is not empty, and is used by clients when selecting a\nchannel from the channels menu. If the channel is empty, Battle.net sends a SID_CHATEVENT of type\nEID_CHANNELDOESNOTEXIST, upon which official clients prompt for confirmation that the user wishes to create the channel,\nin which case, it resends this packet with Flags set to Forced Join (0x02). First Join: Places user in a channel\nstarting with their product and country, followed by a number, ie 'Brood War GBR-1'. Also automatically sends MOTD after\nentering the channel. When using this type, the Channel variable has no effect, but must be present anyway to avoid an\nIP ban. This is sent when first logging onto Battle.net Forced Join: This is sent when leaving a game, and joins the\nspecified channel without an supplying an MOTD. D2 First Join: The same as First join, but is used for D2DV/D2XP\nclients.\n\n",
                    'source': 'C',
                    'type': 'SID'},
               14: {'args': [['STRING', 'Text ']],
                    'id': 14,
                    'name': 'CHATCOMMAND',
                    'remark': '\nSend text or a command to Battle.net using this packet.\n\n For STAR/SEXP/SSHR/JSTR, Text is UTF-8 encoded (WIDESTRING).\n\n It is generally accepted as unwise to send any character below a space (0x20): this includes line feeds, carriage\nreturns & control characters. The maximum number of characters is 224 per message including the null-terminator (so\nreally only 223 characters), any longer and it becomes trimmed by Battle.net.\n\n If you send a line feed and/or a carriage return, Battle.net disconnects you and IP bans you for 5 minutes.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               16: {'args': [],
                    'id': 16,
                    'name': 'LEAVECHAT',
                    'remark': '\nLeaves chat mode but does not disconnect. Generally sent when entering a game. This is also sent by D2DV/D2XP when\nswitching characters, and by all products when logging off.\n\n After you send this, normal chat functions to not work. In order to enter a channel when you are not in chat mode, you\nmust send SID_JOINCHANNEL.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               18: {'args': [],
                    'id': 18,
                    'name': 'LOCALEINFO',
                    'remark': '\nSent prior to a disconnect along with SID_MESSAGEBOX to indicate that the client has flooded off. \n\n',
                    'source': 'C',
                    'type': 'SID'},
               20: {'args': [['DWORD', 'Ad ID'],
                             ['DWORD', 'File extension'],
                             ['FILETIME', 'Local file time'],
                             ['STRING', 'Filename'],
                             ['STRING', 'Link URL']],
                    'id': 20,
                    'name': 'UDPPINGRESPONSE',
                    'remark': '\nContains information needed to download and display an ad banner. \n\n',
                    'source': 'C',
                    'type': 'SID'},
               21: {'args': [['DWORD', 'Platform ID'],
                             ['DWORD', 'Product ID'],
                             ['DWORD', 'ID of last displayed banner'],
                             ['DWORD', 'Current time']],
                    'id': 21,
                    'name': 'CHECKAD',
                    'remark': '\nRequests ad banner information from Battle.net.\n\n Official clients send this packet every 20 seconds (give or take). You do not have to send this at all.\n\n In addition, Battle.net will not reply unless any of the fields above are updated from the last time you checked. If\nyou have never checked before, Battle.net will always reply back.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               22: {'args': [['DWORD', 'Ad ID'], ['DWORD', 'Request type']],
                    'id': 22,
                    'name': 'CLICKAD',
                    'remark': "\nThe clients send this when an ad is clicked.\n\n Request Type is 0 if the client used SID_QUERYADURL to get the ad's data, 1 otherwise. \n\n",
                    'source': 'C',
                    'type': 'SID'},
               23: {'args': [['DWORD', 'Request ID'], ['VOID', 'Memory']],
                    'id': 23,
                    'name': 'READMEMORY',
                    'remark': "Rudimentary hack detection system. Was never used probably due to terrible implementation with little security.\n\nYes, it is possible for a PvPGN server to read EVERYTHING that is in the process' memory, including sensitive information such as your CDKey.\n\nFound at:\nbattle!1901D470h (as of 1.16.1)",
                    'source': 'C',
                    'type': 'SID'},
               24: {'args': [['DWORD', 'Cookie'], ['STRING', 'Key Value']],
                    'id': 24,
                    'name': 'REGISTRY',
                    'remark': 'Returns the requested registry value',
                    'source': 'C',
                    'type': 'SID'},
               26: {'args': [['DWORD', 'Status']],
                    'id': 26,
                    'name': 'STARTADVEX2',
                    'remark': '\nPossible values for Status: 0x00: Ok 0x01: Failed\n\n',
                    'source': 'C',
                    'type': 'SID'},
               27: {'args': [],
                    'id': 27,
                    'name': 'GAMEDATAADDRESS',
                    'remark': 'Specifies host & port that a game creator is using for a game.',
                    'source': 'C',
                    'type': 'SID'},
               28: {'args': [['DWORD', 'Game State'],
                             ['DWORD', 'Game Uptime in seconds'],
                             ['WORD', 'Game Type'],
                             ['WORD', 'Sub Game Type'],
                             ['DWORD', 'Provider Version Constant (0xFF)'],
                             ['DWORD', 'Ladder Type'],
                             ['STRING', 'Game Name'],
                             ['STRING', 'Game Password'],
                             ['STRING', 'Game Statstring']],
                    'id': 28,
                    'name': 'STARTADVEX3',
                    'remark': '\nUsed by clients to inform the server that a game has been created, or that the state of a created game has changed.\n Bitwise flags for State: 0x01: Game is private 0x02: Game is full 0x04: Game contains players (other than creator)\n0x08: Game is in progress 0x80: Game is a replay Possible values for Game Type (Sub Game Type): 0x02: Melee 0x03: Free\nfor All 0x04: 1 vs 1 0x05: Capture The Flag 0x06: Greed (Resources, 0x01: 2500, 0x02: 500, 0x03: 7500, 0x04: 10000)\n0x07: Slaughter (Minutes, 0x01: 15, 0x02: 30, 0x03: 45, 0x04: 60) 0x08: Sudden Death 0x09: Ladder (Disconnects, 0x00:\nNot a loss, 0x01: Counts as a loss) 0x0A: Use Map Settings 0x0B: Team Melee (Number Of Teams, 0x01: 2 Teams, 0x02: 3\nTeams, etc.) 0x0C: Team Free For All (Number Of Teams, 0x01: 2 Teams, 0x02: 3 Teams, etc.) 0x0D: Team Capture The Flag\n(Number Of Teams, 0x01: 2 Teams, 0x02: 3 Teams, etc.) 0x0F: Top vs. Bottom (Number Of Teams, 1-7 specifies the ratio of\nplayers belonging to both teams) 0x10: Iron Man Ladder (W2BN only) 0x20: PGL \n Provider Version Constant: The Current version of the game (1.16.1) uses 0xFF, previous versions have used 0x1F, but\nthis may vary depending on game version.\n\n Possible values for Ladder: 0x00: Game is Normal (Non-Ladder) 0x01: Game is Ladder 0x03: Game is Iron Man Ladder (W2BN\nonly) It could be that the ladder is bitwise as well, and that 0x02 means Iron Man and 0x03 just means Iron Man +\nLadder.\n Sub Game Type appears to be 0x01 for all game types except Top vs Bottom, where it seems to depend on the size of each\nteam. More research will be needed to confirm.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               30: {'args': [['DWORD', 'Server Version'],
                             ['DWORD', 'Registration Version'],
                             ['DWORD', 'Registration Authority'],
                             ['DWORD', 'Registration Authority'],
                             ['DWORD', 'Registration Version'],
                             ['DWORD', 'Account Number'],
                             ['DWORD', 'Registration Token'],
                             ['STRING', 'LAN computer name'],
                             ['STRING', 'LAN username']],
                    'id': 30,
                    'name': 'CLIENTID2',
                    'remark': 'See related link for more information.',
                    'source': 'C',
                    'type': 'SID'},
               31: {'args': [],
                    'id': 31,
                    'name': 'LEAVEGAME',
                    'remark': "Notifies Battle.net that you have left a game. \n\nPlease note: This message's official name is not known, and has been invented.",
                    'source': 'C',
                    'type': 'SID'},
               33: {'args': [['DWORD', 'Platform ID'],
                             ['DWORD', 'Product ID'],
                             ['DWORD', 'Ad ID'],
                             ['STRING', 'Filename'],
                             ['STRING', 'URL']],
                    'id': 33,
                    'name': 'DISPLAYAD',
                    'remark': 'Sent when an ad is displayed. Perhaps for statistics?\n\nNull strings are now sent in place of Filename and URL, since the need to truncate long strings to 128 characters was causing inaccuracies.',
                    'source': 'C',
                    'type': 'SID'},
               34: {'args': [['DWORD', 'Product ID *'],
                             ['DWORD', 'Product version'],
                             ['STRING', 'Game Name'],
                             ['STRING', 'Game Password']],
                    'id': 34,
                    'name': 'NOTIFYJOIN',
                    'remark': 'Notifies Battle.net that the client has joined a game. This is what causes you to receive "Your friend _ entered a _ game called _." from Battle.net if you are mutual friends with this client.\n\nSID_LEAVECHAT (0x10) does not need to be sent after this, since this does what LEAVECHAT does but with an added notification.\n\n* This can be any valid Product ID, even if you are not connected with that ID.',
                    'source': 'C',
                    'type': 'SID'},
               36: {'args': [['DWORD', 'First DWORD from S -> C'],
                             ['DWORD', 'Second DWORD from S -> C'],
                             ['STRING', 'Registry key name'],
                             ['STRING', 'Registry key value']],
                    'id': 36,
                    'name': 'READCOOKIE',
                    'remark': "Much like a website cookie, simply stores some arbitrary string to a 'cookie jar' to save preferences et al. which can be retrieved later by the server.\n\nNot used because it was quickly discovered that storing preferences produces less problems and were faster by storing them server-side, associating them with the account. It is somewhat curious that these packet IDs are close to SID_PROFILE/SID_WRITEPROFILE (0x26 & 0x27).\n\nFound at: battle!190216FBh and battle!1901D660h, respectively.",
                    'source': 'C',
                    'type': 'SID'},
               37: {'args': [['DWORD', 'Ping Value']],
                    'id': 37,
                    'name': 'PING',
                    'remark': "Ping response. Ping Value is the DWORD received in the server's initial ping message.\n\nThe ping displayed when in chat can be artificially inflated by delaying before sending this packet, or deflated by responding before requested.\nPing can be set to -1 (Strictly speaking, 0xFFFFFFFF, since ping is unsigned) by not responding to this packet at all.\n\nThe DWORD received from the server is not what determines your ping, but it is actually a cookie for the Battle.net server. You should never change the DWORD.",
                    'source': 'C',
                    'type': 'SID'},
               38: {'args': [['DWORD', 'Number of Accounts'],
                             ['DWORD', 'Number of Keys'],
                             ['DWORD', 'Request ID'],
                             ['STRING[]', ' Requested Accounts'],
                             ['STRING[]', ' Requested Keys']],
                    'id': 38,
                    'name': 'READUSERDATA',
                    'remark': 'Requests an extended profile.\n\nPlease note that if you provide more than one account, Battle.net will return your request as if you sent it with 0 accounts and 0 keys, indicating that no data is present other than the 3 DWORDs seen here. This means you cannot use this packet for multiple users all at once; you must submit this packet once for each user you wish to know about. This only applies to official Battle.net servers, it might not apply to PvPGN servers or equivalent software.\n\nAlso, requesting 0x20 (32) or more keys at one time makes Battle.net kick you (it does not ban you, however).\n\n\nProfile Keys: *\nUser Profiles:\nprofile\\sex **\nprofile\\age † \nprofile\\location\nprofile\\description\n\nAccount Info: ***</dt>\n<dd>System\\Account Created</dd>\n<dd>System\\AuthLevel</dd>\n<dd>System\\Flags</dd>\n<dd>System\\Friends</dd>\n<dd>System\\Icon</dd>\n<dd>System\\IP</dd>\n<dd>System\\Last Logoff</dd>\n<dd>System\\Last Logon</dd>\n<dd>System\\League</dd>\n<dd>System\\MFT Bytes</dd>\n<dd>System\\MFT Last Write</dd>\n<dd>System\\MFT Time Logged</dd>\n<dd>System\\Port</dd>\n<dd>System\\Time Logged</dd>\n<dd>System\\Username</dd>\n\n<dt><b>Normal Games:</b></dt>\n<dd>record\\GAME\\0\\wins</dd>\n<dd>record\\GAME\\0\\losses</dd>\n<dd>record\\GAME\\0\\disconnects</dd>\n<dd>record\\GAME\\0\\last game</dd>\n<dd>record\\GAME\\0\\last game result</dd>\n\n<dt><b>Ladder Games:</b></dt>\n<dd>record\\GAME\\1\\wins</dd>\n<dd>record\\GAME\\1\\losses</dd>\n<dd>record\\GAME\\1\\disconnects</dd>\n<dd>record\\GAME\\1\\rating</dd>\n<dd>record\\GAME\\1\\high rating</dd>\n<dd>DynKey\\GAME\\1\\rank</dd>\n<dd>record\\GAME\\1\\high rank</dd>\n<dd>record\\GAME\\1\\last game</dd>\n<dd>record\\GAME\\1\\last game result</dd>\n\n<dt><b>IronMan Ladder Games: ‡</b></dt>\n<dd>record\\GAME\\3\\wins</dd>\n<dd>record\\GAME\\3\\losses</dd>\n<dd>record\\GAME\\3\\disconnects</dd>\n<dd>record\\GAME\\3\\last game</dd>\n<dd>record\\GAME\\3\\last game result</dd>\n<dd>record\\GAME\\3\\rating</dd>\n<dd>record\\GAME\\3\\high rating</dd>\n<dd>DynKey\\GAME\\3\\rank</dd>\n<dt>* This list is not complete, and could use adding to.</dt>\n<dt>** This field is defunct in STAR/SEXP/WAR3/W3XP.</dt>\n<dt>†  This field is defunct.</dt>\n<dt>*** Battle.net returns blank values for anyone but yourself.</dt>\n<dt>‡ W2BN only.</dt>\n<dt>Note that any profile\\ key can contain an 0x09 (tab) character.</dt>\n</dl>',
                    'source': 'C',
                    'type': 'SID'},
               39: {'args': [['DWORD', 'Number of accounts'],
                             ['DWORD', 'Number of keys'],
                             ['STRING[]', ' Accounts to update'],
                             ['STRING[]', ' Keys to update'],
                             ['STRING[]', ' New values']],
                    'id': 39,
                    'name': 'WRITEUSERDATA',
                    'remark': "Updates the Client's profile.\nCurrently, the allowed keys for this are Sex, Location, and Description. The maximum length for the values is 512, including the null terminator.\n\nSee SID_READUSERDATA for more information.",
                    'source': 'C',
                    'type': 'SID'},
               41: {'args': [['DWORD', 'Client Token'],
                             ['DWORD', 'Server Token'],
                             ['DWORD', '[5] Password Hash'],
                             ['STRING', 'Username']],
                    'id': 41,
                    'name': 'LOGONRESPONSE',
                    'remark': "Contains Client's username & hashed password.\n\nBattle.net password hashes are hashed twice. First, the password is hashed by itsself, then the following data is hashed again and sent to Battle.net:\n\nClient Token\nServer Token\nFirst password hash (20 bytes)\n\nPasswords should be converted to lower case before hashing.",
                    'source': 'C',
                    'type': 'SID'},
               42: {'args': [['DWORD', '[5] Hashed password'],
                             ['STRING', 'Username']],
                    'id': 42,
                    'name': 'CREATEACCOUNT',
                    'remark': '\nCreates an account.\n\n Usernames longer than 15 characters are truncated, and the password is only hashed once (unlike SID_LOGONRESPONSE).\n\n This packet is identical to SID_CREATEACCOUNT2, but the response is limited to success/fail. Developers who wish to\nprovide a reason for account creation failure should use SID_CREATEACCOUNT2.\n\n Currently, SID_CREATEACCOUNT2 may be used with any product, but the protocol-correct packet to use depends on the\nproduct you are emulating.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               43: {'args': [['DWORD', 'Request ID'],
                             ['DWORD', 'Unknown'],
                             ['FILETIME', 'Last update time'],
                             ['STRING', 'Filename']],
                    'id': 43,
                    'name': 'SYSTEMINFO',
                    'remark': '\nContains the latest filetime for the requested file. If the file does not exist, the returned filetime is null.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               44: {'args': [['DWORD', 'Game type'],
                             ['DWORD', 'Number of results - always 8'],
                             ['DWORD', '[8] Results'],
                             ['STRING', '[8] Game players - always 8'],
                             ['STRING', 'Map name'],
                             ['STRING', 'Player score']],
                    'id': 44,
                    'name': 'GAMERESULT',
                    'remark': "Contains end-of-game statistics. Player Score is a string containing right-aligned lines separated by 0x0A. The positions in the 'Results' array and the 'Players' array are equivalent.\nPossible values for Game type:\n0x00: Normal\n0x01: Ladder\n0x03: Ironman (W2BN only)\nPossible values for Result:\n0x00: No player\n0x01: Win\n0x02: Loss\n0x03: Draw\n0x04: Disconnect",
                    'source': 'C',
                    'type': 'SID'},
               45: {'args': [],
                    'id': 45,
                    'name': 'GETICONDATA',
                    'remark': 'Requests the filename & time of the default icons file for the current game. This message must not be sent after receiving SID_ENTERCHAT or Battle.net will terminate the connection.',
                    'source': 'C',
                    'type': 'SID'},
               46: {'args': [['DWORD', 'Product ID'],
                             ['DWORD', 'League'],
                             ['DWORD', 'Sort method'],
                             ['DWORD', 'Starting rank'],
                             ['DWORD', 'Number of ranks to list']],
                    'id': 46,
                    'name': 'GETLADDERDATA',
                    'remark': 'Requests ladder listing.\nSort methods:\n0x00: Highest rating\n0x01: Fastest climbers\n0x02: Most wins on record\n0x03: Most games played',
                    'source': 'C',
                    'type': 'SID'},
               47: {'args': [['DWORD', 'League'],
                             ['DWORD', 'Sort method'],
                             ['STRING', 'Username']],
                    'id': 47,
                    'name': 'FINDLADDERUSER',
                    'remark': "Requests a user's status on ladder.\nSort method:\n0x00: Highest rating\n0x01: Unused\n0x02: Most wins on record\n0x03: Most games played",
                    'source': 'C',
                    'type': 'SID'},
               48: {'args': [['DWORD', 'Spawn (0/1)'],
                             ['STRING', 'CDKey'],
                             ['STRING', 'Key Owner']],
                    'id': 48,
                    'name': 'CDKEY',
                    'remark': 'Contains unhashed CD key information.',
                    'source': 'C',
                    'type': 'SID'},
               49: {'args': [['DWORD', 'Client Token'],
                             ['DWORD', 'Server Token'],
                             ['DWORD', '[5] Old password hash'],
                             ['DWORD', '[5] New password hash'],
                             ['STRING', 'Account name']],
                    'id': 49,
                    'name': 'CHANGEPASSWORD',
                    'remark': 'Changes Battle.net account password. This message must be sent before you logon.\n\nPasswords should be converted to lower case before hashing.',
                    'source': 'C',
                    'type': 'SID'},
               50: {'args': [['DWORD', '[5] File checksum'],
                             ['STRING', 'File name']],
                    'id': 50,
                    'name': 'CHECKDATAFILE',
                    'remark': 'This message was used to check a digest of a game file. This message is no longer used; developers should use the SID_CHECKDATAFILE2 message.\n\nThe digest is created by using the broken SHA-1 hash on the first 64-bytes of the (filesize % 64) times. This due to a bug in the client.',
                    'source': 'C',
                    'type': 'SID'},
               51: {'args': [['DWORD', 'Request ID'],
                             ['DWORD', 'Unknown'],
                             ['STRING', 'Filename']],
                    'id': 51,
                    'name': 'GETFILETIME',
                    'remark': '\nThis packet seems to request the current filetime for the specified file. Purpose of first 2 DWORDs is unknown,\nhowever, both are echoed back to the client by Battle.net and do not seem to affect the reply. Because of this it is\nreasonable to assume that first DWORD at least is a request ID of some kind. This is called into question, however, by\nthe fact that the replying packet also contains the requested filename. The game (STAR/SEXP) always sends the same\nnumber in DWORD 1 for the file in question. DWORD 2 seems to be null.\n\n Known codes for DWORD 1: 0x01: tos_usa.txt\n 0x03: bnserver-WAR3.ini\n 0x1A: tos_USA.txt\n 0x1B: bnserver.ini\n 0x1D: icons_STAR.bni\n 0x80000005: IX86ExtraWork.mpq\n 0x80000004: bnserver-D2DV.ini\n\n',
                    'source': 'C',
                    'type': 'SID'},
               52: {'args': [['DWORD', 'Unused (0)'],
                             ['DWORD', 'Unused (0)'],
                             ['STRING', 'Unknown (empty)']],
                    'id': 52,
                    'name': 'QUERYREALMS',
                    'remark': '\nRequests a realm listing.\n\n This packet is no longer used. SID_QUERYREALMS2 is used instead.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               53: {'args': [['DWORD', 'Cookie'], ['STRING', 'Username']],
                    'id': 53,
                    'name': 'PROFILE',
                    'remark': "This requests a profile for a user.\n\nPlease note: This message's official name is not known, and has been invented.",
                    'source': 'C',
                    'type': 'SID'},
               54: {'args': [['DWORD', 'Spawn (0/1)'],
                             ['DWORD', 'Key Length'],
                             ['DWORD', 'CDKey Product'],
                             ['DWORD', 'CDKey Value1'],
                             ['DWORD', 'Server Token'],
                             ['DWORD', 'Client Token'],
                             ['DWORD', '[5] Hashed Data'],
                             ['STRING', 'Key owner']],
                    'id': 54,
                    'name': 'CDKEY2',
                    'remark': 'This packet is an updated version of SID_CDKEY (0x30), designed to prevent CDKeys from being stolen, by sending them hashed instead of plain-text.\n\nThe data that should be hashed is:Client TokenServer TokenKey Product (from decoded CD key)Key Value1 (from decoded CD key)Key Value2 (from decoded CD key)',
                    'source': 'C',
                    'type': 'SID'},
               58: {'args': [['DWORD', 'Client Token'],
                             ['DWORD', 'Server Token'],
                             ['DWORD', '[5] Password Hash'],
                             ['STRING', 'Username']],
                    'id': 58,
                    'name': 'LOGONRESPONSE2',
                    'remark': '\nThis packet is the same as SID_LOGONRESPONSE, but has additional response codes.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               60: {'args': [['DWORD', 'File size in bytes'],
                             ['DWORD', 'File hash [5]'],
                             ['STRING', 'Filename']],
                    'id': 60,
                    'name': 'CHECKDATAFILE2',
                    'remark': 'Verifies that a file is authentic, by producing a hash of that file and sending it to the server for comparison to the original.\n\nThe hash is a standard SHA1 hash.',
                    'source': 'C',
                    'type': 'SID'},
               61: {'args': [['DWORD', '[5] Password hash'],
                             ['STRING', 'Username']],
                    'id': 61,
                    'name': 'CREATEACCOUNT2',
                    'remark': '\nCreates a Battle.net account. Usernames longer than 15 characters are truncated.\n\n Passwords should be converted to lower case before hashing, and are only hashed once (unlike SID_LOGONRESPONSE).\n\n',
                    'source': 'C',
                    'type': 'SID'},
               62: {'args': [['DWORD', 'Client Token'],
                             ['DWORD', '[5] Hashed realm password'],
                             ['STRING', 'Realm title']],
                    'id': 62,
                    'name': 'LOGONREALMEX',
                    'remark': '\nRealm password is always "password". The password hash is created the same way the hash is for logging on to an\naccount.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               64: {'args': [],
                    'id': 64,
                    'name': 'QUERYREALMS2',
                    'remark': '\nRequests a realm listing.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               65: {'args': [['DWORD', 'Ad ID']],
                    'id': 65,
                    'name': 'QUERYADURL',
                    'remark': 'Requests the URL for an ad if none is given.',
                    'source': 'C',
                    'type': 'SID'},
               68: {'args': [['BYTE', 'Subcommand ID'],
                             ['DWORD', 'Cookie'],
                             ['DWORD', 'Unknown'],
                             ['BYTE', 'Unknown'],
                             ['BYTE', 'Game Type\n'],
                             ['WORD',
                              'Enabled Maps (every bit is one map, from 0x0000 to 0x0FFF)'],
                             ['WORD', 'Unknown'],
                             ['BYTE', 'Unknown'],
                             ['DWORD', 'Tick Count'],
                             ['DWORD', 'Race'],
                             ['DWORD', 'Cookie'],
                             ['BYTE', 'Number of types requested'],
                             ['DWORD', 'ID*'],
                             ['DWORD', 'Checksum*'],
                             ['DWORD', 'Cookie'],
                             ['STRING', 'Account name'],
                             ['DWORD', "Product ID ('WAR3' or 'W3XP')"],
                             ['DWORD', 'Cookie'],
                             ['DWORD', 'Cookie'],
                             ['DWORD', 'Clan Tag'],
                             ['DWORD', "Product ID ('WAR3' or 'W3XP')"],
                             ['DWORD', 'Cookie'],
                             ['DWORD', 'Icon']],
                    'id': 68,
                    'name': 'WARCRAFTGENERAL',
                    'remark': 'This packet is used for multiple purposes on Warcraft III. Known and validated purposes are listed here.\n\n*Not fully known yet.',
                    'source': 'C',
                    'type': 'SID'},
               69: {'args': [['WORD', 'Port']],
                    'id': 69,
                    'name': 'NETGAMEPORT',
                    'remark': 'Sets the port used by the client for hosting WAR3/W3XP games. This value is retreived from HKCU\\Software\\Blizzard Entertainment\\Warcraft III\\Gameplay\\netgameport, and is sent after the user logs on.',
                    'source': 'C',
                    'type': 'SID'},
               70: {'args': [['DWORD', 'News timestamp']],
                    'id': 70,
                    'name': 'NEWS',
                    'remark': "\nRequests news and MOTD from battle.net.\n\n The news timestamp specifies the starting date for the news. To retrieve all available news entries, set this to zero.\nTimestamps are given in C/Unix format -- that is, the number of seconds since January 1, 1970 0:00:00.000 -- and should\nbe biased to UTC.\n\n This message should be sent when you receive SID_ENTERCHAT. The official client stops processing messages after the\nuser joins a game or enters a channel, and discards messages with more than 127 entries.\n\n News can be requested for older products, but Battle.net will only return the server's Message-of-the-Day. However,\nthis behavior has not been observed in official clients, and for an accurate protocol emulation, its use is not\nrecommended.\n\n",
                    'source': 'C',
                    'type': 'SID'},
               75: {'args': [['WORD', 'Game type'],
                             ['WORD', 'Length'],
                             ['STRING', 'Work returned data']],
                    'id': 75,
                    'name': 'EXTRAWORK',
                    'remark': '\nResponse for both SID_OPTIONALWORK and SID_REQUIREDWORK.\n\n Game type:\n 0x01: Diablo II 0x02: Warcraft III 0x03: Starcraft 0x04: World of Warcraft (Reason for this is not known, but most\nrecent libraries have included it) \n Length:The length is returned from the call to ExtraWork in the ExtraWork DLL. Traditionally, the library responsible\nfor all ExtraWork requests has been IX86ExtraWork.dll. Work returned data:This data is based on a 1024-byte buffer. The\ncall to ExtraWork takes in a structure and returns the length and buffer based on the game type.\n\n',
                    'source': 'C',
                    'type': 'SID'},
               80: {'args': [['DWORD', 'Protocol ID (0)'],
                             ['DWORD', 'Platform ID'],
                             ['DWORD', 'Product ID'],
                             ['DWORD', 'Version Byte'],
                             ['DWORD', 'Product language'],
                             ['DWORD', 'Local IP for NAT compatibility'],
                             ['DWORD', 'Time zone bias'],
                             ['DWORD', 'Locale ID'],
                             ['DWORD', 'Language ID'],
                             ['STRING', 'Country abreviation'],
                             ['STRING', 'Country']],
                    'id': 80,
                    'name': 'AUTH',
                    'remark': "\nSends information about the Client to Battle.net.\n\n *These fields can be set to zero without breaking logon.\n\n Protocol ID:Battle.net's current Protocol ID is 0. Platform ID:A DWORD specifying the client's platform (IX86, PMAC,\nXMAC, etc). Product ID:A DWORD specifying the client's game. Version:The client's version byte. Product Language:This\nfield is under investigation. It can safely be set to 0. MPQ Locale ID:This field is part of Blizzards multi-lingual MPQ\nsystem. Is used to specify which version of an MPQ should be used when the MPQ is available in multiple languages. Local\nIP:This is the local network IP of the client, in network byte order. Timezone bias:The difference, in minutes, between\nUTC and local time. The client calculates this value by subtracting the Local Time from the System Time, having\nconverted both to Filetime structures, and then converting the resultant offset to minutes by diving it by 600,000,000.\nIf you wish to understand the mechanism involved, read Microsoft's documentation on File times. Language ID, Country\nAbbreviation, and Country:These values can be retrieved by querying the system's locale information. Language ID can be\nretrieved using the GetUserDefaultLangID [8] API.\n Country Abbreviation & Country can be retrieved using the GetLocaleInfo [9] API to request the LOCALE_SABBREVCTRYNAME\nand LOCALE_SENGCOUNTRY, respectively.\n\n",
                    'source': 'C',
                    'type': 'SID'},
               81: {'args': [['DWORD', 'Client Token'],
                             ['DWORD', 'EXE Version'],
                             ['DWORD', 'EXE Hash'],
                             ['DWORD', 'Number of CD-keys in this packet'],
                             ['BOOLEAN', 'Spawn CD-key '],
                             ['DWORD',
                              "Key Length (DWORD) CD-key's product value (DWORD) CD-key's public value (DWORD) Unknown (0)"],
                             ['DWORD', '[5] Hashed Key Data'],
                             ['STRING', 'Exe Information'],
                             ['STRING', 'CD-Key owner name ']],
                    'id': 81,
                    'name': 'AUTH',
                    'remark': "\nContains the EXE Version and Hash as reported by CheckRevision(), and CDKey values. Spawn may only be used for STAR and\nW2BN.\n\n The data that should be hashed for 'Hashed Key Data' is:\n\n\t* Client Token\n\t* Server Token\n\t* Key Product (from decoded CD key)\n\t* Key Public (from decoded CD key)\n\t* (DWORD) 0\n\t* Key Private (from decoded CD key)\n\n The data that should be used for EXE Information should be separated by one space, in the format of:\n\n\t* EXE Name (like war3.exe)\n\t* Last Modified Date (like 08/16/09)\n\t* Last Modified Time (like 19:21:59)\n\t* Filesize in bytes (like 471040)\n\nAn example of a valid string would be:\n war3.exe 08/16/09 19:21:59 471040 \n * The CD Key owner name must be no greater than 15 characters, otherwise it becomes trimmed by Battle.net.\n\n ** This BOOLEAN value is actually a DWORD, not a BYTE. You will be IP-banned for 5 minutes if you assume BYTE and not\nuse the proper DWORD. Also, this value can only be TRUE for Starcraft, Japan Starcraft and Warcraft II only. Any other\ngame will cause unexpected results.\n\n",
                    'source': 'C',
                    'type': 'SID'},
               82: {'args': [['BYTE', '[32] Salt (s)'],
                             ['BYTE', '[32] Verifier (v)'],
                             ['STRING', 'Username']],
                    'id': 82,
                    'name': 'AUTH',
                    'remark': "This message is sent to create an NLS-style account. It contains the client's salt and verifier values, which are saved by the server for use with future logons.\n\nSee the [NLS/SRP Protocol] page for more information.",
                    'source': 'C',
                    'type': 'SID'},
               83: {'args': [['BYTE', "[32] Client Key ('A')"],
                             ['STRING', 'Username']],
                    'id': 83,
                    'name': 'AUTH',
                    'remark': "This message is sent to the server to initiate a logon. It consists of the client's public key and their UserName.\n\nThe client's public key is a value calculated by the client and used for a single logon. For more information, see [NLS/SRP Protocol].",
                    'source': 'C',
                    'type': 'SID'},
               84: {'args': [['BYTE', '[20] Client Password Proof (M1)']],
                    'id': 84,
                    'name': 'AUTH',
                    'remark': "This message is sent to the server after a successful SID_AUTH_ACCOUNTLOGON. It contains the client's password proof. See [NLS/SRP Protocol] for more information.",
                    'source': 'C',
                    'type': 'SID'},
               85: {'args': [['BYTE', '[32] Client key (A)'],
                             ['STRING', 'Username']],
                    'id': 85,
                    'name': 'AUTH',
                    'remark': "This message is used to change the client's password.",
                    'source': 'C',
                    'type': 'SID'},
               86: {'args': [['BYTE', '[20] Old password proof'],
                             ['BYTE', "[32] New password's salt (s)"],
                             ['BYTE', "[32] New password's verifier (v)"]],
                    'id': 86,
                    'name': 'AUTH',
                    'remark': "This message is sent after receiving a successful SID_AUTH_ACCOUNTCHANGE message, and contains the proof for the client's new password.\n\nSee [NLS/SRP Protocol] for more information.",
                    'source': 'C',
                    'type': 'SID'},
               87: {'args': [],
                    'id': 87,
                    'name': 'AUTH',
                    'remark': 'This message is sent to upgrade an old account to an NLS-style account. It should be sent when SID_AUTH_ACCOUNTLOGON or SID_AUTH_ACCOUNTCHANGE indicates that an account upgrade is required.',
                    'source': 'C',
                    'type': 'SID'},
               88: {'args': [['DWORD', 'Client Token'],
                             ['DWORD', '[5] Old Password Hash'],
                             ['BYTE', '[32] New Password Salt'],
                             ['BYTE', '[32] New Password Verifier']],
                    'id': 88,
                    'name': 'AUTH',
                    'remark': "\n Old Password Hash:\n Broken SHA-1 Double password hash as seen in SID_LOGONRESPONSE(2) OLS.\n New Password Salt & Verifier:\n Salt and Verifier values as seen in SID_AUTH_ACCOUNTCREATE.\n\nOld Password is the account's current password. The New Password can be the same as the Old Password, but it can be used to change the password as well.\n\nBasically this packet would convert the stored password hash to a new one, and thus become NLS. However, this packet is no longer responded to, and upgrading accounts is therefore impossible.(Note: If you have an account in need of upgrading [created with SID_CREATEACCOUNT(2)], you can let the account expire and recreate it with SID_AUTH_ACCOUNTCREATE.)",
                    'source': 'C',
                    'type': 'SID'},
               89: {'args': [['STRING', 'Email Address']],
                    'id': 89,
                    'name': 'SETEMAIL',
                    'remark': 'Binds an email address to your account.\n\nSending this message is optional. However, you should only send it when either you receive SID_SETEMAIL from the server or you receive status 0x0E from SID_AUTH_ACCOUNTLOGONPROOF.\n\nThis packet used to be named SID_AUTH_RECONNECT, however Blizzard never had it implemented, and so reused the packet ID for their email system.',
                    'source': 'C',
                    'type': 'SID'},
               90: {'args': [['STRING', 'Account Name'],
                             ['STRING', 'Email Address']],
                    'id': 90,
                    'name': 'RESETPASSWORD',
                    'remark': "Requests that Battle.net reset your password. This packet must be sent before logon.\n\nThis message requires an email address because Battle.net has to prove it's your account. Since this message must be sent before SID_LOGONRESPONSE, SID_LOGONRESPONSE2, or SID_AUTH_ACCOUNTLOGON, you must supply an e-mail address so Battle.net knows that you may have ownership to it.\n\nThis packet used to be named SID_AUTH_RECONNECTPROOF, however Blizzard never had it implemented, and so reused the packet ID for their email system.",
                    'source': 'C',
                    'type': 'SID'},
               91: {'args': [['STRING', 'Account Name'],
                             ['STRING', 'Old Email Address'],
                             ['STRING', 'New Email Address']],
                    'id': 91,
                    'name': 'CHANGEEMAIL',
                    'remark': 'Requests Battle.net to change the email address bound to an account. This packet must be sent before logon.\n\nThis packet used to be named SID_AUTH_DISCONNECT, however Blizzard never had it implemented, and so reused the packet ID for their email system.',
                    'source': 'C',
                    'type': 'SID'},
               92: {'args': [['DWORD', 'Product ID']],
                    'id': 92,
                    'name': 'SWITCHPRODUCT',
                    'remark': "When logging onto WAR3, while having W3XP installed on your system; the client sends two CDKey hashes in SID_AUTH_CHECK and uses 'W3XP' as the Product Id in SID_AUTH_INFO. After a successful SID_AUTH_CHECK, the client then sends this packet with the Product ID set to 'WAR3' to make the switch from expansion to non-expansion.",
                    'source': 'C',
                    'type': 'SID'},
               93: {'args': [['DWORD', 'Version? (0x010A0027)'],
                             ['DWORD', 'Exception code'],
                             ['DWORD', 'Unknown'],
                             ['DWORD', 'Unknown']],
                    'id': 93,
                    'name': 'REPORTCRASH',
                    'remark': 'When the game crashes, (usually) a file named Crashdump is created. If this file exists at the next logon, the contents of it are sent to Battle.net in this message.\n\nThe first DWORD for Diablo II is a constant value (version?), as seen in Fog.dll.\n\nAll calls to Fog_10052 result in the output of Crashdump.\n\nMore research is required.',
                    'source': 'C',
                    'type': 'SID'},
               94: {'args': [['VOID', 'Encrypted Packet'],
                             ['BYTE', 'Packet Code'],
                             ['BYTE',
                              "Success (0x00 = Don't have the module, 0x01 = Have the module)"],
                             ['BYTE',
                              "Success (0x00 = MD5 doesn't match, 0x01 = MD5 matches)"],
                             ['WORD', 'String Length'],
                             ['DWORD', 'String Checksum'],
                             ['VOID', 'String Data'],
                             ['BYTE',
                              'Success (0x00 = Read data, 0x01 = Unable to read)'],
                             ['VOID', 'Data (0x00 only)'],
                             ['BYTE',
                              "Success (0x00 = SHA1s match, 0x01 = SHA1s don't match)"],
                             ['BYTE', 'IDXor'],
                             ['DWORD', '[4] Unknown']],
                    'id': 94,
                    'name': 'WARDEN',
                    'remark': 'The packet is encrypted via standard RC4 hashing, using one key for outbound data and another for inbound. Its purpose is to return executable data and checksum information from various Warden modules. Full information on how to handle this packet may be found at the Rudimentary Warden information topic.\n\nDocumentation provided by iago and Ringo.',
                    'source': 'C',
                    'type': 'SID'},
               96: {'args': [],
                    'id': 96,
                    'name': 'GAMEPLAYERSEARCH',
                    'remark': 'This message requests a list of players for an arranged team game.',
                    'source': 'C',
                    'type': 'SID'},
               101: {'args': [],
                     'id': 101,
                     'name': 'FRIENDSLIST',
                     'remark': 'Requests a friends list from Battle.net.\n\nWorks for all clients, however D2DV/D2XP will not receive friend updates automatically. For those clients, you must request the list at your own intervals if you wish to know about any updates.',
                     'source': 'C',
                     'type': 'SID'},
               102: {'args': [['BYTE', 'Index on friends list']],
                     'id': 102,
                     'name': 'FRIENDSUPDATE',
                     'remark': 'This message requests an update on a specific user on the friends list. Battle.net should reply immediately with the same packet (see related).\n\nThe indexes are 0-based, so friend #1 on the friends list would have a value of 0 in this message, friend #2 would be 1, and so on.\n\nWorks for all clients, however D2DV/D2XP will not receive friend updates automatically. For those clients, you must request the list at your own intervals if you wish to know about any updates.',
                     'source': 'C',
                     'type': 'SID'},
               112: {'args': [['DWORD', 'Cookie'], ['DWORD', 'Clan Tag']],
                     'id': 112,
                     'name': 'CLANFINDCANDIDATES',
                     'remark': 'This message is sent to the server to check for viable candidates in the channel and friend list, and also to check the availability of the specified clan tag. If 10 or more candidates are found, the official client would prompt with a selection of users that he wants to invite to start a clan.',
                     'source': 'C',
                     'type': 'SID'},
               113: {'args': [['DWORD', 'Cookie'],
                              ['STRING', 'Clan name'],
                              ['DWORD', 'Clan tag'],
                              ['BYTE', 'Number of users to invite'],
                              ['STRING[]', ' Usernames to invite']],
                     'id': 113,
                     'name': 'CLANINVITEMULTIPLE',
                     'remark': 'This message is used to invite the initial 9 required members to a new clan. The users specified in this packet will receive 0x72.',
                     'source': 'C',
                     'type': 'SID'},
               114: {'args': [['DWORD', 'Cookie'],
                              ['DWORD', 'Clan tag'],
                              ['STRING', 'Inviter name'],
                              ['BYTE', 'Status']],
                     'id': 114,
                     'name': 'CLANCREATIONINVITATION',
                     'remark': 'This message is used to reply to an invitation to create a new clan.\n\nYou must reply to this packet using one of two statuses:\n\n0x04: Declined\n0x06: Accepted\n\nIf you do not reply after about 30 seconds (give or take), the server assumes declined.',
                     'source': 'C',
                     'type': 'SID'},
               115: {'args': [['DWORD', 'Cookie']],
                     'id': 115,
                     'name': 'CLANDISBAND',
                     'remark': 'Disbands the clan of which the client is a member. You must be a leader to send this packet.',
                     'source': 'C',
                     'type': 'SID'},
               116: {'args': [['DWORD', 'Cookie'],
                              ['STRING', 'New Cheiftain']],
                     'id': 116,
                     'name': 'CLANMAKECHIEFTAIN',
                     'remark': "Changes the clan's chieftain.",
                     'source': 'C',
                     'type': 'SID'},
               119: {'args': [['DWORD', 'Cookie'],
                              ['STRING', 'Target User']],
                     'id': 119,
                     'name': 'CLANINVITATION',
                     'remark': 'This message is used when a leader or officer invites a user to join their clan.',
                     'source': 'C',
                     'type': 'SID'},
               120: {'args': [['DWORD', 'Cookie'], ['STRING', 'Username']],
                     'id': 120,
                     'name': 'CLANREMOVEMEMBER',
                     'remark': "Kick a member out of the clan. Only clan leaders and officers may perform this action successfully. Members can only be removed if they've been in the clan for over one week.",
                     'source': 'C',
                     'type': 'SID'},
               121: {'args': [['DWORD', 'Cookie'],
                              ['DWORD', 'Clan tag'],
                              ['STRING', 'Inviter'],
                              ['BYTE', 'Status']],
                     'id': 121,
                     'name': 'CLANINVITATIONRESPONSE',
                     'remark': 'This packet is sent to accept or decline an invitation to a clan.\n\nYou must reply to this packet using one of two statuses:\n\n0x04: Declined\n0x06: Accepted\n\nIf you do not reply after about 30 seconds (give or take), the server assumes declined.',
                     'source': 'C',
                     'type': 'SID'},
               122: {'args': [['DWORD', 'Cookie'],
                              ['STRING', 'Username'],
                              ['BYTE', 'New rank']],
                     'id': 122,
                     'name': 'CLANRANKCHANGE',
                     'remark': 'Used by leaders and officers to change the rank of a clan member.\n\nNew rank:\n\n0x00: Initiate\n0x01: Peon\n0x02: Grunt\n0x03: Shaman\n0x04: Chieftain\n',
                     'source': 'C',
                     'type': 'SID'},
               123: {'args': [['DWORD', 'Cookie'], ['STRING', 'MOTD']],
                     'id': 123,
                     'name': 'CLANSETMOTD',
                     'remark': "Sets your clan's Message of the Day.",
                     'source': 'C',
                     'type': 'SID'},
               124: {'args': [['DWORD', 'Cookie']],
                     'id': 124,
                     'name': 'CLANMOTD',
                     'remark': "Requests the clan's MOTD.",
                     'source': 'C',
                     'type': 'SID'},
               125: {'args': [['DWORD', 'Cookie']],
                     'id': 125,
                     'name': 'CLANMEMBERLIST',
                     'remark': 'Requests a clan memberlist.',
                     'source': 'C',
                     'type': 'SID'},
               130: {'args': [['DWORD', 'Cookie'],
                              ['DWORD', "User's clan tag"],
                              ['STRING', 'Username']],
                     'id': 130,
                     'name': 'CLANMEMBERINFORMATION',
                     'remark': "This packet requests information about a user and their current status within their clan. If the user is in a clan, it'll return what clan they're in, their rank, along with the time they joined it in a FILETIME structure.",
                     'source': 'C',
                     'type': 'SID'}}},
 'S': {'BNLS': {1: {'args': [['BOOLEAN', 'Result'],
                             ['DWORD', 'Client Token'],
                             ['DWORD', 'CD-Key Length'],
                             ['DWORD', 'CD-Key Product Value'],
                             ['DWORD', 'CD-Key Public Value'],
                             ['DWORD', 'Unknown (0)'],
                             ['DWORD',
                              '[5] CD-Key Hash* (CDKey data for SID_AUTH_CHECK)']],
                    'id': 1,
                    'name': 'CDKEY',
                    'remark': 'Contains encryption result and data to be sent to Battle.net.',
                    'source': 'S',
                    'type': 'BNLS'},
                2: {'args': [['DWORD',
                              '[8] Data for SID_AUTH_ACCOUNTLOGON']],
                    'id': 2,
                    'name': 'LOGONCHALLENGE',
                    'remark': 'Contains data for SID_AUTH_ACCOUNTLOGON (0x53).',
                    'source': 'S',
                    'type': 'BNLS'},
                3: {'args': [['DWORD',
                              '[5] Data for SID_AUTH_ACCOUNTLOGONPROOF']],
                    'id': 3,
                    'name': 'LOGONPROOF',
                    'remark': 'Data for SID_AUTH_ACCOUNTLOGONPROOF (0x54).',
                    'source': 'S',
                    'type': 'BNLS'},
                4: {'args': [['DWORD',
                              '[16] Data for Data for SID_AUTH_ACCOUNTCREATE (0x52)']],
                    'id': 4,
                    'name': 'CREATEACCOUNT',
                    'remark': 'This message will give you data you need for SID_AUTH_ACCOUNTCREATE (0x52).',
                    'source': 'S',
                    'type': 'BNLS'},
                5: {'args': [['DWORD',
                              '[8] Data for SID_AUTH_ACCOUNTCHANGE (0x55)']],
                    'id': 5,
                    'name': 'CHANGECHALLENGE',
                    'remark': 'This message will give you data you need for SID_AUTH_ACCOUNTCHANGE (0x55).',
                    'source': 'S',
                    'type': 'BNLS'},
                6: {'args': [['DWORD',
                              '[21] Data for SID_AUTH_ACCOUNTCHANGEPROOF (0x56)']],
                    'id': 6,
                    'name': 'CHANGEPROOF',
                    'remark': 'This message contains the data to send in SID_AUTH_ACCOUNTCHANGEPROOF (0x56).',
                    'source': 'S',
                    'type': 'BNLS'},
                7: {'args': [['BOOLEAN', 'Success code']],
                    'id': 7,
                    'name': 'UPGRADECHALLENGE',
                    'remark': 'If the success code is TRUE, you may send SID_AUTH_ACCOUNTUPGRADE (0x57).\n\nCurrently, no error conditions are defined, so this is always TRUE.',
                    'source': 'S',
                    'type': 'BNLS'},
                8: {'args': [['DWORD',
                              '[22] Data for SID_AUTH_ACCOUNTUPGRADEPROOF (0x58)']],
                    'id': 8,
                    'name': 'UPGRADEPROOF',
                    'remark': 'This message contains the data to send in SID_AUTH_ACCOUNTUPGRADEPROOF (0x58).',
                    'source': 'S',
                    'type': 'BNLS'},
                9: {'args': [['BOOLEAN', 'Success'],
                             ['DWORD', 'Version'],
                             ['DWORD', 'Checksum'],
                             ['STRING', 'Version check stat string']],
                    'id': 9,
                    'name': 'VERSIONCHECK',
                    'remark': 'This message contains the information required for the specified product.\n\nSuccess is TRUE if successful, FALSE otherwise. If this is FALSE, there is no more data in this message.',
                    'source': 'S',
                    'type': 'BNLS'},
                10: {'args': [['BOOLEAN', 'Success']],
                     'id': 10,
                     'name': 'CONFIRMLOGON',
                     'remark': 'Success is TRUE if the server knows your password, FALSE otherwise. If this is FALSE, the Battle.net connection should be closed by the client.',
                     'source': 'S',
                     'type': 'BNLS'},
                11: {'args': [['DWORD', '[5] The data hash.'],
                              ['DWORD',
                               'Cookie (Optional). Same as the cookie from the request.']],
                     'id': 11,
                     'name': 'HASHDATA',
                     'remark': 'This message contains the hashed data.\n\nCookie is only in this packet if you supplied it first.',
                     'source': 'S',
                     'type': 'BNLS'},
                12: {'args': [['DWORD', 'Cookie'],
                              ['BYTE', 'Number of CD-keys requested'],
                              ['BYTE',
                               'Number of successfully encrypted CD-keys'],
                              ['DWORD', 'Bit mask'],
                              ['DWORD', 'Client session key'],
                              ['DWORD', '[9] CD-key data']],
                     'id': 12,
                     'name': 'CDKEY',
                     'remark': 'When the flags do not contain CDKEY_OLD_STYLE_RESPONSES (0x08), the response is this message.\n\nCookie is the same as the value sent to the server in the request.\n\nThe bit mask field contains the success code for each CD-key. Each bit of the 32 bits in this DWORD is 1 for success or 0 for failure. The least significant bit specifies the success code of the first CD-key provided. Bits that exceed the amount of CD-keys provided are set to 0',
                     'source': 'S',
                     'type': 'BNLS'},
                13: {'args': [['BOOLEAN', 'Success code (32-bit)']],
                     'id': 13,
                     'name': 'CHOOSENLSREVISION',
                     'remark': 'If the Success code is TRUE, the revision number was recognized by the server and will be used. If it is FALSE, the revision number was rejected by the server and this request is ignored.\n\nNOTE: The default revision number is 1.\nTherefore, if Battle.net reports a revision number of 1, this message may be omitted.\nIn almost all cases, you will have to send this to BNLS before any NLS work.',
                     'source': 'S',
                     'type': 'BNLS'},
                14: {'args': [['DWORD', 'Server code']],
                     'id': 14,
                     'name': 'AUTHORIZE',
                     'remark': 'If the bot ID is not recognized by the server, then this message is still sent as backwards compatibility with the previous version of BNLS, which required authorization.\n\nThe client should calculate the checksum of the auth password and the server code using the [BNLS Checksum Algorithm]. The result is sent in BNLS_AUTHORIZEPROOF (0x0F).',
                     'source': 'S',
                     'type': 'BNLS'},
                15: {'args': [['DWORD', 'Status code']],
                     'id': 15,
                     'name': 'AUTHORIZEPROOF',
                     'remark': 'If the client sent a valid account name, but the password checksum is incorrect, the connection is terminated. Otherwise, this response is sent. The following status codes are defined:\n\n0x00: Authorized\n0x01: Unauthorized\n\nView consts: [pas cpp vb]\n\nAuthorized means the login was performed as a registered account.\nUnauthorized means the bot ID provided was invalid, so an anonymous login was performed instead.\n\nThis indicates a success condition, and the client is now allowed to send other messages. More status codes may be added in the future.',
                     'source': 'S',
                     'type': 'BNLS'},
                16: {'args': [['DWORD', 'Product'],
                              ['DWORD', 'Version byte']],
                     'id': 16,
                     'name': 'REQUESTVERSIONBYTE',
                     'remark': '\nOn failure, Product is 0. On success, this is equal to the requested Product.\n\n If Product is 0, the Version byte DWORD is not included in the message.\n\n Possible values for Product:\n\n 0x01: Starcraft\n 0x02: Starcraft Brood War\n 0x03: Warcraft II Battle.net Edition\n 0x04: Diablo II\n 0x05: Diablo II: Lord of Destruction\n 0x06: Starcraft Japanese\n 0x07: Warcraft III\n 0x08: Warcraft III: The Frozen Throne\n\n JBLS adds these products:\n\n 0x09: Diablo Retail\n 0x0A: Diablo Shareware\n 0x0B: Starcraft Shareware\n\n BNLS# adds this product:\n\n 0x0C: Warcraft III: Demo\n\n',
                     'source': 'S',
                     'type': 'BNLS'},
                17: {'args': [['BOOLEAN', 'Success '],
                              ['DWORD', 'Version'],
                              ['DWORD', 'Checksum'],
                              ['STRING', 'Version check stat string'],
                              ['DWORD', 'Cookie'],
                              ['DWORD',
                               'The latest version code for this product']],
                     'id': 17,
                     'name': 'VERIFYSERVER',
                     'remark': '\n* Success is TRUE if successful, FALSE otherwise. If this is FALSE, the next DWORD is the provided cookie, following\nwhich the message ends. Do not mistake this value for a BYTE, it is actually a DWORD.\n\n',
                     'source': 'S',
                     'type': 'BNLS'},
                18: {'args': [['DWORD', 'Number of slots reserved']],
                     'id': 18,
                     'name': 'RESERVESERVERSLOTS',
                     'remark': 'This may be equal to the number of slots requested, although it does not necessarily have to be the same value.\n\nValid slot indicies are in the range of [0, Slots reserved - 1]. Each slot stores state information about a NLS checking operation.\n\nA logon checking session must be finished on the same slot on which it was started. If a logon checking session is abandoned before it is completed, no special action is required. Starting a new logon checking session on a slot overwrites all previous state information. A logon checking session cannot be resumed if the connection to BNLS is interrupted before it is completed.',
                     'source': 'S',
                     'type': 'BNLS'},
                19: {'args': [['DWORD', 'Slot index'],
                              ['DWORD',
                               "[16] Data for the server's SID_AUTH_ACCOUNTLOGON (0x53) response"]],
                     'id': 19,
                     'name': 'SERVERLOGONCHALLENGE',
                     'remark': "The slot index is returned since individual operations may be returned in a different order than they are requested.\n\nThis message can also be used to calculate the server's SID_AUTH_ACCOUNTCHANGE (0x55) response. Simply substitute the SID_AUTH_ACCOUNTLOGON (0x53) data with the SID_AUTH_ACCOUNTCHANGE (0x55) data.",
                     'source': 'S',
                     'type': 'BNLS'},
                20: {'args': [['DWORD', 'Slot index'],
                              ['BOOLEAN', 'Success (32-bit)'],
                              ['DWORD',
                               "[5] Data for server's SID_AUTH_ACCOUNTLOGONPROOF (0x54) response."]],
                     'id': 20,
                     'name': 'SERVERLOGONPROOF',
                     'remark': "After this message is received, the logon checking sequence for a particular logon session is complete. This message can also be used to calculate the server's SID_AUTH_ACCOUNTCHANGEPROOF (0x56) response, and check the client's change password request. Simply substitute the SID_AUTH_ACCOUNTLOGONPROOF (0x54) data with the SID_AUTH_ACCOUNTCHANGEPROOF (0x56) data.\n\nIf the Success code is TRUE, then the client's logon information was valid. Otherwise, if it is FALSE, the client's logon information was invalid, and the logon request must be denied.",
                     'source': 'S',
                     'type': 'BNLS'},
                24: {'args': [['BOOLEAN', 'Success *'],
                              ['DWORD', 'Version'],
                              ['DWORD', 'Checksum'],
                              ['STRING', 'Version check stat string'],
                              ['DWORD', 'Cookie'],
                              ['DWORD',
                               'The latest version code for this product']],
                     'id': 24,
                     'name': 'VERSIONCHECKEX',
                     'remark': '* Success is TRUE if successful, FALSE otherwise. If this is FALSE, the next DWORD is the provided cookie, following which the message ends. Do not mistake this value for a BYTE, it is actually a DWORD.',
                     'source': 'S',
                     'type': 'BNLS'},
                26: {'args': [['BOOLEAN', 'Success '],
                              ['DWORD', 'Version'],
                              ['DWORD', 'Checksum'],
                              ['STRING', 'Version check stat string'],
                              ['DWORD', 'Cookie'],
                              ['DWORD',
                               'The latest version code for this product']],
                     'id': 26,
                     'name': 'VERSIONCHECKEX2',
                     'remark': '\n* Success is TRUE if successful, FALSE otherwise. If this is FALSE, the next DWORD is the provided cookie, following\nwhich the message ends. Do not mistake this value for a BYTE, it is actually a DWORD.\n\n',
                     'source': 'S',
                     'type': 'BNLS'},
                125: {'args': [['BYTE', 'Command'],
                               ['DWORD', 'Cookie'],
                               ['BYTE', 'Result code'],
                               ['WORD', 'Length of Data'],
                               ['VOID', 'Data']],
                      'id': 125,
                      'name': 'WARDEN',
                      'remark': 'Provides you with the proper response to a 0x5E SID_WARDEN packet. If you receive result 0x00, then you should respond to SID_WARDEN with the Data, otherwise you should not respond to the SID_WARDEN packet.\n\n\nPossible result codes:\n0x00 Success\n0x01 Unable to find your allocated packet handler.\n0x02 Incoming data is corrupted\n0x03 Warden module is not loaded yet\n0x04 Error executing warden module\n0x05 Unsupported Battle.net client/game\n0x06 Warden hack check error\n0x07 Warden check invalid\n0x08 Incoming warden packet unsupported\n0x09 Unsupported warden info type</dd>\n<dd>0xFD Invalid password</dd>\n<dd>0xFE Invalid username</dd>\n<dd>0xFF Your request was corrupted</dd>\n</dl>',
                      'source': 'S',
                      'type': 'BNLS'},
                255: {'args': [['VOID', 'Message from the server']],
                      'id': 255,
                      'name': 'IPBAN',
                      'remark': "This packet was not part of the original BNLS documentation, however it was necessary to add it because it can be seen on some BNLS software including BNLSWarden. The packet was created to warn users that their IP address has been restricted temporarily, and that they should reconnect later. However, some servers have been seen using this packet for other purposes.\n\nThe given message is a normal string except that it lacks a null-terminator, therefore for the lack of a length-descriptor and/or null-terminator, it has been given the VOID data type instead of STRING. To get the full length of the message, use the packet's length-descriptor in the header then subtract four (4) from that.\n\nWhen BNLSWarden sends you this, you will also be disconnected from the server. On all BNLS software implementing this packet, the server usually will send this to you immediately after you connect. There is no way to trigger this packet specifically.\n\nIn all cases, this packet can be disregarded (or left unrecognized), since the server will still operate normally as it would without the packet, even if you do not recognize or make use of this packet.",
                      'source': 'S',
                      'type': 'BNLS'}},
       'D2GS': {16: {'args': [['BYTE', 'Unknown'],
                              ['DWORD', 'Player ID'],
                              ['BYTE', 'Movement Type'],
                              ['BYTE', 'Destination Type'],
                              ['DWORD', 'Object ID'],
                              ['WORD', 'X Coordinate'],
                              ['WORD', 'Y Coordinate']],
                     'id': 16,
                     'name': 'CHARTOOBJ',
                     'remark': "\nA character moves to an object within your view range.\n\n * - These are what the player is moving to.\n\n Possible values for Destination Type:\n 0x00 - Another player\n 0x01 - NPC or Monster\n 0x02 - Object such as Stash, Waypoint, or a Town Portal\n 0x04 - Item\n 0x05 - Doorway\n\n Possible value for Movement Type:\n\n 0x18 - Run\n 0x00 - Walk Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'S',
                     'type': 'D2GS'},
                25: {'args': [['BYTE', 'Amount']],
                     'id': 25,
                     'name': 'SMALLGOLDPICKUP',
                     'remark': "\nSent when you pick up a BYTE (255) of gold(254 or less).\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'S',
                     'type': 'D2GS'},
                29: {'args': [['BYTE', 'Attribute'], ['BYTE', 'Amount']],
                     'id': 29,
                     'name': 'SETBYTEATTR',
                     'remark': "\nSets the current (base) amount of the specified attribute.\n\n Note: Since these are only base amounts, items that give increase/decrease the attribute should be added/subtracted\nto/from the base value sent in the message.\n\n Possible Attributes:\n\n 0x00 - Strength \n 0x01 - Energy \n 0x02 - Dexterity \n 0x03 - Vitality \n 0x04 - Stat remaining \n 0x05 - Skill remaining \n 0x0C - Level \n 0x0D - Experience \n 0x0E - Gold on Person \n 0x0F - Gold in Stash \n 0x10 - Defense \n 0x11 - Max Attack Damage \n 0x12 - Min Attack Damage \n 0x13 - Attack Rating \n 0x15 - Min Attack Damage \n 0x16 - Max Attack Damage \n 0x19 - Damage \n 0x1f - Defense \n 0x27 - Fire Resistance \n 0x28 - +Max Fire Resistance \n 0x29 - Cold Resistance \n 0x2A - +Max Cold Resistance \n 0x2B - Lightning Resistance \n 0x2C - +Max Lightning Resistance \n 0x2D - Poison Resistance \n 0x2E - +Max poison Resistance \n 0x31 - Add Fire Damage \n 0x33 - Add Lightning damage \n 0x35 - Add Damage for Weapon/Items probably (one of these may be cold damage) \n 0x37 - Add Damage for Weapon/Items probably (one of these may be cold damage) \n 0x3A - Add Poison Damage \n 0x4C - Add Max Health for Weapon/Items probably \n 0x4D - Add Max Mana for Weapons/Items probably \n 0xA2 - Add Max Stamina for Weapons/Items probably \n 0xA3 - Add Max Stamina for Weapons/Items probably \n 0xAB - Add to Defense\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'S',
                     'type': 'D2GS'},
                30: {'args': [['BYTE', 'Attribute'], ['WORD', 'Amount']],
                     'id': 30,
                     'name': 'SETWORDATTR',
                     'remark': "\nSets the current (base) amount of the specified attribute.\n\n Note: Since these are only base amounts, items that give increase/decrease the attribute should be added/subtracted\nto/from the base value sent in the message.\n\n For attributes, see D2GS_SETBYTEATTR.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'S',
                     'type': 'D2GS'},
                31: {'args': [['BYTE', 'Attribute - D2GS_SETWORDATTR'],
                              ['DWORD', 'Amount']],
                     'id': 31,
                     'name': 'SETDWORDATTR',
                     'remark': "\nUpdates an attribute and sets it to the value sent, 4 bytes max.\n\n Please note: This message's official name is not known, and has been invented. \n\n",
                     'source': 'S',
                     'type': 'D2GS'},
                81: {'args': [['BYTE',
                               'Object Type - Any information appreciated'],
                              ['DWORD', 'Object ID'],
                              ['WORD', 'Object unique code'],
                              ['WORD', 'X Coordinate'],
                              ['WORD', 'Y Coordinate'],
                              ['BYTE', 'State '],
                              ['BYTE', 'Interaction Condition']],
                     'id': 81,
                     'name': 'WORLDOBJECT',
                     'remark': "\nServer-assigned coordinate, object ID, and state/interaction properties.\n\n States:\n 0x00 - Object's state can be changed. (Confirm?)\n 0x02 - Object's state cannot be changed with (0x13) interaction. (Confirm?)\n\n Interaction Conditions:\n 0x00 - General object. E.G.: Stash, chests, etc.\n 0x01 - Refresh shrine\n 0x02 - Health shrine\n 0x05 - Chest will catch fire (upon interaction)\n 0x08 - Monster contained within chest (sarcophagus)\n 0x0D - Mana recharge shrine\n 0x0E - Stamina shrine\n 0x0F - Experience shrine\n 0x13 - Fire shrine\n 0x80 - Chest is locked (State will be 0)\n\n *If this value is 0, expect no packet 0x0E (status) to follow, if 2, then there will be.\n\n Please note: This message's official name is not known, and has been invented.\n\n",
                     'source': 'S',
                     'type': 'D2GS'},
                92: {'args': [],
                     'id': 92,
                     'name': '(COMP)STARTGAME',
                     'remark': "This packet is part of the logon sequence, not to be confused with the other 0x5C.\nThis packet is originally received compressed, so the message ID will correspond with [Protocol Headers] D2GS compressed format.\nThis message is received with the 'OK' that you can go ahead and enter the gaming environment. \n\nPlease note: This message's official name is not known, and has been invented.",
                     'source': 'S',
                     'type': 'D2GS'},
                119: {'args': [['BYTE', 'Request Type']],
                      'id': 119,
                      'name': 'TRADEACTION',
                      'remark': "\nA character is trading with you.\n\n Possible Request Type values:\n 0x01 - Player requests trade initiation\n 0x05 - Player presses 'Accept'\n 0x06 - 'Accept' button disabled for both players\n 0x09 - Out of inventory space\n 0x0C - Player cancels trade\n 0x0D - You accepted the trade agreement\n 0x0E - Your 'Accept' button is disabled\n 0x0F - 'Accept' buttons re-enabled Please note: This message's official name is not known, and has been invented.\n\n",
                      'source': 'S',
                      'type': 'D2GS'},
                122: {'args': [['DWORD',
                                'Unknown - Possible acceptance/request ID']],
                      'id': 122,
                      'name': 'LOGONRESPONSE',
                      'remark': "\nThis message is originally received compressed, so the message ID will correspond with D2GS compressed format.\n\n This message is received if your logon is accepted by the D2GS.\n\n Please note: This message's official name is not known, and has been invented. \n\n",
                      'source': 'S',
                      'type': 'D2GS'},
                137: {'args': [['BYTE', 'EventId // see below,']],
                      'id': 137,
                      'name': 'UNIQUEEVENTS',
                      'remark': "\nI'm sure there are many others by looking at the gaps here.\n\n Note1: Unsure what to name this any suggestions will be taken into account.\n Note2: This seems to relate to various events that relate directly or indirectly to key quest states//events.\n\n",
                      'source': 'S',
                      'type': 'D2GS'},
                175: {'args': [],
                      'id': 175,
                      'name': 'STARTLOGON',
                      'remark': "\nPermission to initiate Game Server Logon.\n\n * - Although this packet is blank, the data received will still be compressed. Meaning the actual message size will be\ntwo bytes in length. (See [Sizes & Types]) Please note: This message's official name is not known, and has been\ninvented.\n\n",
                      'source': 'S',
                      'type': 'D2GS'}},
       'MCP': {1: {'args': [['DWORD', 'Result']],
                   'id': 1,
                   'name': 'STARTUP',
                   'remark': 'Contains the return value from MCP Startup.\n\nKnown return values:\n0x02, 0x0A-0x0D: Realm Unavailable: No Battle.net connection detected.\n0x7E: CDKey banned from realm play.\n0x7F: Temporary IP ban \\"Your connection has been temporarily restricted from this realm. Please try to log in at another time.\\"\nElse: Success.\n',
                   'source': 'S',
                   'type': 'MCP'},
               2: {'args': [['DWORD', 'Result']],
                   'id': 2,
                   'name': 'CHARCREATE',
                   'remark': '\nThe return value for character creation.\n  Known values: 0x00: Success 0x14: Character already exists, or maximum number of characters (currently 8) reached.\n0x15: Invalid name \n\n',
                   'source': 'S',
                   'type': 'MCP'},
               3: {'args': [['WORD', 'Request Id'],
                            ['WORD', 'Game token'],
                            ['WORD', 'Unknown (0)'],
                            ['DWORD', 'Result']],
                   'id': 3,
                   'name': 'CREATEGAME',
                   'remark': '\n Result: 0x00: Game creation succeeded. This does NOT automatically join the game - the client must also send packet\nMCP_JOINGAME. 0x1E: Invalid game name. 0x1F: Game already exists. 0x20: Game servers are down. 0x6E: A dead hardcore\ncharacter cannot create games. \n\n',
                   'source': 'S',
                   'type': 'MCP'},
               4: {'args': [['WORD', 'Request ID'],
                            ['WORD', 'Game token'],
                            ['WORD', 'Unknown (0)'],
                            ['DWORD', 'IP of D2GS Server'],
                            ['DWORD', 'Game hash'],
                            ['DWORD', 'Result']],
                   'id': 4,
                   'name': 'JOINGAME',
                   'remark': '\n Possible values for result: 0x00: Game joining succeeded. In this case, Diablo 2 terminates the connection with the\nMCP and initiates the connection with the D2GS. 0x29: Password incorrect. 0x2A: Game does not exist. 0x2B: Game is full.\n0x2C: You do not meet the level requirements for this game. 0x6E: A dead hardcore character cannot join a game. 0x71: A\nnon-hardcore character cannot join a game created by a Hardcore character. 0x73: Unable to join a Nightmare game. 0x74:\nUnable to join a Hell game. 0x78: A non-expansion character cannot join a game created by an Expansion character. 0x79:\nA Expansion character cannot join a game created by a non-expansion character. 0x7D: A non-ladder character cannot join\na game created by a Ladder character. \n\n',
                   'source': 'S',
                   'type': 'MCP'},
               5: {'args': [['WORD', 'Request Id'],
                            ['DWORD', 'Index'],
                            ['BYTE', 'Number of players in game'],
                            ['DWORD', 'Status'],
                            ['STRING', 'Game name'],
                            ['STRING', 'Game description']],
                   'id': 5,
                   'name': 'GAMELIST',
                   'remark': "\nInstead of receiving a single response that has a list of all the games, the client will receive this packet once for\nevery game listed by the server.\n  Request Id: Like a cookie. This value will be whatever you sent the server in MCP_GAMELIST. Index: The game's index\non the server. Number of players in game: Self explanatory. Status: 0x00300004: Game is available to join 0xFFFFFFFF:\nServer is down \n\n",
                   'source': 'S',
                   'type': 'MCP'},
               6: {'args': [['WORD', 'Request ID'],
                            ['DWORD', 'Status '],
                            ['DWORD', 'Game Uptime (seconds)'],
                            ['WORD', 'Unknown'],
                            ['BYTE', 'Maximum players allowed'],
                            ['BYTE', 'Number of characters in the game'],
                            ['BYTE', '[16] Classes of ingame characters '],
                            ['BYTE', '[16] Levels of ingame characters '],
                            ['BYTE', 'Unused (0)'],
                            ['STRING', '[16] Character names ']],
                   'id': 6,
                   'name': 'GAMEINFO',
                   'remark': '\n* Usually 0x00300004, but rarely 0. If it is 0, the packet contains no useful information and the server is probably\ndown.\n\n ** Internally, there are 16 character slots, but the last 8 are always empty. \n This value sometimes includes some empty character slots. \n Then, some empty strings are added to the end of the packet. \n To determine the number of characters really in the game: \n\n CharsInGameReal = CharsInGameFake - AmountOfEmptyCharNames;\n\n Byte N here refers to character in slot N, or 0 if the slot is empty.\n\n',
                   'source': 'S',
                   'type': 'MCP'},
               7: {'args': [['DWORD', 'Result']],
                   'id': 7,
                   'name': 'CHARLOGON',
                   'remark': '\nLogon response.\n  Known values: 0x00: Success 0x46: Player not found 0x7A: Logon failed 0x7B: Character expired \n\n',
                   'source': 'S',
                   'type': 'MCP'},
               10: {'args': [['DWORD', 'Result']],
                    'id': 10,
                    'name': 'CHARDELETE',
                    'remark': "\nDeletion response.\n  Known values:   (Diablo II v1.10 or later) 0x00: Success 0x49: Character doesn't exist   (Diablo II v1.09 or earlier)\n0x00: Character doesn't exist 0x49: Success   \n\n",
                    'source': 'S',
                    'type': 'MCP'},
               17: {'args': [['BYTE', 'Ladder type'],
                             ['WORD',
                              'Total response size (WORD) Current message size (WORD) Total size of unreceived messages'],
                             ['WORD',
                              'Rank of first entry (WORD) Unknown (0) Message data: (DWORD)Number of entries (DWORD)Unknown (0x10) For each'],
                             ['QWORD',
                              'Character experience (BYTE) Character Flags (BYTE) Character title (WORD) Character level (BYTE) [16]']],
                    'id': 17,
                    'name': 'REQUESTLADDERDATA',
                    'remark': "\n Total Response Size: The size of the entire batch of SID_REQUESTLADDERDATA messages, excluding their headers and first\nbytes. Current Message Size: The size of the current message, excluding its header and first byte. Total size of\nunreceived messages: The total size of all the unreceived messages in the batch, excluding their headers and first\nbytes. In the last packet, this value is 0, since there are no unreceived messages. Rank of first entry: Always zero,\nexcept in the last message. In the last message, this specifies the zero-based rank of the first entry. (For example if\nthis is 17 in the last packet, then ladder entries 18-33 were retrieved.) Character Flags: 0x00: Amazon 0x01: Sorceress\n0x02: Necromancer 0x03: Paladin 0x04: Barbarian 0x05: Druid 0x06: Assassin   +0x60 to this field if it's a living\nhardcore character. +0x70 to this field if it's a dead hardcore character. The character is softcore by default.  \nCharacter Name: The character name is always 16 bytes. If the name is shorter than 16 bytes, the string is padded with\nnulls. The last byte is always null, since character names are limited to 15 chars. General Remarks: The server may\nrespond to this packet with one or more of these messages. The client must not handle the data until the last packet in\nthe batch is received. The messages' data should be concatenated backwards. For example, if 3 packets were received,\nthen the data buffer should contain the data of the 3rd packet, followed by the data of the 2nd packet, followed by the\ndata of the 1st packet. Only after the last packet was received, the data buffer should be parsed. IMPORTANT NOTE: If\nthe entry is the last entry in the packet, the character name might be smaller than 16 bytes.In this case, the client\nMUST add null bytes to the end of the packet, BEFORE adding it to the data buffer. Ladder packets are NOT SENT IN ANY\nORDER - They are often sent completely out of order and must be placed back into the proper order. You have to infer the\nsequencing based on the 'how big' fields in the 10 byte header.\n\n",
                    'source': 'S',
                    'type': 'MCP'},
               18: {'args': [['BYTE', 'Unknown'], ['STRING', 'MOTD']],
                    'id': 18,
                    'name': 'MOTD',
                    'remark': "\nContains the realm's MOTD. The Byte at the beginning is apparently ignored.\n\n",
                    'source': 'S',
                    'type': 'MCP'},
               20: {'args': [['DWORD', 'Position']],
                    'id': 20,
                    'name': 'CREATEQUEUE',
                    'remark': '\nPosition in line to create a game.\n\n',
                    'source': 'S',
                    'type': 'MCP'},
               23: {'args': [['WORD', 'Number of characters requested'],
                             ['DWORD',
                              'Number of characters that exist on this account'],
                             ['WORD', 'Number of characters returned'],
                             ['STRING',
                              'Character name (STRING) Character statstring']],
                    'id': 23,
                    'name': 'CHARLIST',
                    'remark': '\nLists characters.\n\n The statstrings in this packet do not contain the product or character name. Everything else is the same as a\ncharacter statstring you would receive from a character entering the channel.\n\n',
                    'source': 'S',
                    'type': 'MCP'},
               24: {'args': [['DWORD', 'Result']],
                    'id': 24,
                    'name': 'CHARUPGRADE',
                    'remark': '\nConverts a non-expansion character to expansion.\n  Known return values: 0x00: Success 0x46: Character not found 0x7A: Upgrade failed 0x7B: Character is expired 0x7C:\nAlready expansion character \n\n',
                    'source': 'S',
                    'type': 'MCP'},
               25: {'args': [['WORD', 'Number of characters requested'],
                             ['DWORD',
                              'Number of characters that exist on this account'],
                             ['WORD', 'Number of characters returned'],
                             ['DWORD',
                              'Expiration Date (STRING) Character name (STRING) Character statstring']],
                    'id': 25,
                    'name': 'CHARLIST2',
                    'remark': '\nLists characters.\n\n The expiration date is a second count. To determine when the character will expire, add this time to January 1\n00:00:00 UTC 1970 and determine the difference between that value and now (all in seconds).\n\n The statstrings in this packet do not contain the product or character name. Everything else is the same as a\ncharacter statstring you would receive from a character entering the channel.\n\n',
                    'source': 'S',
                    'type': 'MCP'}},
       'SID': {0: {'args': [],
                   'id': 0,
                   'name': 'NULL',
                   'remark': '\nKeeps the connection alive. Clients do not need to respond to this message.\n\n',
                   'source': 'S',
                   'type': 'SID'},
               4: {'args': [['DWORD', 'Server version'],
                            ['STRING[]', 'Server list']],
                   'id': 4,
                   'name': 'SERVERLIST',
                   'remark': '\nClient should set the internal Battle.net server list from the contents of this message.\n\n This packet is supported by all Battle.snp games and Diablo II and its expansion.\n\n',
                   'source': 'S',
                   'type': 'SID'},
               5: {'args': [['DWORD', 'Number of games'],
                            ['DWORD',
                             'Status Otherwise, games are listed thus: For each list item: WARCRAFT III: (DWORD) Game Type'],
                            ['DWORD',
                             "Language ID (WORD) Address Family (Always AF_INET) (WORD) Port (DWORD) Host's IP (DWORD) sin_zero (0) (DWORD)"],
                            ['0',
                             '(DWORD) Unknown (Public = 0x10, Private = 0x11) (DWORD) Elapsed time (in seconds) (STRING) Game name '],
                            ['STRING',
                             'Game password (always empty) (BYTE) Free slots (character representing hexadecimal number) (BYTE)[8] Host'],
                            ['STRING',
                             'Encoded map information ALL OTHER CLIENTS: (WORD) Game Type (WORD) Sub Game Type (DWORD) Language'],
                            ['WORD',
                             "Address Family (Always AF_INET) (WORD) Port (DWORD) Host's IP (DWORD) sin_zero (0) (DWORD) sin_zero (0)"],
                            ['DWORD',
                             'Game Status (DWORD) Elapsed time (in seconds) (STRING) Game name * (STRING) Game password (STRING) Game']],
                   'id': 5,
                   'name': 'CLIENTID',
                   'remark': '\nReturns a list of available games and their information. Varies depending on product.\n\n * This field is UTF-8 encoded.\n\n For WarCraft III, map information is encoded using the function found here [3]:\n Encoded data: (DWORD) Map Flags (BYTE) Map Null 1 (BYTE) Map Width (playable area) (BYTE) Map Null 2 (BYTE) Map Height\n(playable area) (BYTE) Map Null 3 (DWORD) Map CRC (STRING) Map Path (STRING) Game Host (BYTE) Map Unknown (possibly a\nSTRING with just the null terminator) (BYTE)[20] Unknown (probably a SHA1 hash) Possible flags (combine the below\nsettings) for Map Flags: Game Speed (mask 0x00000003, unique) 0x00000000: Slow 0x00000001: Normal 0x00000002: Fast\nVisibility setting (mask 0x00000F00, unique) 0x00000100: Hide Terrain 0x00000200: Map Explored 0x00000400: Always\nVisible 0x00000800: Default Observers setting (mask 0x40003000, unique) 0x00000000: No Observers 0x00002000: Observers\non Defeat 0x00003000: Full Observers 0x40000000: Referees Other advanced host settings (mask 0x07064000, combinable)\n0x00004000: Teams Together (team members are placed at neighbored starting locations) 0x00060000: Lock Teams 0x01000000:\nFull Shared Unit Control 0x02000000: Random Hero 0x04000000: Random Races Non-WarCraft III Game Statstring Field:\n For other clients, game statring follows the format found here [4].\n\n WarCraft III Game Type Field (combine the below settings):\n Game Type (mask 0x000000FF, unique) 0x00000001: Custom 0x00000009: Ladder Map Author (mask 0x00006000, combinable)\n0x00002000: Blizzard 0x00004000: Custom Battle/Scenario (mask 0x00018000, unique) 0x00000000: Battle 0x00010000:\nScenario Map Size (mask 0x000E0000, combinable) 0x00020000: Small 0x00040000: Medium 0x00080000: Huge Observers (mask\n0x00700000, unique) 0x00100000: Allowed observers ("Full Observers" and "Referees" options) 0x00200000: Observers on\ndefeat 0x00400000: No observers Public/Private (mask 0x00000800, unique) 0x00000000: Public game 0x00000800: Private\ngame STAR/SEXP/SSHR/JSTR/W2BN Game Type Field:\n Game Type (unique) 0x01: Custom (WAR3/W3XP) 0x02: Melee 0x03: Free For All 0x04: One vs One 0x05: Capture the Flag\n0x06: Greed 0x07: Slaughter 0x08: Sudden Death 0x09: Ladder 0x10: Iron man ladder (W2BN) 0x0A: Use Map Settings 0x0B:\nTeam Melee 0x0C: Team FFA 0x0D: Team CTF 0x0F: Top vs. Bottom STAR/SEXP/SSHR/JSTR/W2BN Sub Game Type Field:\n For Greed: 0x01: 2500 resources 0x02: 5000 resources 0x03: 7500 resources 0x04: 10000 resources For Slaughter: 0x01:\n15 minutes 0x02: 30 minutes 0x03: 45 minutes 0x04: 60 minutes For Team Melee, Team Free For All, and Team Capture the\nFlag: 0x01: 2 teams 0x02: 3 teams 0x03: 4 teams For Top vs. Bottom: 0x01: 1 v 7 0x02: 2 v 6 0x03: 3 v 5 0x04: 4 v 4\n0x05: 5 v 3 0x06: 6 v 2 0x07: 7 v 1 For Ladder: 0x00: Disconnects do not count as loss 0x01: Disconnects count as loss\nFor Other Game Types: 0x01: No sub-game type DRTL/DSHR Game Type Field:\n Game Type is used to specify a \'level range\'. This ensures that clients receive a list of games containing players\nwhose experience is similar to their own. 0x00: Level 1 0x01: Level 2 or 3 0x02: Level 4 or 5 0x03: Level 6 or 7 0x04:\nLevel 8 or 9 0x05: Level 10 - 12 0x06: Level 13 - 16 0x07: Level 17 - 19 0x08: Level 20 - 24 0x09: Level 25 - 29 0x0A:\nLevel 30 - 34 0x0B: Level 35 - 39 0x0C: Level 40 - 47 0x0D: Level 48 - 50 \n Note that fields from Address Family to sin_zero form a sockaddr_in structure.\n\n Valid status codes:\n This field is the \'Game Status\' for non-WarCraft III and the \'Status\' when no games are listed for both WarCraft III\nand other clients. 0x00: OK 0x01: Game doesn\'t exist 0x02: Incorrect password 0x03: Game full 0x04: Game already started\n0x06: Too many server requests\n\n',
                   'source': 'S',
                   'type': 'SID'},
               6: {'args': [['FILETIME', 'MPQ Filetime'],
                            ['STRING', 'MPQ Filename'],
                            ['STRING', 'ValueString']],
                   'id': 6,
                   'name': 'STARTVERSIONING',
                   'remark': 'Contains CheckRevision values.',
                   'source': 'S',
                   'type': 'SID'},
               7: {'args': [['DWORD', 'Result'], ['STRING', 'Patch path']],
                   'id': 7,
                   'name': 'REPORTVERSION',
                   'remark': 'Reports success/failure on challenge.\n\nResult:\n0: Failed version check\n1: Old game version\n2: Success\n3: Reinstall required',
                   'source': 'S',
                   'type': 'SID'},
               8: {'args': [['DWORD', 'Status']],
                   'id': 8,
                   'name': 'STARTADVEX',
                   'remark': 'Status\n0x00: Failed\n0x01: Success',
                   'source': 'S',
                   'type': 'SID'},
               9: {'args': [['DWORD', 'Number of games'],
                            ['DWORD', 'Status'],
                            ['DWORD', 'Game Type'],
                            ['DWORD', 'Language ID'],
                            ['WORD', 'Address Family (Always AF_INET)'],
                            ['WORD', 'Port'],
                            ['DWORD', "Host's IP"],
                            ['DWORD', 'sin_zero (0)'],
                            ['DWORD', 'sin_zero (0)'],
                            ['DWORD',
                             'Unknown (Public = 0x10, Private = 0x11)'],
                            ['DWORD', 'Elapsed time (in seconds)'],
                            ['STRING', 'Game name *'],
                            ['STRING', 'Game password (always empty)'],
                            ['BYTE',
                             'Free slots (character representing hexadecimal number)'],
                            ['BYTE',
                             "[8] Host counter (characters representing reversed hexadecimal number, ex: '20000000' for second time this host has hosted during his session)"],
                            ['STRING', 'Encoded map information'],
                            ['WORD', 'Game Type'],
                            ['WORD', 'Sub Game Type'],
                            ['DWORD', 'Language ID'],
                            ['WORD', 'Address Family (Always AF_INET)'],
                            ['WORD', 'Port'],
                            ['DWORD', "Host's IP"],
                            ['DWORD', 'sin_zero (0)'],
                            ['DWORD', 'sin_zero (0)'],
                            ['DWORD', 'Game Status'],
                            ['DWORD', 'Elapsed time (in seconds)'],
                            ['STRING', 'Game name *'],
                            ['STRING', 'Game password'],
                            ['STRING', 'Game statstring']],
                   'id': 9,
                   'name': 'GETADVLISTEX',
                   'remark': 'Returns a list of available games and their information. Varies depending on product.\n\n\n* This field is UTF-8 encoded.\n\nFor WarCraft III, map information is encoded using the function found here:\nEncoded data:\n(DWORD) Map Flags\n(BYTE) Map Null 1\n(BYTE) Map Width (playable area)\n(BYTE) Map Null 2\n(BYTE) Map Height (playable area)\n(BYTE) Map Null 3\n(DWORD) Map CRC</dd>\n<dd>(STRING) Map Path</dd>\n<dd>(STRING) Game Host</dd>\n<dd>(BYTE) Map Unknown (possibly a STRING with just the null terminator)</dd>\n<dd>(BYTE)[20] Unknown (probably a SHA1 hash)</dd></dl>\n<dl><dt>Possible flags (combine the below settings) for Map Flags:</dt>\n<dd><dl><dt>Game Speed (mask 0x00000003, unique)</dt>\n<dd>0x00000000: Slow</dd>\n<dd>0x00000001: Normal</dd>\n<dd>0x00000002: Fast</dd></dl></dd>\n<dd><dl><dt>Visibility setting (mask 0x00000F00, unique)</dt>\n<dd>0x00000100: Hide Terrain</dd>\n<dd>0x00000200: Map Explored</dd>\n<dd>0x00000400: Always Visible</dd>\n<dd>0x00000800: Default</dd></dl></dd>\n<dd><dl><dt>Observers setting (mask 0x40003000, unique)</dt>\n<dd>0x00000000: No Observers</dd>\n<dd>0x00002000: Observers on Defeat</dd>\n<dd>0x00003000: Full Observers</dd>\n<dd>0x40000000: Referees</dd></dl></dd>\n<dd><dl><dt>Other advanced host settings (mask 0x07064000, combinable)</dt>\n<dd>0x00004000: Teams Together (team members are placed at neighbored starting locations)</dd>\n<dd>0x00060000: Lock Teams</dd>\n<dd>0x01000000: Full Shared Unit Control</dd>\n<dd>0x02000000: Random Hero</dd>\n<dd>0x04000000: Random Races</dd></dl></dd></dl>\nNon-WarCraft III Game Statstring Field:<br />\nFor other clients, game statring follows the format found <a href="?op=doc&did=13">here</a>.<br />\n<br />\nWarCraft III Game Type Field (combine the below settings):<br />\n<dl><dt>Game Type (mask 0x000000FF, unique)</dt>\n<dd>0x00000001: Custom</dd>\n<dd>0x00000009: Ladder</dd></dl>\n<dl><dt>Map Author (mask 0x00006000, combinable)</dt>\n<dd>0x00002000: Blizzard</dd>\n<dd>0x00004000: Custom</dd></dl>\n<dl><dt>Battle/Scenario (mask 0x00018000, unique)</dt>\n<dd>0x00000000: Battle</dd>\n<dd>0x00010000: Scenario</dd></dl>\n<dl><dt>Map Size (mask 0x000E0000, combinable)</dt>\n<dd>0x00020000: Small</dd>\n<dd>0x00040000: Medium</dd>\n<dd>0x00080000: Huge</dd></dl>\n<dl><dt>Observers (mask 0x00700000, unique)</dt>\n<dd>0x00100000: Allowed observers (\\"Full Observers\\" and \\"Referees\\" options)</dd>\n<dd>0x00200000: Observers on defeat</dd>\n<dd>0x00400000: No observers</dd></dl>\n<dl><dt>Public/Private (mask 0x00000800, unique)</dt>\n<dd>0x00000000: Public game</dd>\n<dd>0x00000800: Private game</dd></dl>\nSTAR/SEXP/SSHR/JSTR/W2BN Game Type Field:<br />\n<dl><dt>Game Type (unique)</dt>\n<dd>0x01: Custom (WAR3/W3XP)</dd>\n<dd>0x02: Melee</dd>\n<dd>0x03: Free For All</dd>\n<dd>0x04: One vs One</dd>\n<dd>0x05: Capture the Flag</dd>\n<dd>0x06: Greed</dd>\n<dd>0x07: Slaughter</dd>\n<dd>0x08: Sudden Death</dd>\n<dd>0x09: Ladder</dd>\n<dd>0x10: Iron man ladder (W2BN)</dd>\n<dd>0x0A: Use Map Settings</dd>\n<dd>0x0B: Team Melee</dd>\n<dd>0x0C: Team FFA</dd>\n<dd>0x0D: Team CTF</dd>\n<dd>0x0F: Top vs. Bottom</dd></dl>\nSTAR/SEXP/SSHR/JSTR/W2BN Sub Game Type Field:<br />\n<dl><dt>For Greed:</dt>\n<dd>0x01: 2500 resources</dd>\n<dd>0x02: 5000 resources</dd>\n<dd>0x03: 7500 resources</dd>\n<dd>0x04: 10000 resources</dd></dl>\n<dl><dt>For Slaughter:</dt>\n<dd>0x01: 15 minutes</dd>\n<dd>0x02: 30 minutes</dd>\n<dd>0x03: 45 minutes</dd>\n<dd>0x04: 60 minutes</dd></dl>\n<dl><dt>For Team Melee, Team Free For All, and Team Capture the Flag:</dt>\n<dd>0x01: 2 teams</dd>\n<dd>0x02: 3 teams</dd>\n<dd>0x03: 4 teams</dd></dl>\n<dl><dt>For Top vs. Bottom:</dt>\n<dd>0x01: 1 v 7</dd>\n<dd>0x02: 2 v 6</dd>\n<dd>0x03: 3 v 5</dd>\n<dd>0x04: 4 v 4</dd>\n<dd>0x05: 5 v 3</dd>\n<dd>0x06: 6 v 2</dd>\n<dd>0x07: 7 v 1</dd></dl>\n<dl><dt>For Ladder:</dt>\n<dd>0x00: Disconnects do not count as loss</dd>\n<dd>0x01: Disconnects count as loss</dd></dl>\n<dl><dt>For Other Game Types:</dt>\n<dd>0x01: No sub-game type</dd></dl>\nDRTL/DSHR Game Type Field:<br />\n<dl><dt>Game Type is used to specify a \'level range\'. This ensures that clients receive a list of games containing players whose experience is similar to their own.</dt>\n<dd>0x00: Level 1</dd>\n<dd>0x01: Level 2 or 3</dd>\n<dd>0x02: Level 4 or 5</dd>\n<dd>0x03: Level 6 or 7</dd>\n<dd>0x04: Level 8 or 9</dd>\n<dd>0x05: Level 10 - 12</dd>\n<dd>0x06: Level 13 - 16</dd>\n<dd>0x07: Level 17 - 19</dd>\n<dd>0x08: Level 20 - 24</dd>\n<dd>0x09: Level 25 - 29</dd>\n<dd>0x0A: Level 30 - 34</dd>\n<dd>0x0B: Level 35 - 39</dd>\n<dd>0x0C: Level 40 - 47</dd>\n<dd>0x0D: Level 48 - 50</dd></dl>\n<br />\nNote that fields from Address Family to sin_zero form a sockaddr_in structure.<br />\n<br />\nValid status codes:<br />\n<dl><dt>This field is the \'Game Status\' for non-WarCraft III and the \'Status\' when no games are listed for both WarCraft III and other clients.</dt>\n<dd>0x00: OK</dd>\n<dd>0x01: Game doesn\'t exist</dd>\n<dd>0x02: Incorrect password</dd>\n<dd>0x03: Game full</dd>\n<dd>0x04: Game already started</dd>\n<dd>0x06: Too many server requests</dd></dl>',
                   'source': 'S',
                   'type': 'SID'},
               10: {'args': [['STRING', 'Unique name'],
                             ['STRING', 'Statstring'],
                             ['STRING', 'Account name']],
                    'id': 10,
                    'name': 'ENTERCHAT',
                    'remark': '\nContains Client product, realm, statstring, and is sent as the response when the client sends SID_ENTERCHAT. Unique\nname is the users unique name in chat (Which may be Arta, Arta#2, Arta#3, etc). Account name is the users account name\n(Which in all 3 previous examples would be Arta).\n\n Once you receive this packet, you are not in a channel, but can join/host games and join channels. Because you are not\nin a channel, you cannot send text messages yet (but you will not be disconnected if you do). See SID_JOINCHANNEL.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               11: {'args': [['STRING[]',
                              'Channel names, each terminated by a null string']],
                    'id': 11,
                    'name': 'GETCHANNELLIST',
                    'remark': '\nContains a list of available channels.\n\n For some reason, Diablo II adds extra data to the channel list (as can be seen in game), and older clients list\nblocked channels, such as Warez and Backstage.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               15: {'args': [['DWORD', 'Event ID'],
                             ['DWORD', "User's Flags"],
                             ['DWORD', 'Ping'],
                             ['DWORD', 'IP Address (Defunct)'],
                             ['DWORD', 'Account number (Defunct)'],
                             ['DWORD', 'Registration Authority (Defunct)'],
                             ['STRING', 'Username'],
                             ['STRING', 'Text ']],
                    'id': 15,
                    'name': 'CHATEVENT',
                    'remark': "\nContains all chat events.\n\n For STAR/SEXP/SSHR/JSTR, Text is UTF-8 encoded (WIDESTRING).\n\n * Text should be no longer than 255 characters. Game clients should only be able to send 224 characters.\n Event IDs: [0x01] EID_SHOWUSER: User in channel [0x02] EID_JOIN: User joined channel [0x03] EID_LEAVE: User left\nchannel [0x04] EID_WHISPER: Recieved whisper [0x05] EID_TALK: Chat text [0x06] EID_BROADCAST: Server broadcast [0x07]\nEID_CHANNEL: Channel information [0x09] EID_USERFLAGS: Flags update [0x0A] EID_WHISPERSENT: Sent whisper [0x0D]\nEID_CHANNELFULL: Channel full [0x0E] EID_CHANNELDOESNOTEXIST: Channel doesn't exist [0x0F] EID_CHANNELRESTRICTED:\nChannel is restricted [0x12] EID_INFO: Information [0x13] EID_ERROR: Error message [0x15] EID_IGNORE: Notifies that a\nuser has been ignored (DEFUNCT) [0x16] EID_ACCEPT: Notifies that a user has been unignored (DEFUNCT) [0x17] EID_EMOTE:\nEmote EID_SHOWUSER: This is sent for each user who is already in a channel when you join it, as opposed to EID_JOIN,\nwhich is sent when a user joins a channel you have already joined. It is also sent when logged on using D2XP/D2DV and a\nuser requires an update to their statstring - for example, by logging a different character onto a realm. EID_JOIN: This\nis sent when a user enters the channel you are currently in. EID_LEAVE: This is sent when a user exits the channel you\nare currently in. EID_WHISPER: This is sent when a user whispers you. EID_TALK: This is sent when a user (excluding\nself) in chat speaks. EID_BROADCAST: The username supplied for this event is now always 'Battle.net'. Historically,\nusername contained the name of the Battle.net Administrator who sent the broadcast. EID_CHANNEL: The flags field for\nthis event is used and indicates what special conditions exist for the channel in question. See [Battle.net Flags] for\nmore information. EID_USERFLAGS: This is sent to inform the client of an update to one or more user's flags. Battle.net\nusually sends this event for every user in the channel, even if only one user's flags have changed. This behavior can be\nexploited to detect invisible users, by performing an action (such as an unsquelch) to provoke a flags update. Users\nincluded in the flags update whose presence has not been indicated by EID_JOIN or EID_SHOWUSER can then be added to the\nuserlist as invisible. Care should be taken, however, to account for the possibility that an asynchronous send error has\noccurred. Should an EID_JOIN or EID_SHOWUSER event occur for an invisible user, they should be marked as a normal user,\nnot readded to the userlist. EID_WHISPERSENT: The Flags and Ping fields in this packet is equal to the originating user\n- the one who sent the whisper. In other words, EID_WHISPERSENT contains your flags & ping, not those of the person you\nwhispered. EID_CHANNELDOESNOTEXIST: See info on NoCreate Join in SID_JOINCHANNEL. EID_CHANNELRESTRICTED: This is sent\nwhen attempting to join a channel which your client is not allowed to join. EID_INFO: This is information supplied by\nBattle.net. This text is usually displayed by clients in yellow. EID_Error: This is error information supplied by\nBattle.net. This text is usually displayed by clients in red. EID_Emote: This is sent when any user (including self)\nuses the emote feature in chat.\n\n",
                    'source': 'S',
                    'type': 'SID'},
               19: {'args': [],
                    'id': 19,
                    'name': 'FLOODDETECTED',
                    'remark': 'Sent prior to a disconnect along with SID_MESSAGEBOX to indicate that the client has flooded off.',
                    'source': 'S',
                    'type': 'SID'},
               21: {'args': [['DWORD', 'Ad ID'],
                             ['DWORD', 'File extension'],
                             ['FILETIME', 'Local file time'],
                             ['STRING', 'Filename'],
                             ['STRING', 'Link URL']],
                    'id': 21,
                    'name': 'CHECKAD',
                    'remark': 'Contains information needed to download and display an ad banner.',
                    'source': 'S',
                    'type': 'SID'},
               23: {'args': [['DWORD', 'Style'],
                             ['STRING', 'Text'],
                             ['STRING', 'Caption']],
                    'id': 23,
                    'name': 'READMEMORY',
                    'remark': "\nDisplays a message to the user. This message's fields are used as parameters for the Win32 API MessageBox [5], and can\nbe passed directly to it. For more information about these parameters, see the documentation for MessageBox [6] at MSDN.\n\n",
                    'source': 'S',
                    'type': 'SID'},
               24: {'args': [['DWORD', 'Cookie'],
                             ['DWORD', 'HKEY'],
                             ['STRING', 'Registry path'],
                             ['STRING', 'Registry key']],
                    'id': 24,
                    'name': 'REGISTRY',
                    'remark': 'HKEY is the registry key root.The values are standard:\n0x80000000: HKEY_CLASSES_ROOT\n0x80000001: HKEY_CURRENT_USER\n0x80000002: HKEY_LOCAL_MACHINE\n0x80000003: HKEY_USERS\n0x80000004: HKEY_PERFORMANCE_DATA\n0x80000005: HKEY_CURRENT_CONFIG\n0x80000006: HKEY_DYN_DATA',
                    'source': 'S',
                    'type': 'SID'},
               25: {'args': [['DWORD', 'Style'],
                             ['STRING', 'Text'],
                             ['STRING', 'Caption']],
                    'id': 25,
                    'name': 'MESSAGEBOX',
                    'remark': "Displays a message to the user. This message's fields are used as parameters for the Win32 API MessageBox, and can be passed directly to it. For more information about these parameters, see the documentation for MessageBox at MSDN.",
                    'source': 'S',
                    'type': 'SID'},
               28: {'args': [['DWORD', 'Status']],
                    'id': 28,
                    'name': 'STARTADVEX3',
                    'remark': 'Possible values for Status:\n0x00: Ok\n0x01: Failed',
                    'source': 'S',
                    'type': 'SID'},
               29: {'args': [],
                    'id': 29,
                    'name': 'LOGONCHALLENGEEX',
                    'remark': "\nNotifies Battle.net that you have left a game. \n\n Please note: This message's official name is not known, and has been invented.\n\n",
                    'source': 'S',
                    'type': 'SID'},
               32: {'args': [['DWORD', 'Product ID '],
                             ['DWORD', 'Product version'],
                             ['STRING', 'Game Name'],
                             ['STRING', 'Game Password']],
                    'id': 32,
                    'name': 'ANNOUNCEMENT',
                    'remark': '\nNotifies Battle.net that the client has joined a game. This is what causes you to receive "Your friend _ entered a _\ngame called _." from Battle.net if you are mutual friends with this client.\n\n SID_LEAVECHAT (0x10) does not need to be sent after this, since this does what LEAVECHAT does but with an added\nnotification.\n\n * This can be any valid Product ID, even if you are not connected with that ID.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               35: {'args': [['DWORD', 'Number of accounts'],
                             ['DWORD', 'Number of keys'],
                             ['STRING[]', 'Accounts to update'],
                             ['STRING[]', 'Keys to update'],
                             ['STRING[]', 'New values']],
                    'id': 35,
                    'name': 'WRITECOOKIE',
                    'remark': "\nUpdates the Client's profile.\n Currently, the allowed keys for this are Sex, Location, and Description. The maximum length for the values is 512,\nincluding the null terminator.\n\n See SID_READUSERDATA for more information.\n\n",
                    'source': 'S',
                    'type': 'SID'},
               36: {'args': [['DWORD', 'Echoed back, Request ID?'],
                             ['DWORD', 'Echoed back, Timestamp?'],
                             ['STRING', 'Registry key name']],
                    'id': 36,
                    'name': 'READCOOKIE',
                    'remark': "Much like a website cookie, simply stores some arbitrary string to a 'cookie jar' to save preferences et al. which can be retrieved later by the server.\n\nNot used because it was quickly discovered that storing preferences produces less problems and were faster by storing them server-side, associating them with the account. It is somewhat curious that these packet IDs are close to SID_PROFILE/SID_WRITEPROFILE (0x26 & 0x27).\n\nFound at: battle!190216FBh and battle!1901D660h, respectively.",
                    'source': 'S',
                    'type': 'SID'},
               37: {'args': [['DWORD', 'Ping Value']],
                    'id': 37,
                    'name': 'PING',
                    'remark': "Used to calculate Client's ping. The received DWORD should be sent directly back to Battle.net.\n\nThe ping displayed when in chat can be artificially inflated by delaying before sending this packet, or deflated by responding before requested.\nPing can be set to -1 (Strictly speaking, 0xFFFFFFFF, since ping is unsigned) by not responding to this packet at all.\n\nThe received DWORD is not what determines your ping, but it is actually a cookie for the Battle.net server. You should never change the DWORD.",
                    'source': 'S',
                    'type': 'SID'},
               38: {'args': [['DWORD', 'Number of accounts'],
                             ['DWORD', 'Number of keys'],
                             ['DWORD', 'Request ID'],
                             ['STRING[]', ' Requested Key Values']],
                    'id': 38,
                    'name': 'READUSERDATA',
                    'remark': "Contains profile information as requested by the client.\n\nIf you plan to graphically display this data, note that the fields may contain characters that are otherwise not alphanumeric, such as tab or enter keys. In addition, some bots allow the user to put new lines into fields that the official clients only allow one line for, such as a profile's Location.",
                    'source': 'S',
                    'type': 'SID'},
               40: {'args': [['DWORD', 'Result']],
                    'id': 40,
                    'name': 'LOGONCHALLENGE',
                    'remark': '\nResults:\n 0x00: Fail 0x01: Success Reports success/fail on account creation.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               41: {'args': [['DWORD', 'Result']],
                    'id': 41,
                    'name': 'LOGONRESPONSE',
                    'remark': 'Reports success/fail on password authentication.\nResult:\n0x00: Invalid password\n0x01: Success',
                    'source': 'S',
                    'type': 'SID'},
               42: {'args': [['DWORD', 'Result']],
                    'id': 42,
                    'name': 'CREATEACCOUNT',
                    'remark': 'Results:\n0x00: Fail\n0x01: Success\nReports success/fail on account creation.',
                    'source': 'S',
                    'type': 'SID'},
               45: {'args': [['FILETIME', 'Filetime'],
                             ['STRING', 'Filename']],
                    'id': 45,
                    'name': 'GETICONDATA',
                    'remark': 'Returns filename and filetime of default icons file.',
                    'source': 'S',
                    'type': 'SID'},
               46: {'args': [['DWORD', 'Ladder type'],
                             ['DWORD', 'League'],
                             ['DWORD', 'Sort method'],
                             ['DWORD', 'Starting rank'],
                             ['DWORD',
                              'Number of ranks listed (Count of items in list)'],
                             ['DWORD', 'Wins'],
                             ['DWORD', 'Losses'],
                             ['DWORD', 'Disconnects'],
                             ['DWORD', 'Rating'],
                             ['DWORD', 'Rank'],
                             ['DWORD', 'Official wins'],
                             ['DWORD', 'Official losses'],
                             ['DWORD', 'Official disconnects'],
                             ['DWORD', 'Official rating'],
                             ['DWORD', 'Unknown'],
                             ['DWORD', 'Official rank'],
                             ['DWORD', 'Unknown'],
                             ['DWORD', 'Unknown'],
                             ['DWORD', 'Highest rating'],
                             ['DWORD', 'Unknown'],
                             ['DWORD', 'Season'],
                             ['FILETIME', 'Last game time'],
                             ['FILETIME', 'Official last game time'],
                             ['STRING', 'Name']],
                    'id': 46,
                    'name': 'GETLADDERDATA',
                    'remark': 'Contains the requested ladder data. \n\nThe unknowns are possibly iron man ranking/rating/high rank/high rating, needs further investigation.',
                    'source': 'S',
                    'type': 'SID'},
               47: {'args': [['DWORD',
                              'Rank. Zero-based. 0xFFFFFFFF == Not ranked.']],
                    'id': 47,
                    'name': 'FINDLADDERUSER',
                    'remark': 'Contains the rank of the user specified by the request.',
                    'source': 'S',
                    'type': 'SID'},
               48: {'args': [['DWORD', 'Result'], ['STRING', 'Key owner']],
                    'id': 48,
                    'name': 'CDKEY',
                    'remark': "This packet is identical to SID_CDKEY (0x30)\n\nPossible values for Result:\n0x01: Ok\n0x02: Invalid key\n0x03: Bad product\n0x04: Banned\n0x05: In use\n\nIn addition, the Key Owner field has two special values:\n'TOO MANY SPAWNS': Exceeded spawn limit for this CD-Key\n'NO SPAWNING': Spawns are not supported for this CD-Key",
                    'source': 'S',
                    'type': 'SID'},
               49: {'args': [['DWORD', 'Result']],
                    'id': 49,
                    'name': 'CHANGEPASSWORD',
                    'remark': 'Reports whether the password was changed or not. This is used for the old logon system.\n\n\n0x00: Success\n0x01: Failure\n',
                    'source': 'S',
                    'type': 'SID'},
               50: {'args': [['DWORD', 'Status']],
                    'id': 50,
                    'name': 'CHECKDATAFILE',
                    'remark': 'This message is no longer used; developers should use the SID_CHECKDATAFILE2 message.\nStatus:\n0x00: Rejected\n0x01: Approved\n0x02: Ladder approved',
                    'source': 'S',
                    'type': 'SID'},
               51: {'args': [['DWORD', 'Request ID'],
                             ['DWORD', 'Unknown'],
                             ['FILETIME', 'Last update time'],
                             ['STRING', 'Filename']],
                    'id': 51,
                    'name': 'GETFILETIME',
                    'remark': 'Contains the latest filetime for the requested file. If the file does not exist, the returned filetime is null.',
                    'source': 'S',
                    'type': 'SID'},
               52: {'args': [['DWORD', 'Unknown'],
                             ['DWORD', 'Count'],
                             ['DWORD',
                              'Unknown (STRING) Realm title (STRING) Realm description']],
                    'id': 52,
                    'name': 'QUERYREALMS',
                    'remark': '\nRealm list.\n\n The first Unknown is usually 0. The second [and subsequent] Unknown is usually 1.\n\n This packet is no longer used. SID_QUERYREALMS2 is used instead.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               53: {'args': [['DWORD', 'Result'], ['STRING', 'Reason']],
                    'id': 53,
                    'name': 'PROFILE',
                    'remark': '\nStatus: 0x00: Success 0x01: Account Does Not Exist 0x02: Invalid Password 0x06: Account Closed \n The string containing the reason is only present when your account is closed. If not, the entire field is omitted\nincluding the null-terminator.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               54: {'args': [['DWORD', 'Result'], ['STRING', 'Key owner']],
                    'id': 54,
                    'name': 'CDKEY2',
                    'remark': "This packet is identical to SID_CDKEY (0x30)\n\nPossible values for Result:\n0x01: OK\n0x02: Invalid key\n0x03: Bad product\n0x04: Banned\n0x05: In use\n\nIn addition, the Key Owner field has two special values:\n'TOO MANY SPAWNS': Exceeded spawn limit for this CD-Key\n'NO SPAWNING': Spawns are not supported for this CD-Key",
                    'source': 'S',
                    'type': 'SID'},
               58: {'args': [['DWORD', 'Result'], ['STRING', 'Reason']],
                    'id': 58,
                    'name': 'LOGONRESPONSE2',
                    'remark': 'Status:\n0x00: Success\n0x01: Account Does Not Exist\n0x02: Invalid Password\n0x06: Account Closed\n\nThe string containing the reason is only present when your account is closed. If not, the entire field is omitted including the null-terminator.',
                    'source': 'S',
                    'type': 'SID'},
               60: {'args': [['DWORD', 'Status'],
                             ['STRING', 'Account name suggestion']],
                    'id': 60,
                    'name': 'CHECKDATAFILE2',
                    'remark': '\nAccount creation result.\n Result: 0x00: Account created 0x01: Name is too short 0x02: Name contained invalid characters 0x03: Name contained a\nbanned word 0x04: Account already exists 0x05: Account is still being created 0x06: Name did not contain enough\nalphanumeric characters 0x07: Name contained adjacent punctuation characters 0x08: Name contained too many punctuation\ncharacters\n\n',
                    'source': 'S',
                    'type': 'SID'},
               61: {'args': [['DWORD', 'Status'],
                             ['STRING', 'Account name suggestion']],
                    'id': 61,
                    'name': 'CREATEACCOUNT2',
                    'remark': 'Account creation result.\nResult:\n0x00: Account created\n0x01: Name is too short\n0x02: Name contained invalid characters\n0x03: Name contained a banned word\n0x04: Account already exists\n0x05: Account is still being created\n0x06: Name did not contain enough alphanumeric characters\n0x07: Name contained adjacent punctuation characters\n0x08: Name contained too many punctuation characters',
                    'source': 'S',
                    'type': 'SID'},
               62: {'args': [['DWORD', 'MCP Cookie'],
                             ['DWORD', 'MCP Status'],
                             ['DWORD', '[2] MCP Chunk 1'],
                             ['DWORD', 'IP'],
                             ['DWORD', 'Port'],
                             ['DWORD', '[12] MCP Chunk 2'],
                             ['STRING', 'Battle.net unique name']],
                    'id': 62,
                    'name': 'LOGONREALMEX',
                    'remark': '\nThis packet supplies the data necessary to connect to an MCP server. The cookie value is defined in the first DWORD of\nSID_LOGONREALMEX and is simply returned by Battle.net. If the length of the message (not including header) is greater\nthan 8, the client should continue to logon to the MCP. Otherwise, the Status field is interpreted as an error code:\n\n 0x80000001: Realm is unavailable\n 0x80000002: Realm logon failed\n\n Any other value indicates failure.\n\n The first part of the MCP Chunk that must be sent to the MCP server includes the Status and Cookie DWORDS, making MCP\nChunk 1 the first 4 DWORDS of the packet.\n\n There used to be a WORD at the end of this packet, which was apparently random.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               63: {'args': [['DWORD', 'Unknown'],
                             ['DWORD', 'Count'],
                             ['DWORD',
                              'Unknown (STRING) Realm title (STRING) Realm description']],
                    'id': 63,
                    'name': 'STARTVERSIONING2',
                    'remark': '\nRealm list.\n\n The first Unknown is usually 0. The second [and subsequent] Unknown is usually 1.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               64: {'args': [['DWORD', 'Unknown'],
                             ['DWORD', 'Count'],
                             ['DWORD', 'Unknown'],
                             ['STRING', 'Realm title'],
                             ['STRING', 'Realm description']],
                    'id': 64,
                    'name': 'QUERYREALMS2',
                    'remark': 'Realm list.\n\nThe first Unknown is usually 0. The second [and subsequent] Unknown is usually 1.',
                    'source': 'S',
                    'type': 'SID'},
               65: {'args': [['BYTE', 'Number of entries'],
                             ['DWORD', 'Last logon timestamp'],
                             ['DWORD', 'Oldest news timestamp'],
                             ['DWORD', 'Newest news timestamp'],
                             ['DWORD', 'Timestamp (STRING) News']],
                    'id': 65,
                    'name': 'QUERYADURL',
                    'remark': "\nThis packet contains news from battle.net. Timestamps are in C/Unix format, biased for UTC.\n\n Multiple separate news messages can be received. These should be treated the same as if one message was sent with\nseveral news entries.\n\n If the 'Timestamp' field for an entry is zero, then that entry is the message of the day (and not a news entry in the\nnormal respect).\n\n",
                    'source': 'S',
                    'type': 'SID'},
               67: {'args': [['DWORD', 'Unknown (0)']],
                    'id': 67,
                    'name': 'WARCRAFTUNKNOWN',
                    'remark': "Unknown. I am unable to disassemble Warcraft III's game.dll without a lot of trouble, and therefore I have limited knowledge of it. It has been seen once, after SID_LOGONPROOF (0x54) in the NLS logon sequence.\n\nFound at: game.dll",
                    'source': 'S',
                    'type': 'SID'},
               68: {'args': [['BYTE', 'Subcommand ID'],
                             ['DWORD', 'Cookie'],
                             ['DWORD', 'Status\n'],
                             ['DWORD', 'Cookie'],
                             ['BYTE', 'Number of responses'],
                             ['DWORD', 'ID'],
                             ['DWORD', 'Checksum'],
                             ['WORD', 'Decompressed Length'],
                             ['WORD', 'Compressed Length'],
                             ['VOID', 'Compressed Data'],
                             ['BYTE', 'Remaining Packets'],
                             ['DWORD', 'Cookie from WID_GAMESEARCH'],
                             ['DWORD', 'Cookie'],
                             ['DWORD',
                              'Icon ID (based on identifier; for example, "Orc Peon" is \'W3O1\')'],
                             ['BYTE',
                              'Number of ladder records to read; this will be between 0 and 3.'],
                             ['DWORD',
                              "Ladder type; valid types are 'SOLO', 'TEAM', or 'FFA ' (where the last character of 'FFA ' is a space, 0x20)."],
                             ['WORD', 'Number of wins'],
                             ['WORD', 'Number of losses'],
                             ['BYTE', 'Level'],
                             ['BYTE', 'Unknown*'],
                             ['WORD', 'Experience'],
                             ['DWORD', 'Rank (will be 0 if unranked)'],
                             ['BYTE',
                              'Number of race records to read; this will be 5 for WAR3 and 6 for W3XP.'],
                             ['WORD', 'Wins'],
                             ['WORD', 'Losses'],
                             ['BYTE', 'Number of team records to read.'],
                             ['DWORD',
                              "Type of team; valid types are '2VS2', '3VS3', and '4VS4'."],
                             ['WORD', 'Number of wins'],
                             ['WORD', 'Number of losses'],
                             ['BYTE', 'Level'],
                             ['BYTE', 'Unknown*'],
                             ['WORD', 'Experience'],
                             ['DWORD', 'Rank (will be 0 if unranked)'],
                             ['FILETIME', 'Time of last game played'],
                             ['BYTE', 'Number of partners'],
                             ['STRING[]', ' Names of partners'],
                             ['DWORD', 'Cookie'],
                             ['FILETIME', 'Last Status Update Time'],
                             ['WORD', 'Unknown'],
                             ['WORD', 'Unknown'],
                             ['BYTE', 'Wins'],
                             ['BYTE', 'Losses'],
                             ['BYTE', 'Draws'],
                             ['BYTE', 'Unknown'],
                             ['BYTE', 'Unknown'],
                             ['BYTE', 'Unknown'],
                             ['BYTE', 'Unknown'],
                             ['DWORD', 'Cookie'],
                             ['BYTE',
                              'Number of ladder records to read; this will be between 0 and 4.'],
                             ['DWORD',
                              "Ladder type; valid types are 'CLNS' (solo), 'CLN2' (2v2), 'CLN3' (3v3), or 'CLN4' (4v4)."],
                             ['DWORD', 'Number of wins'],
                             ['DWORD', 'Number of losses'],
                             ['BYTE', 'Level'],
                             ['BYTE', 'Unknown*'],
                             ['DWORD', 'Experience'],
                             ['DWORD', 'Rank (will be 0 if unranked)'],
                             ['BYTE',
                              'Number of race records to read; this will be 5 for WAR3 and 6 for W3XP.'],
                             ['DWORD', 'Wins'],
                             ['DWORD', 'Losses'],
                             ['DWORD', 'Cookie'],
                             ['DWORD', 'Selected Icon'],
                             ['BYTE', 'Tiers'],
                             ['BYTE', 'Count'],
                             ['DWORD', 'Icon'],
                             ['DWORD', 'Unit ID**'],
                             ['BYTE', 'Race'],
                             ['WORD', 'Wins required'],
                             ['BYTE', 'Enabled']],
                    'id': 68,
                    'name': 'WARCRAFTGENERAL',
                    'remark': 'This message is still being researched!\n\nThis message is used for multiple purposes on Warcraft III. Known and validated purposes are listed here.\n\n* The field was formerly labeled as "Hours until XP decay", but as no evidence to support this claim has ever been verified (and through personal testing has been found to be altogether false), it has been renamed as unknown for the time being. More information on this value would be appreciated.\n\n** This is the name of the unit for which this icon should be displayed for. The names can be found in the war3.mpq/Units/UnitData.slk.',
                    'source': 'S',
                    'type': 'SID'},
               70: {'args': [['BYTE', 'Number of entries'],
                             ['DWORD', 'Last logon timestamp'],
                             ['DWORD', 'Oldest news timestamp'],
                             ['DWORD', 'Newest news timestamp'],
                             ['DWORD', 'Timestamp'],
                             ['STRING', 'News']],
                    'id': 70,
                    'name': 'NEWS',
                    'remark': "This packet contains news from battle.net. Timestamps are in C/Unix format, biased for UTC.\n\nMultiple separate news messages can be received. These should be treated the same as if one message was sent with several news entries.\n\nIf the 'Timestamp' field for an entry is zero, then that entry is the message of the day (and not a news entry in the normal respect).",
                    'source': 'S',
                    'type': 'SID'},
               74: {'args': [['STRING', 'MPQ Filename']],
                    'id': 74,
                    'name': 'OPTIONALWORK',
                    'remark': '\nUsing SID_GETFILETIME with request ID 0x80000005, the client should download this file and call the ExtraWork function\ninside of it. Generally, this message is used for the optional ExtraWork DLL.\n\n The client will only execute this entirely if the registry key HKCUSoftwareBattle.netOptimizeSysDesc [REG_DWORD] is\nset to 1.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               76: {'args': [['STRING', 'ExtraWork MPQ FileName']],
                    'id': 76,
                    'name': 'REQUIREDWORK',
                    'remark': '\nUsing SID_GETFILETIME with request ID 0x80000006, the client should download the specified MPQ file, extract\nExtraWork.dll and call the ExtraWork function inside of it.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               78: {'args': [['DWORD', 'Logon Type'],
                             ['DWORD', 'Server Token'],
                             ['DWORD', 'UDPValue '],
                             ['FILETIME', 'MPQ filetime'],
                             ['STRING', 'IX86ver filename'],
                             ['STRING', 'ValueString'],
                             ['VOID', '128-byte Server signature']],
                    'id': 78,
                    'name': 'TOURNAMENT',
                    'remark': '\nContains the Server Token, and the values used in CheckRevision.\n\n Possible Logon Type values: 0x00: Broken SHA-1 (STAR/SEXP/D2DV/D2XP) 0x01: NLS version 1 (War3Beta) 0x02: NLS Version\n2 (WAR3/W3XP) * UDPValue\n No one really knows what this is, however, it is used in 2nd DWORD of the UDP packet PKT_CONNTEST2. It is also the\nsecond part of MCP Chunk 1 in MCP_STARTUP.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               80: {'args': [['DWORD', 'Logon Type'],
                             ['DWORD', 'Server Token'],
                             ['DWORD', 'UDPValue *'],
                             ['FILETIME', 'MPQ filetime'],
                             ['STRING', 'IX86ver filename'],
                             ['STRING', 'ValueString'],
                             ['VOID', '128-byte Server signature']],
                    'id': 80,
                    'name': 'AUTH',
                    'remark': 'Contains the Server Token, and the values used in CheckRevision.\n\nPossible Logon Type values:\n0x00: Broken SHA-1 (STAR/SEXP/D2DV/D2XP)\n0x01: NLS version 1 (War3Beta)\n0x02: NLS Version 2 (WAR3/W3XP)\n* UDPValue\nNo one really knows what this is, however, it is used in 2nd DWORD of the UDP packet PKT_CONNTEST2. It is also the second part of MCP Chunk 1 in MCP_STARTUP.',
                    'source': 'S',
                    'type': 'SID'},
               81: {'args': [['DWORD', 'Result'],
                             ['STRING', 'Additional Information']],
                    'id': 81,
                    'name': 'AUTH',
                    'remark': "\nReports success/failure on version & CD Key check.\n\n Result:\n 0x000: Passed challenge\n 0x100: Old game version (Additional info field supplies patch MPQ filename)\n 0x101: Invalid version\n 0x102: Game version must be downgraded \n (Additional info field supplies patch MPQ filename)\n 0x0NN: (where NN is the version code supplied in SID_AUTH_INFO): Invalid version code (note that 0x100 is not set in\nthis case).\n 0x200: Invalid CD key *\n 0x201: CD key in use (Additional info field supplies name of user)\n 0x202: Banned key\n 0x203: Wrong product\n The last 4 codes also apply to the second CDKey, as indicated by a bitwise combination with 0x010.\n\n If a patch file cannot be found, additional info is set to 'non-existent'. If either the executable size/date or the\nversion code is wrong, the server will typically return a failure status.\n\n * If you receive this status, official Battle.net servers ban you for 24 hours (as of 06/15/2011). It used to be 2\nweeks, but they changed recently.\n\n More:\n While doing a little research on how Battle.net autoupdates it's clients, I found that it (STAR, anyway) does not use\nthe provisions of the SID_AUTH login system to tell clients which update file to download. Instead, it sends a\nSID_REPORTVERSION (from the previous logon system) containing the equivalent error code and the name of the patch file\nto download. This seems strange, and makes me think that the part of Battle.net responsible for updating clients is\nisolated from the part responsible for processing logon requests. If this is the case, it makes sense that that system\nwas never updated, since it must still support legacy clients. In addition, this would explain why most Blizzard clients\nretain obsolete packet processing code.\n\n",
                    'source': 'S',
                    'type': 'SID'},
               82: {'args': [['DWORD', 'Version? (0x010A0027)'],
                             ['DWORD', 'Exception code'],
                             ['DWORD', 'Unknown'],
                             ['DWORD', 'Unknown']],
                    'id': 82,
                    'name': 'AUTH',
                    'remark': '\nWhen the game crashes, (usually) a file named Crashdump is created. If this file exists at the next logon, the contents\nof it are sent to Battle.net in this message.\n\n The first DWORD for Diablo II is a constant value (version?), as seen in Fog.dll.\n\n All calls to Fog_10052 result in the output of Crashdump.\n\n More research is required.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               83: {'args': [['DWORD', 'Status'],
                             ['BYTE', '[32] Salt (s)'],
                             ['BYTE', '[32] Server Key (B)']],
                    'id': 83,
                    'name': 'AUTH',
                    'remark': "Reports the success or failure of the logon request.\n\nPossible status codes:0x00: Logon accepted, requires proof.\n0x01: Account doesn't exist.\n0x05: Account requires upgrade.\nOther: Unknown (failure).\n\nSee the [NLS/SRP Protocol] document for more information.",
                    'source': 'S',
                    'type': 'SID'},
               84: {'args': [['DWORD', 'Status'],
                             ['BYTE', '[20] Server Password Proof (M2)'],
                             ['STRING', 'Additional information']],
                    'id': 84,
                    'name': 'AUTH',
                    'remark': 'Statuses:\n0x00: Logon successful.\n0x02: Incorrect password.\n0x0E: An email address should be registered for this account.\n0x0F: Custom error. A string at the end of this message contains the error.\n\n\nThis message confirms the validity of the client password proof and supplies the server password proof. See [NLS/SRP Protocol] for more information.',
                    'source': 'S',
                    'type': 'SID'},
               85: {'args': [['DWORD', 'Status'],
                             ['BYTE', '[32] Salt (s)'],
                             ['BYTE', '[32] Server key (B)']],
                    'id': 85,
                    'name': 'AUTH',
                    'remark': "Reports success or failure on a password change operation.\n\nStatus Codes:0x00: Change accepted, requires proof.\n0x01: Account doesn't exist.\n0x05: Account requires upgrade - see SID_AUTH_ACCOUNTUPGRADE\nOther: Unknown (failure).\n\nIf an error occurs, the salt and server key values are set to zero.",
                    'source': 'S',
                    'type': 'SID'},
               86: {'args': [['DWORD', 'Status code'],
                             ['BYTE',
                              '[20] Server password proof for old password (M2)']],
                    'id': 86,
                    'name': 'AUTH',
                    'remark': 'This message reports success or failure for a password change operation.\n\nStatus codes:0x00: Password changed\n0x02: Incorrect old password',
                    'source': 'S',
                    'type': 'SID'},
               87: {'args': [['DWORD', 'Status'],
                             ['DWORD', 'Server Token']],
                    'id': 87,
                    'name': 'AUTH',
                    'remark': 'Status Codes:0x00: Upgrade request accepted.\nOther: Upgrade request denied.',
                    'source': 'S',
                    'type': 'SID'},
               88: {'args': [['DWORD', 'Status'],
                             ['DWORD', '[5] Password proof']],
                    'id': 88,
                    'name': 'AUTH',
                    'remark': 'Status codes:0x00: Password changed\n0x02: Incorrect old password',
                    'source': 'S',
                    'type': 'SID'},
               89: {'args': [],
                    'id': 89,
                    'name': 'SETEMAIL',
                    'remark': 'Requests the client to bind an email address to the account.\n\nSee SID_SETEMAIL for more information.',
                    'source': 'S',
                    'type': 'SID'},
               94: {'args': [],
                    'id': 94,
                    'name': 'WARDEN',
                    'remark': '\nRequests a friends list from Battle.net.\n\n Works for all clients, however D2DV/D2XP will not receive friend updates automatically. For those clients, you must\nrequest the list at your own intervals if you wish to know about any updates.\n\n',
                    'source': 'S',
                    'type': 'SID'},
               96: {'args': [['BYTE', 'Number of players'],
                             ['STRING[]', ' Player names']],
                    'id': 96,
                    'name': 'GAMEPLAYERSEARCH',
                    'remark': 'Returns a list of available players for an arranged team ladder game. Players who are considered available: have no away message on, are mutual friends in the chat environment, or non-friend listed users in the same channel as you.',
                    'source': 'S',
                    'type': 'SID'},
               101: {'args': [['BYTE', 'Number of Entries'],
                              ['STRING', 'Account'],
                              ['BYTE', 'Location'],
                              ['BYTE', 'Status'],
                              ['DWORD', 'ProductID'],
                              ['STRING', 'Location name']],
                     'id': 101,
                     'name': 'FRIENDSLIST',
                     'remark': 'This packet contains the current user\'s Friends List. If the friend is offline, their ProductID is 0. Location is only supplied when it is relevant - for example, if Status is set to offline (0x00), the location string will be empty.\n\nPossible bitwise values for Status:\n0x01: Mutual\n0x02: DND\n0x04: Away\nPossible values for Location:\n0x00: Offline\n0x01: Not in chat\n0x02: In chat\n0x03: In a public game\n0x04: In a private game, and you are not that person\'s friend.\n0x05: In a private game, and you are that person\'s friend.\n\nWhether you are a particular user\'s friend causes different behavior when receiving information about the type of game the user is in (this is true when receiving friend updates, too). When the Location field is 0x04, the user is in a password-protected game, and you are not on that user\'s friends list. When it is 0x05, the user is in a password-protected game, and you are on that user\'s friends list.\n\nFor example, let\'s say MyndFyre is logging on and Arta[vL] is on his friends list. Arta[vL] is also in a password-protected game. MyndFyre is not on Arta[vL]\'s friends list. MyndFyre will receive location 0x04 for Arta[vL] and the Channel parameter will be a NULL string. And, if MyndFyre were to type in /f l, Battle.net would respond with SID_CHATEVENT saying "1. Arta[vL] is in a private game."\n\nOn the other hand, if Arta[vL] had listed MyndFyre as a friend, then on logon, MyndFyre will receive location 0x05 for Arta[vL] and the name of the password-protected game will come through the Channel parameter of the message. If MyndFyre were to type in /f l, Battle.net would respond with "1. Arta[vL] is in the private game vL."',
                     'source': 'S',
                     'type': 'SID'},
               102: {'args': [['DWORD', 'Result']],
                     'id': 102,
                     'name': 'FRIENDSUPDATE',
                     'remark': '\nContains the return value from MCP Startup.\n  Known return values: 0x02, 0x0A-0x0D: Realm Unavailable: No Battle.net connection detected. 0x7E: CDKey banned from\nrealm play. 0x7F: Temporary IP ban "Your connection has been temporarily restricted from this realm. Please try to log\nin at another time." Else: Success. \n\n',
                     'source': 'S',
                     'type': 'SID'},
               103: {'args': [['STRING', 'Account'],
                              ['BYTE', 'Status'],
                              ['BYTE', 'Location'],
                              ['DWORD', 'ProductID'],
                              ['STRING', 'Location']],
                     'id': 103,
                     'name': 'FRIENDSADD',
                     'remark': "Sent to clients supporting this packet when an account is added to the client's friendlist. New friends are appended to the list.\n\nBitwise-values and meanings for Status:\n\n0x01: Mutual\n0x02: DND\n0x04: Away\n\nValue and meanings for Location:\n\n0x00: Offline\n0x01: Not in chat\n0x02: In chat\n0x03: In public game\n0x04: In private game, not on your friends list\n0x05: In private game, is on your friends list\n\nSee SID_FRIENDSLIST for more information.",
                     'source': 'S',
                     'type': 'SID'},
               104: {'args': [['BYTE', 'Entry Number']],
                     'id': 104,
                     'name': 'FRIENDSREMOVE',
                     'remark': "Sent to clients supporting this packet when an entry is removed from the client's friendlist. Accounts positioned after the specified Entry Number in the friendlist are moved up by one.\n\nSee SID_FRIENDSLIST for more information.",
                     'source': 'S',
                     'type': 'SID'},
               105: {'args': [['BYTE', 'Old Position'],
                              ['BYTE', 'New Position']],
                     'id': 105,
                     'name': 'FRIENDSPOSITION',
                     'remark': "Sent to clients supporting this packet when a friend is promoted up or demoted down the friend's list.\n\nSee SID_FRIENDSLIST for more information.",
                     'source': 'S',
                     'type': 'SID'},
               112: {'args': [['DWORD', 'Cookie'],
                              ['BYTE', 'Status'],
                              ['BYTE', 'Number of potential candidates'],
                              ['STRING[]', ' Usernames']],
                     'id': 112,
                     'name': 'CLANFINDCANDIDATES',
                     'remark': 'Contains the list of potential candidates.\n\nValid Status codes:\n0x00: Successfully found candidate(s)\n0x01: Clan tag already taken\n0x08: Already in clan\n0x0A: Invalid clan tag specified',
                     'source': 'S',
                     'type': 'SID'},
               113: {'args': [['DWORD', 'Cookie'],
                              ['BYTE', 'Result'],
                              ['STRING[]', ' Failed account names']],
                     'id': 113,
                     'name': 'CLANINVITEMULTIPLE',
                     'remark': 'Multiple invitation response.\n\nResult:\n0x00: Success (everyone accepted)\n0x04: Declined\n0x05: Not available (not in channel or already in a clan)\n0x0B: Clan name contains bad word\nFailed account names:A list of accountnames which failed to accept the invitation successfully. On complete success, this is null.',
                     'source': 'S',
                     'type': 'SID'},
               114: {'args': [['DWORD', 'Cookie'],
                              ['DWORD', 'Clan Tag'],
                              ['STRING', 'Clan Name'],
                              ['STRING', "Inviter's username"],
                              ['BYTE', 'Number of users being invited'],
                              ['STRING[]', ' List of users being invited']],
                     'id': 114,
                     'name': 'CLANCREATIONINVITATION',
                     'remark': 'Received when a user is inviting you to create a new clan on Battle.net.',
                     'source': 'S',
                     'type': 'SID'},
               115: {'args': [['DWORD', 'Cookie'], ['BYTE', 'Result']],
                     'id': 115,
                     'name': 'CLANDISBAND',
                     'remark': 'Result:\n0x00: Successfully disbanded the clan\n0x02: Cannot quit clan, not one week old yet\n0x07: Not authorized to disband the clan\n',
                     'source': 'S',
                     'type': 'SID'},
               116: {'args': [['DWORD', 'Cookie'], ['BYTE', 'Status']],
                     'id': 116,
                     'name': 'CLANMAKECHIEFTAIN',
                     'remark': 'Notifies the sending client of the success/failure of its request.\nStatus:\n0x00: Success\n0x02: Cannot change until clan is a week old\n0x04: Declined\n0x05: Failed\n0x07: Not Authorized\n0x08: Not Allowed\n',
                     'source': 'S',
                     'type': 'SID'},
               117: {'args': [['BYTE', 'Unknown (0)'],
                              ['DWORD', 'Clan tag'],
                              ['BYTE', 'Rank']],
                     'id': 117,
                     'name': 'CLANINFO',
                     'remark': 'This message is received when logging on, if you are a member of a clan. It is also sent when you join a clan.\n\nPossible values for Rank:\n0x00: Initiate that has been in the clan for less than one week\n0x01: Initiate that has been in the clan for over one week\n0x02: Member\n0x03: Officer\n0x04: Leader',
                     'source': 'S',
                     'type': 'SID'},
               118: {'args': [['BYTE', 'Status']],
                     'id': 118,
                     'name': 'CLANQUITNOTIFY',
                     'remark': 'The only known status code for this packet is 0x01 (Removed from clan).',
                     'source': 'S',
                     'type': 'SID'},
               119: {'args': [['DWORD', 'Cookie'], ['BYTE', 'Result']],
                     'id': 119,
                     'name': 'CLANINVITATION',
                     'remark': 'This packet is sent to inform the client of the reply to an invitation.\n\nResult:\n0x00: Invitation accepted\n0x04: Invitation declined\n0x05: Failed to invite user\n0x09: Clan is full\n',
                     'source': 'S',
                     'type': 'SID'},
               120: {'args': [['DWORD', 'Cookie'], ['BYTE', 'Status']],
                     'id': 120,
                     'name': 'CLANREMOVEMEMBER',
                     'remark': 'Response when removing a member from your clan.\n\nStatus constants:\n0x00: Removed\n0x01: Removal failed\n0x02: Cannot be removed yet\n0x07: Not authorized to remove\n0x08: Not allowed to remove\n',
                     'source': 'S',
                     'type': 'SID'},
               121: {'args': [['DWORD', 'Cookie'],
                              ['DWORD', 'Clan tag'],
                              ['STRING', 'Clan name'],
                              ['STRING', 'Inviter']],
                     'id': 121,
                     'name': 'CLANINVITATIONRESPONSE',
                     'remark': 'This packet is received when someone invites you to join a clan.',
                     'source': 'S',
                     'type': 'SID'},
               122: {'args': [['DWORD', 'Cookie'], ['BYTE', 'Status']],
                     'id': 122,
                     'name': 'CLANRANKCHANGE',
                     'remark': "This message returns the result of the clan rank change request.\n\nResult:\n0x00: Successfully changed rank\n0x01: Failed to change rank\n0x02: Cannot change user's rank yet\n0x07: Not authorized to change user rank *\n0x08: Not allowed to change user rank **\n\n* This will be received when you are not a shaman/chieftain and you are trying to change the rank of another user.\n\n** This will be received when you are trying to change rank of someone who is your rank or higher such as a chieftain, or you are trying to change the rank of an initiate during their probation period.",
                     'source': 'S',
                     'type': 'SID'},
               124: {'args': [['DWORD', 'Cookie'],
                              ['DWORD', 'Unknown (0)'],
                              ['STRING', 'MOTD']],
                     'id': 124,
                     'name': 'CLANMOTD',
                     'remark': "This message contains the clan's Message of the Day.",
                     'source': 'S',
                     'type': 'SID'},
               125: {'args': [['DWORD', 'Cookie'],
                              ['BYTE', 'Number of Members'],
                              ['STRING', 'Username'],
                              ['BYTE', 'Rank'],
                              ['BYTE', 'Online Status'],
                              ['STRING', 'Location']],
                     'id': 125,
                     'name': 'CLANMEMBERLIST',
                     'remark': 'Contains the members of a clan.\n\nOnline Status:0x00: Offline\n0x01: Online\nRank:0x00: Initiate that has been in the clan for less than one week\n0x01: Initiate that has been in the clan for over one week\n0x02: Member\n0x03: Officer\n0x04: Leader\nLocation:Where the user is, i.e., game name, channel name, or this may be null if the user is not online.',
                     'source': 'S',
                     'type': 'SID'},
               126: {'args': [['STRING', 'Clan member name']],
                     'id': 126,
                     'name': 'CLANMEMBERREMOVED',
                     'remark': 'Notifies the members of a clan that a user has been removed.',
                     'source': 'S',
                     'type': 'SID'},
               127: {'args': [['STRING', 'Username'],
                              ['BYTE', 'Rank'],
                              ['BYTE', 'Status'],
                              ['STRING', 'Location']],
                     'id': 127,
                     'name': 'CLANMEMBERSTATUSCHANGE',
                     'remark': 'This message is received when a member changes their status (by going online, offline, being promoted, etc).\n\nUsername:The name of the member whose status is changing (by going online, offline, being promoted, etc).\nRank:\n0x00: Initiate\n0x01: Peon\n0x02: Member\n0x03: Officer\n0x04: Leader\nStatus:\n0x00: Offline\n0x01: Online (not in either channel or game)\n0x02: In a channel</dd>\n<dd>0x03: In a public game</dd>\n<dd>0x05: In a private game</dd></dl>\nLocation:<dl><dd>This field is where the user is, i.e., game name, channel name.</dd></dl>',
                     'source': 'S',
                     'type': 'SID'},
               129: {'args': [['BYTE', 'Old rank'],
                              ['BYTE', 'New rank'],
                              ['STRING', 'Clan member whose rank changed']],
                     'id': 129,
                     'name': 'CLANMEMBERRANKCHANGE',
                     'remark': 'Received from the server when a user is promoted or demoted.\n\nFor information about the allowed values for the old and new rank fields, see [Clan Message Codes].',
                     'source': 'S',
                     'type': 'SID'},
               130: {'args': [['DWORD', 'Cookie'],
                              ['BYTE', 'Status code'],
                              ['STRING', 'Clan name'],
                              ['BYTE', "User's rank"],
                              ['FILETIME', 'Date joined']],
                     'id': 130,
                     'name': 'CLANMEMBERINFORMATION',
                     'remark': 'Status code:\nThis message follows the same status codes as listed on the Clan Message Codes page.\n0x00 = success\n0x0C = user not found in that clan',
                     'source': 'S',
                     'type': 'SID'}},
       'W3GS': {1: {'args': [['DWORD', 'Checksum']],
                    'id': 1,
                    'name': 'PING',
                    'remark': '\nThis is sent to the server when receiving the status code in BNLS_AUTHORIZE (0x0E).\n\n For more info, see the [BNLS Checksum Algorithm] document.\n\n This message is no longer required. See BNLS_AUTHORIZE for more information.\n\n',
                    'source': 'S',
                    'type': 'W3GS'},
                4: {'args': [['WORD', 'Length of Slot Info'],
                             ['BYTE', 'Number of slots'],
                             ['BYTE[]', ' Slot data'],
                             ['DWORD', 'Random seed'],
                             ['BYTE', 'Game type'],
                             ['BYTE',
                              'Number of player slots without observers'],
                             ['BYTE', 'Player number'],
                             ['DWORD', 'Port'],
                             ['DWORD', 'External IP'],
                             ['DWORD', 'Unknown (0)'],
                             ['DWORD', 'Unknown (0)'],
                             ['BYTE', 'Player number'],
                             ['BYTE', 'Download status'],
                             ['BYTE', 'Slot status'],
                             ['BYTE', 'Computer status'],
                             ['BYTE', 'Team'],
                             ['BYTE', 'Color'],
                             ['BYTE', 'Race'],
                             ['BYTE', 'Computer type'],
                             ['BYTE', 'Handicap']],
                    'id': 4,
                    'name': 'SLOTINFOJOIN',
                    'remark': 'This is sent to tell the client about the game slots, upon entry of the lobby.\n\nDownload status is a percentage of their download progress. As such, this value can only be between 0 and 100.\n\nSlot statuses:\n0x00 Open\n0x01 Closed\n0x02 Occupied\n\n\nIf the slot is a computer, then Computer will be 0x01, otherwise it will be 0x00.\n\nAvailable races:\n0x01 Human\n0x02 Orc\n0x04 Night Elf\n<dd>0x08 Undead</dd>\n<dd>0x20 Random</dd>\n<dd>0x40 Fixed</dd>\n</dt>\n<br />\nComputer types:<dt><br />\n<dd>0x00 Easy</dd>\n<dd>0x01 Normal / Human</dd>\n<dd>0x02 Hard</dd>\n</dt>',
                    'source': 'S',
                    'type': 'W3GS'},
                5: {'args': [['DWORD', 'Reason']],
                    'id': 5,
                    'name': 'REJECTJOIN',
                    'remark': 'This is sent in a response to a request to join the game lobby and indicates that the request was denied.\n\nReasons:\n0x09 REJECTJOIN_FULL -- The game lobby is full\n0x07 REJECTJOIN_INVALID -- There was an error in your request\n0x10 REJECTJOIN_STARTED -- The game has already been started\n0x27 REJECTJOIN_WRONGPASSWORD -- The password you sent was incorrect\n',
                    'source': 'S',
                    'type': 'W3GS'},
                6: {'args': [['DWORD', 'Player Counter'],
                             ['BYTE', 'Player number'],
                             ['STRING', 'Player name'],
                             ['WORD', 'Unknown (1)'],
                             ['WORD', 'AF_INET (2)'],
                             ['WORD', 'Port'],
                             ['DWORD', 'External IP'],
                             ['DWORD', 'Unknown (0)'],
                             ['DWORD', 'Unknown (0)'],
                             ['WORD', 'AF_INET (2)'],
                             ['WORD', 'Port'],
                             ['DWORD', 'Internal IP'],
                             ['DWORD', 'Unknown (0)'],
                             ['DWORD', 'Unknown (0)']],
                    'id': 6,
                    'name': 'PLAYERINFO',
                    'remark': "Tells a client about a player's information.\n\nThe external and internal IP are always zero for the host.\n\nNOTE: This packet needs a better structure in the Format. Until then, you will have to deal with the unorganized fields.",
                    'source': 'S',
                    'type': 'W3GS'},
                7: {'args': [['BYTE', 'Player number'],
                             ['DWORD', 'Reason']],
                    'id': 7,
                    'name': 'PLAYERLEFT',
                    'remark': 'This is received from the game host when a player leaves.\n\nReasons:\n0x01 PLAYERLEAVE_DISCONNECT\n0x07 PLAYERLEAVE_LOST\n0x08 PLAYERLEAVE_LOSTBUILDINGS\n0x09 PLAYERLEAVE_WON\n0x0A PLAYERLEAVE_DRAW\n0x0B PLAYERLEAVE_OBSERVER\n0x0D PLAYERLEAVE_LOBBY\n',
                    'source': 'S',
                    'type': 'W3GS'},
                8: {'args': [['BYTE', 'Player number']],
                    'id': 8,
                    'name': 'PLAYERLOADED',
                    'remark': 'Sent to all other clients in-game to notify that a player has finished loading.',
                    'source': 'S',
                    'type': 'W3GS'},
                9: {'args': [['WORD', 'Length of Slot Info'],
                             ['BYTE', 'Player number'],
                             ['BYTE', 'Download status'],
                             ['BYTE', 'Slot status'],
                             ['BYTE', 'Computer status'],
                             ['BYTE', 'Team'],
                             ['BYTE', 'Color'],
                             ['BYTE', 'Race'],
                             ['BYTE', 'Computer type'],
                             ['BYTE', 'Handicap']],
                    'id': 9,
                    'name': 'SLOTINFO',
                    'remark': 'This is sent for slot updates.\n\nThe length of slot info should always be 0x0B.',
                    'source': 'S',
                    'type': 'W3GS'},
                10: {'args': [],
                     'id': 10,
                     'name': 'COUNTDOWN',
                     'remark': 'The game has begun the countdown to start.\n\nThe official clients countdown from 5 seconds, however it is possible to use any time you wish. For example, the GHost++ bot uses 10 seconds when auto-hosted, but 5 seconds when started using an administrative command.',
                     'source': 'S',
                     'type': 'W3GS'},
                11: {'args': [],
                     'id': 11,
                     'name': 'COUNTDOWN',
                     'remark': 'The game has finished the countdown and has now started. Players should see a loading screen for the map once this is received.\n\n0x10 W3GS_COUNTDOWN_START should be received before this packet is, even if there is no countdown.',
                     'source': 'S',
                     'type': 'W3GS'},
                12: {'args': [['WORD', 'Send interval'],
                              ['WORD', 'CRC-16 encryption'],
                              ['BYTE', 'Player number'],
                              ['WORD', 'Length of action data'],
                              ['VOID', 'Action data']],
                     'id': 12,
                     'name': 'INCOMING',
                     'remark': 'Informs the client about an action in-game.',
                     'source': 'S',
                     'type': 'W3GS'},
                15: {'args': [['BYTE', 'Player count'],
                              ['BYTE[]',
                               ' Player numbers that will receive the message'],
                              ['BYTE',
                               'Player number that sent the message'],
                              ['BYTE', 'Flags'],
                              ['DWORD', 'Extra Flags'],
                              ['STRING', 'Message']],
                     'id': 15,
                     'name': 'CHAT',
                     'remark': 'This is sent to the clients to print a message on the screen from another player.',
                     'source': 'S',
                     'type': 'W3GS'},
                27: {'args': [],
                     'id': 27,
                     'name': 'LEAVERS',
                     'remark': 'This is the response to 0x21 W3GS_LEAVEREQ.\n\nYou will leave the game once the connection is terminated.',
                     'source': 'S',
                     'type': 'W3GS'},
                47: {'args': [['DWORD', 'Product'],
                              ['DWORD', 'Version'],
                              ['DWORD', 'Unknown']],
                     'id': 47,
                     'name': 'SEARCHGAME',
                     'remark': "This is a reply to a client's request for games.",
                     'source': 'S',
                     'type': 'W3GS'},
                48: {'args': [['DWORD', 'Product'],
                              ['DWORD', 'Host Counter'],
                              ['DWORD', 'Players In Game'],
                              ['STRING', 'Game name'],
                              ['BYTE', 'Unknown (0)'],
                              ['STRING', 'Statstring'],
                              ['DWORD', 'Slots total'],
                              ['BYTE[]', ' Game Type Info'],
                              ['DWORD', 'Slots available'],
                              ['DWORD', 'Time since creation'],
                              ['WORD', 'Game Port']],
                     'id': 48,
                     'name': 'GAMEINFO',
                     'remark': 'This is sent every 5 seconds over a UDP broadcast to update the local area network about the game.\n\nThis is also sent when a client clicks on the game in a list.',
                     'source': 'S',
                     'type': 'W3GS'},
                49: {'args': [['DWORD', 'Product'],
                              ['DWORD', 'Host Counter'],
                              ['DWORD', 'Players In Game']],
                     'id': 49,
                     'name': 'CREATEGAME',
                     'remark': 'Notifies the local area network that a game was created.',
                     'source': 'S',
                     'type': 'W3GS'},
                50: {'args': [['DWORD', 'Host Counter'],
                              ['DWORD', 'Players In Game'],
                              ['DWORD', 'Slots available']],
                     'id': 50,
                     'name': 'REFRESHGAME',
                     'remark': 'Notifies the local area network about a game (occurs every 5 seconds or refresh slots).',
                     'source': 'S',
                     'type': 'W3GS'},
                51: {'args': [['DWORD', 'Host Counter']],
                     'id': 51,
                     'name': 'DECREATEGAME',
                     'remark': 'Notifies the local area network that a game is no longer being hosted.',
                     'source': 'S',
                     'type': 'W3GS'},
                61: {'args': [['DWORD', 'Unknown'],
                              ['STRING', 'File Path'],
                              ['DWORD', 'File size'],
                              ['DWORD', 'Map info'],
                              ['DWORD', 'File CRC encryption'],
                              ['DWORD', 'File SHA-1 hash']],
                     'id': 61,
                     'name': 'MAPCHECK',
                     'remark': 'This is sent from the game host to a client that just joined to check if the client has the map.\n\nThe map info is the actual CRC and the other CRC is actually an "xoro" value.',
                     'source': 'S',
                     'type': 'W3GS'},
                63: {'args': [['DWORD', 'Unknown'],
                              ['BYTE', 'Player number']],
                     'id': 63,
                     'name': 'STARTDOWNLOAD',
                     'remark': 'This tells the client that it is now in the downloading state and should expect chunks of file data.',
                     'source': 'S',
                     'type': 'W3GS'},
                67: {'args': [['BYTE', 'To player number'],
                              ['BYTE', 'From player number'],
                              ['DWORD', 'Unknown (0x01)'],
                              ['DWORD', 'Chunk position in file'],
                              ['DWORD', 'CRC-32 encryption'],
                              ['BYTE', '[1442] Data']],
                     'id': 67,
                     'name': 'MAPPART',
                     'remark': 'This is received when you are downloading a map from the host.\n\nYou can calculate how many more chunks you have left based on the file size and the chunk position in file. You are done downloading when the chunk position in file (plus the size of the chunk) matches the file size received in 0x42 W3GS_MAPSIZE.\n\nIf the data does not match the CRC-32, you should send the host 0x45 W3GS_MAPPARTNOTOK, otherwise you should always send 0x44 W3GS_MAPPARTOK in reply to this packet.',
                     'source': 'S',
                     'type': 'W3GS'},
                72: {'args': [['WORD', 'Send interval'],
                              ['WORD', 'CRC-16 encryption'],
                              ['BYTE', 'Player number'],
                              ['WORD', 'Length of action data'],
                              ['VOID', 'Action data']],
                     'id': 72,
                     'name': 'INCOMING',
                     'remark': 'Informs the client about an action in-game.\n\nThis is used when there is not enough room inside 0x0C W3GS_INCOMING_ACTION. If there are 1452 actions or more, then this packet should be used instead.',
                     'source': 'S',
                     'type': 'W3GS'}}}}
